/* $Id$ */
/* Copyright (C) 2004 Alexander Chernov */

/* This file is derived from `sys/ioctl.h' of the GNU C Library,
   version 2.3.2. The original copyright follows. */

/* Copyright (C) 1991, 92, 93, 94, 96, 98, 99 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307 USA.  */

#ifndef __RCC_SYS_IOCTL_H__
#define __RCC_SYS_IOCTL_H__ 1

#include <features.h>

int enum
{
  _IOC_NRBITS = 8,
#define _IOC_NRBITS _IOC_NRBITS
  _IOC_TYPEBITS = 8,
#define _IOC_TYPEBITS _IOC_TYPEBITS
  _IOC_SIZEBITS = 14,
#define _IOC_SIZEBITS _IOC_SIZEBITS
  _IOC_DIRBITS = 2,
#define _IOC_DIRBITS _IOC_DIRBITS

  _IOC_NRMASK = ((1 << _IOC_NRBITS)-1),
#define _IOC_NRMASK _IOC_NRMASK
  _IOC_TYPEMASK = ((1 << _IOC_TYPEBITS)-1),
#define _IOC_TYPEMASK _IOC_TYPEMASK
  _IOC_SIZEMASK = ((1 << _IOC_SIZEBITS)-1),
#define _IOC_SIZEMASK _IOC_SIZEMASK
  _IOC_DIRMASK = ((1 << _IOC_DIRBITS)-1),
#define _IOC_DIRMASK _IOC_DIRMASK

  _IOC_NRSHIFT = 0,
#define _IOC_NRSHIFT _IOC_NRSHIFT
  _IOC_TYPESHIFT = (_IOC_NRSHIFT+_IOC_NRBITS),
#define _IOC_TYPESHIFT _IOC_TYPESHIFT
  _IOC_SIZESHIFT = (_IOC_TYPESHIFT+_IOC_TYPEBITS),
#define _IOC_SIZESHIFT _IOC_SIZESHIFT
  _IOC_DIRSHIFT = (_IOC_SIZESHIFT+_IOC_SIZEBITS),
#define _IOC_DIRSHIFT _IOC_DIRSHIFT
};

/*
 * Direction bits.
 */
int enum
{
  _IOC_NONE = 0U,
#define _IOC_NONE _IOC_NONE
  _IOC_WRITE = 1U,
#define _IOC_WRITE _IOC_WRITE
  _IOC_READ = 2U,
#define _IOC_READ _IOC_READ
};

#define _IOC(dir,type,nr,size) \
        (((dir)  << _IOC_DIRSHIFT) | \
         ((type) << _IOC_TYPESHIFT) | \
         ((nr)   << _IOC_NRSHIFT) | \
         ((size) << _IOC_SIZESHIFT))

/* used to create numbers */
#define _IO(type,nr)            _IOC(_IOC_NONE,(type),(nr),0)
#define _IOR(type,nr,size)      _IOC(_IOC_READ,(type),(nr),sizeof(size))
#define _IOW(type,nr,size)      _IOC(_IOC_WRITE,(type),(nr),sizeof(size))
#define _IOWR(type,nr,size)     _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),sizeof(size))

/* used to decode ioctl numbers.. */
#define _IOC_DIR(nr)            (((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)
#define _IOC_TYPE(nr)           (((nr) >> _IOC_TYPESHIFT) & _IOC_TYPEMASK)
#define _IOC_NR(nr)             (((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)
#define _IOC_SIZE(nr)           (((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)

/* ...and for the drivers/sound files... */

int enum
{
  IOC_IN = (_IOC_WRITE << _IOC_DIRSHIFT),
#define IOC_IN IOC_IN
  IOC_OUT = (_IOC_READ << _IOC_DIRSHIFT),
#define IOC_OUT IOC_OUT
  IOC_INOUT = ((_IOC_WRITE|_IOC_READ) << _IOC_DIRSHIFT),
#define IOC_INOUT IOC_INOUT
  IOCSIZE_MASK = (_IOC_SIZEMASK << _IOC_SIZESHIFT),
#define IOCSIZE_MASK IOCSIZE_MASK
  IOCSIZE_SHIFT = (_IOC_SIZESHIFT),
#define IOCSIZE_SHIFT IOCSIZE_SHIFT
};

int enum
{
  TCGETS = 0x5401,
#define TCGETS TCGETS
  TCSETS = 0x5402,
#define TCSETS TCSETS
  TCSETSW = 0x5403,
#define TCSETSW TCSETSW
  TCSETSF = 0x5404,
#define TCSETSF TCSETSF
  TCGETA = 0x5405,
#define TCGETA TCGETA
  TCSETA = 0x5406,
#define TCSETA TCSETA
  TCSETAW = 0x5407,
#define TCSETAW TCSETAW
  TCSETAF = 0x5408,
#define TCSETAF TCSETAF
  TCSBRK = 0x5409,
#define TCSBRK TCSBRK
  TCXONC = 0x540A,
#define TCXONC TCXONC
  TCFLSH = 0x540B,
#define TCFLSH TCFLSH
  TIOCEXCL = 0x540C,
#define TIOCEXCL TIOCEXCL
  TIOCNXCL = 0x540D,
#define TIOCNXCL TIOCNXCL
  TIOCSCTTY = 0x540E,
#define TIOCSCTTY TIOCSCTTY
  TIOCGPGRP = 0x540F,
#define TIOCGPGRP TIOCGPGRP
  TIOCSPGRP = 0x5410,
#define TIOCSPGRP TIOCSPGRP
  TIOCOUTQ = 0x5411,
#define TIOCOUTQ TIOCOUTQ
  TIOCSTI = 0x5412,
#define TIOCSTI TIOCSTI
  TIOCGWINSZ = 0x5413,
#define TIOCGWINSZ TIOCGWINSZ
  TIOCSWINSZ = 0x5414,
#define TIOCSWINSZ TIOCSWINSZ
  TIOCMGET = 0x5415,
#define TIOCMGET TIOCMGET
  TIOCMBIS = 0x5416,
#define TIOCMBIS TIOCMBIS
  TIOCMBIC = 0x5417,
#define TIOCMBIC TIOCMBIC
  TIOCMSET = 0x5418,
#define TIOCMSET TIOCMSET
  TIOCGSOFTCAR = 0x5419,
#define TIOCGSOFTCAR TIOCGSOFTCAR
  TIOCSSOFTCAR = 0x541A,
#define TIOCSSOFTCAR TIOCSSOFTCAR
  FIONREAD = 0x541B,
#define FIONREAD FIONREAD
  TIOCINQ = FIONREAD,
#define TIOCINQ TIOCINQ
  TIOCLINUX = 0x541C,
#define TIOCLINUX TIOCLINUX
  TIOCCONS = 0x541D,
#define TIOCCONS TIOCCONS
  TIOCGSERIAL = 0x541E,
#define TIOCGSERIAL TIOCGSERIAL
  TIOCSSERIAL = 0x541F,
#define TIOCSSERIAL TIOCSSERIAL
  TIOCPKT = 0x5420,
#define TIOCPKT TIOCPKT
  FIONBIO = 0x5421,
#define FIONBIO FIONBIO
  TIOCNOTTY = 0x5422,
#define TIOCNOTTY TIOCNOTTY
  TIOCSETD = 0x5423,
#define TIOCSETD TIOCSETD
  TIOCGETD = 0x5424,
#define TIOCGETD TIOCGETD
  TCSBRKP = 0x5425,
#define TCSBRKP TCSBRKP
  TIOCTTYGSTRUCT = 0x5426,
#define TIOCTTYGSTRUCT TIOCTTYGSTRUCT
  TIOCSBRK = 0x5427,
#define TIOCSBRK TIOCSBRK
  TIOCCBRK = 0x5428,
#define TIOCCBRK TIOCCBRK
  TIOCGSID = 0x5429,
#define TIOCGSID TIOCGSID
};

#define TIOCGPTN        _IOR('T',0x30, unsigned int)
#define TIOCSPTLCK      _IOW('T',0x31, int)

int enum
{
  FIONCLEX = 0x5450,
#define FIONCLEX FIONCLEX
  FIOCLEX = 0x5451,
#define FIOCLEX FIOCLEX
  FIOASYNC = 0x5452,
#define FIOASYNC FIOASYNC
  TIOCSERCONFIG = 0x5453,
#define TIOCSERCONFIG TIOCSERCONFIG
  TIOCSERGWILD = 0x5454,
#define TIOCSERGWILD TIOCSERGWILD
  TIOCSERSWILD = 0x5455,
#define TIOCSERSWILD TIOCSERSWILD
  TIOCGLCKTRMIOS = 0x5456,
#define TIOCGLCKTRMIOS TIOCGLCKTRMIOS
  TIOCSLCKTRMIOS = 0x5457,
#define TIOCSLCKTRMIOS TIOCSLCKTRMIOS
  TIOCSERGSTRUCT = 0x5458,
#define TIOCSERGSTRUCT TIOCSERGSTRUCT
  TIOCSERGETLSR = 0x5459,
#define TIOCSERGETLSR TIOCSERGETLSR
  TIOCSERGETMULTI = 0x545A,
#define TIOCSERGETMULTI TIOCSERGETMULTI
  TIOCSERSETMULTI = 0x545B,
#define TIOCSERSETMULTI TIOCSERSETMULTI
  TIOCMIWAIT = 0x545C,
#define TIOCMIWAIT TIOCMIWAIT
  TIOCGICOUNT = 0x545D,
#define TIOCGICOUNT TIOCGICOUNT
  TIOCGHAYESESP = 0x545E,
#define TIOCGHAYESESP TIOCGHAYESESP
  TIOCSHAYESESP = 0x545F,
#define TIOCSHAYESESP TIOCSHAYESESP
  FIOQSIZE = 0x5460,
#define FIOQSIZE FIOQSIZE
};

/* Used for packet mode */
int enum
{
  TIOCPKT_DATA = 0,
#define TIOCPKT_DATA TIOCPKT_DATA
  TIOCPKT_FLUSHREAD = 1,
#define TIOCPKT_FLUSHREAD TIOCPKT_FLUSHREAD
  TIOCPKT_FLUSHWRITE = 2,
#define TIOCPKT_FLUSHWRITE TIOCPKT_FLUSHWRITE
  TIOCPKT_STOP = 4,
#define TIOCPKT_STOP TIOCPKT_STOP
  TIOCPKT_START = 8,
#define TIOCPKT_START TIOCPKT_START
  TIOCPKT_NOSTOP = 16,
#define TIOCPKT_NOSTOP TIOCPKT_NOSTOP
  TIOCPKT_DOSTOP = 32,
#define TIOCPKT_DOSTOP TIOCPKT_DOSTOP
};

int enum { TIOCSER_TEMT = 0x01 };
#define TIOCSER_TEMT TIOCSER_TEMT

#ifndef RCC_SIO_CONSTANTS
#define RCC_SIO_CONSTANTS
#define RCC_SIO_CONSTANTS_1
#define RCC_SIO_CONSTANTS_2
int enum
{
  SIOCADDRT = 0x890B,
#define SIOCADDRT SIOCADDRT
  SIOCDELRT = 0x890C,
#define SIOCDELRT SIOCDELRT
  SIOCRTMSG = 0x890D,
#define SIOCRTMSG SIOCRTMSG
  SIOCGIFNAME = 0x8910,
#define SIOCGIFNAME SIOCGIFNAME
  SIOCSIFLINK = 0x8911,
#define SIOCSIFLINK SIOCSIFLINK
  SIOCGIFCONF = 0x8912,
#define SIOCGIFCONF SIOCGIFCONF
  SIOCGIFFLAGS = 0x8913,
#define SIOCGIFFLAGS SIOCGIFFLAGS
  SIOCSIFFLAGS = 0x8914,
#define SIOCSIFFLAGS SIOCSIFFLAGS
  SIOCGIFADDR = 0x8915,
#define SIOCGIFADDR SIOCGIFADDR
  SIOCSIFADDR = 0x8916,
#define SIOCSIFADDR SIOCSIFADDR
  SIOCGIFDSTADDR = 0x8917,
#define SIOCGIFDSTADDR SIOCGIFDSTADDR
  SIOCSIFDSTADDR = 0x8918,
#define SIOCSIFDSTADDR SIOCSIFDSTADDR
  SIOCGIFBRDADDR = 0x8919,
#define SIOCGIFBRDADDR SIOCGIFBRDADDR
  SIOCSIFBRDADDR = 0x891a,
#define SIOCSIFBRDADDR SIOCSIFBRDADDR
  SIOCGIFNETMASK = 0x891b,
#define SIOCGIFNETMASK SIOCGIFNETMASK
  SIOCSIFNETMASK = 0x891c,
#define SIOCSIFNETMASK SIOCSIFNETMASK
  SIOCGIFMETRIC = 0x891d,
#define SIOCGIFMETRIC SIOCGIFMETRIC
  SIOCSIFMETRIC = 0x891e,
#define SIOCSIFMETRIC SIOCSIFMETRIC
  SIOCGIFMEM = 0x891f,
#define SIOCGIFMEM SIOCGIFMEM
  SIOCSIFMEM = 0x8920,
#define SIOCSIFMEM SIOCSIFMEM
  SIOCGIFMTU = 0x8921,
#define SIOCGIFMTU SIOCGIFMTU
  SIOCSIFMTU = 0x8922,
#define SIOCSIFMTU SIOCSIFMTU
  SIOCSIFNAME = 0x8923,
#define SIOCSIFNAME SIOCSIFNAME
  SIOCSIFHWADDR = 0x8924,
#define SIOCSIFHWADDR SIOCSIFHWADDR
  SIOCGIFENCAP = 0x8925,
#define SIOCGIFENCAP SIOCGIFENCAP
  SIOCSIFENCAP = 0x8926,
#define SIOCSIFENCAP SIOCSIFENCAP
  SIOCGIFHWADDR = 0x8927,
#define SIOCGIFHWADDR SIOCGIFHWADDR
  SIOCGIFSLAVE = 0x8929,
#define SIOCGIFSLAVE SIOCGIFSLAVE
  SIOCSIFSLAVE = 0x8930,
#define SIOCSIFSLAVE SIOCSIFSLAVE
  SIOCADDMULTI = 0x8931,
#define SIOCADDMULTI SIOCADDMULTI
  SIOCDELMULTI = 0x8932,
#define SIOCDELMULTI SIOCDELMULTI
  SIOCGIFINDEX = 0x8933,
#define SIOCGIFINDEX SIOCGIFINDEX
  SIOGIFINDEX = SIOCGIFINDEX,
#define SIOGIFINDEX SIOGIFINDEX
  SIOCSIFPFLAGS = 0x8934,
#define SIOCSIFPFLAGS SIOCSIFPFLAGS
  SIOCGIFPFLAGS = 0x8935,
#define SIOCGIFPFLAGS SIOCGIFPFLAGS
  SIOCDIFADDR = 0x8936,
#define SIOCDIFADDR SIOCDIFADDR
  SIOCSIFHWBROADCAST = 0x8937,
#define SIOCSIFHWBROADCAST SIOCSIFHWBROADCAST
  SIOCGIFCOUNT = 0x8938,
#define SIOCGIFCOUNT SIOCGIFCOUNT
  SIOCGIFBR = 0x8940,
#define SIOCGIFBR SIOCGIFBR
  SIOCSIFBR = 0x8941,
#define SIOCSIFBR SIOCSIFBR
  SIOCGIFTXQLEN = 0x8942,
#define SIOCGIFTXQLEN SIOCGIFTXQLEN
  SIOCSIFTXQLEN = 0x8943,
#define SIOCSIFTXQLEN SIOCSIFTXQLEN
  SIOCDARP = 0x8953,
#define SIOCDARP SIOCDARP
  SIOCGARP = 0x8954,
#define SIOCGARP SIOCGARP
  SIOCSARP = 0x8955,
#define SIOCSARP SIOCSARP
  SIOCDRARP = 0x8960,
#define SIOCDRARP SIOCDRARP
  SIOCGRARP = 0x8961,
#define SIOCGRARP SIOCGRARP
  SIOCSRARP = 0x8962,
#define SIOCSRARP SIOCSRARP
  SIOCGIFMAP = 0x8970,
#define SIOCGIFMAP SIOCGIFMAP
  SIOCSIFMAP = 0x8971,
#define SIOCSIFMAP SIOCSIFMAP
  SIOCADDDLCI = 0x8980,
#define SIOCADDDLCI SIOCADDDLCI
  SIOCDELDLCI = 0x8981,
#define SIOCDELDLCI SIOCDELDLCI
  SIOCDEVPRIVATE = 0x89F0,
#define SIOCDEVPRIVATE SIOCDEVPRIVATE
  SIOCPROTOPRIVATE = 0x89E0,
#define SIOCPROTOPRIVATE SIOCPROTOPRIVATE
};
#endif /* RCC_SIO_CONSTANTS is defined */

struct winsize
{
  unsigned short int ws_row;
  unsigned short int ws_col;
  unsigned short int ws_xpixel;
  unsigned short int ws_ypixel;
};

int enum { NCC = 8 };
#define NCC NCC

struct termio
{
  unsigned short int c_iflag;
  unsigned short int c_oflag;
  unsigned short int c_cflag;
  unsigned short int c_lflag;
  unsigned char c_line;
  unsigned char c_cc[NCC];
};

/* modem lines */
int enum
{
  TIOCM_LE = 0x001,
#define TIOCM_LE TIOCM_LE
  TIOCM_DTR = 0x002,
#define TIOCM_DTR TIOCM_DTR
  TIOCM_RTS = 0x004,
#define TIOCM_RTS TIOCM_RTS
  TIOCM_ST = 0x008,
#define TIOCM_ST TIOCM_ST
  TIOCM_SR = 0x010,
#define TIOCM_SR TIOCM_SR
  TIOCM_CTS = 0x020,
#define TIOCM_CTS TIOCM_CTS
  TIOCM_CAR = 0x040,
#define TIOCM_CAR TIOCM_CAR
  TIOCM_RNG = 0x080,
#define TIOCM_RNG TIOCM_RNG
  TIOCM_DSR = 0x100,
#define TIOCM_DSR TIOCM_DSR
  TIOCM_CD = TIOCM_CAR,
#define TIOCM_CD TIOCM_CD
  TIOCM_RI = TIOCM_RNG,
#define TIOCM_RI TIOCM_RI
};

/* ioctl (fd, TIOCSERGETLSR, &result) where result may be as below */

/* line disciplines */
int enum
{
  N_TTY = 0,
#define N_TTY N_TTY
  N_SLIP = 1,
#define N_SLIP N_SLIP
  N_MOUSE = 2,
#define N_MOUSE N_MOUSE
  N_PPP = 3,
#define N_PPP N_PPP
  N_STRIP = 4,
#define N_STRIP N_STRIP
  N_AX25 = 5,
#define N_AX25 N_AX25
  N_X25 = 6,
#define N_X25 N_X25
  N_6PACK = 7,
#define N_6PACK N_6PACK
  N_MASC = 8,
#define N_MASC N_MASC
  N_R3964 = 9,
#define N_R3964 N_R3964
  N_PROFIBUS_FDL = 10,
#define N_PROFIBUS_FDL N_PROFIBUS_FDL
  N_IRDA = 11,
#define N_IRDA N_IRDA
  N_SMSBLOCK = 12,
#define N_SMSBLOCK N_SMSBLOCK
  N_HDLC = 13,
#define N_HDLC N_HDLC
  N_SYNC_PPP = 14,
#define N_SYNC_PPP N_SYNC_PPP
  N_HCI = 15,
#define N_HCI N_HCI
};

#include <sys/ttydefaults.h>

int ioctl(int fd, unsigned long int request, ...);

#endif /* __RCC_SYS_IOCTL_H__ */
