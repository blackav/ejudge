// This is an auto-generated file, do not edit
// Generated 2008/11/20 23:28:02

#ifndef __PREPARE_META_H__
#define __PREPARE_META_H__

#include <stdlib.h>

enum
{
  SGLOB_sleep_time = 1,
  SGLOB_serve_sleep_time,
  SGLOB_contest_time,
  SGLOB_max_run_size,
  SGLOB_max_run_total,
  SGLOB_max_run_num,
  SGLOB_max_clar_size,
  SGLOB_max_clar_total,
  SGLOB_max_clar_num,
  SGLOB_board_fog_time,
  SGLOB_board_unfog_time,
  SGLOB_autoupdate_standings,
  SGLOB_use_ac_not_ok,
  SGLOB_inactivity_timeout,
  SGLOB_disable_auto_testing,
  SGLOB_disable_testing,
  SGLOB_enable_runlog_merge,
  SGLOB_secure_run,
  SGLOB_detect_violations,
  SGLOB_enable_memory_limit_error,
  SGLOB_stand_ignore_after,
  SGLOB_stand_ignore_after_d,
  SGLOB_contest_finish_time,
  SGLOB_contest_finish_time_d,
  SGLOB_appeal_deadline,
  SGLOB_appeal_deadline_d,
  SGLOB_fog_standings_updated,
  SGLOB_start_standings_updated,
  SGLOB_unfog_standings_updated,
  SGLOB_team_enable_src_view,
  SGLOB_team_enable_rep_view,
  SGLOB_team_enable_ce_view,
  SGLOB_team_show_judge_report,
  SGLOB_disable_clars,
  SGLOB_disable_team_clars,
  SGLOB_disable_submit_after_ok,
  SGLOB_ignore_compile_errors,
  SGLOB_enable_continue,
  SGLOB_enable_report_upload,
  SGLOB_priority_adjustment,
  SGLOB_ignore_success_time,
  SGLOB_disable_failed_test_view,
  SGLOB_always_show_problems,
  SGLOB_disable_user_standings,
  SGLOB_disable_language,
  SGLOB_problem_navigation,
  SGLOB_problem_tab_size,
  SGLOB_vertical_navigation,
  SGLOB_disable_virtual_start,
  SGLOB_disable_virtual_auto_judge,
  SGLOB_enable_auto_print_protocol,
  SGLOB_notify_clar_reply,
  SGLOB_notify_status_change,
  SGLOB_name,
  SGLOB_root_dir,
  SGLOB_serve_socket,
  SGLOB_enable_l10n,
  SGLOB_l10n_dir,
  SGLOB_standings_locale,
  SGLOB_standings_locale_id,
  SGLOB_contest_id,
  SGLOB_socket_path,
  SGLOB_contests_dir,
  SGLOB_lang_config_dir,
  SGLOB_charset,
  SGLOB_standings_charset,
  SGLOB_stand2_charset,
  SGLOB_plog_charset,
  SGLOB_conf_dir,
  SGLOB_script_dir,
  SGLOB_test_dir,
  SGLOB_corr_dir,
  SGLOB_info_dir,
  SGLOB_tgz_dir,
  SGLOB_checker_dir,
  SGLOB_statement_dir,
  SGLOB_plugin_dir,
  SGLOB_test_sfx,
  SGLOB_corr_sfx,
  SGLOB_info_sfx,
  SGLOB_tgz_sfx,
  SGLOB_ejudge_checkers_dir,
  SGLOB_contest_start_cmd,
  SGLOB_description_file,
  SGLOB_contest_plugin_file,
  SGLOB_test_pat,
  SGLOB_corr_pat,
  SGLOB_info_pat,
  SGLOB_tgz_pat,
  SGLOB_clardb_plugin,
  SGLOB_rundb_plugin,
  SGLOB_xuser_plugin,
  SGLOB_var_dir,
  SGLOB_run_log_file,
  SGLOB_clar_log_file,
  SGLOB_archive_dir,
  SGLOB_clar_archive_dir,
  SGLOB_run_archive_dir,
  SGLOB_report_archive_dir,
  SGLOB_team_report_archive_dir,
  SGLOB_xml_report_archive_dir,
  SGLOB_full_archive_dir,
  SGLOB_audit_log_dir,
  SGLOB_team_extra_dir,
  SGLOB_status_dir,
  SGLOB_work_dir,
  SGLOB_print_work_dir,
  SGLOB_diff_work_dir,
  SGLOB_a2ps_path,
  SGLOB_a2ps_args,
  SGLOB_lpr_path,
  SGLOB_lpr_args,
  SGLOB_diff_path,
  SGLOB_compile_dir,
  SGLOB_compile_queue_dir,
  SGLOB_compile_src_dir,
  SGLOB_compile_out_dir,
  SGLOB_compile_status_dir,
  SGLOB_compile_report_dir,
  SGLOB_compile_work_dir,
  SGLOB_run_dir,
  SGLOB_run_queue_dir,
  SGLOB_run_exe_dir,
  SGLOB_run_out_dir,
  SGLOB_run_status_dir,
  SGLOB_run_report_dir,
  SGLOB_run_team_report_dir,
  SGLOB_run_full_archive_dir,
  SGLOB_run_work_dir,
  SGLOB_run_check_dir,
  SGLOB_htdocs_dir,
  SGLOB_score_system,
  SGLOB_score_system_val,
  SGLOB_tests_to_accept,
  SGLOB_is_virtual,
  SGLOB_prune_empty_users,
  SGLOB_rounding_mode,
  SGLOB_rounding_mode_val,
  SGLOB_max_file_length,
  SGLOB_max_line_length,
  SGLOB_max_cmd_length,
  SGLOB_team_info_url,
  SGLOB_prob_info_url,
  SGLOB_standings_file_name,
  SGLOB_stand_header_file,
  SGLOB_stand_footer_file,
  SGLOB_stand_symlink_dir,
  SGLOB_users_on_page,
  SGLOB_stand_file_name_2,
  SGLOB_stand_fancy_style,
  SGLOB_stand_extra_format,
  SGLOB_stand_extra_legend,
  SGLOB_stand_extra_attr,
  SGLOB_stand_table_attr,
  SGLOB_stand_place_attr,
  SGLOB_stand_team_attr,
  SGLOB_stand_prob_attr,
  SGLOB_stand_solved_attr,
  SGLOB_stand_score_attr,
  SGLOB_stand_penalty_attr,
  SGLOB_stand_time_attr,
  SGLOB_stand_self_row_attr,
  SGLOB_stand_r_row_attr,
  SGLOB_stand_v_row_attr,
  SGLOB_stand_u_row_attr,
  SGLOB_stand_success_attr,
  SGLOB_stand_fail_attr,
  SGLOB_stand_trans_attr,
  SGLOB_stand_disq_attr,
  SGLOB_stand_use_login,
  SGLOB_stand_show_ok_time,
  SGLOB_stand_show_att_num,
  SGLOB_stand_sort_by_solved,
  SGLOB_stand_row_attr,
  SGLOB_stand_page_table_attr,
  SGLOB_stand_page_row_attr,
  SGLOB_stand_page_col_attr,
  SGLOB_stand_page_cur_attr,
  SGLOB_stand_collate_name,
  SGLOB_stand_enable_penalty,
  SGLOB_stand_header_txt,
  SGLOB_stand_footer_txt,
  SGLOB_stand2_file_name,
  SGLOB_stand2_header_file,
  SGLOB_stand2_footer_file,
  SGLOB_stand2_header_txt,
  SGLOB_stand2_footer_txt,
  SGLOB_stand2_symlink_dir,
  SGLOB_plog_file_name,
  SGLOB_plog_header_file,
  SGLOB_plog_footer_file,
  SGLOB_plog_header_txt,
  SGLOB_plog_footer_txt,
  SGLOB_plog_update_time,
  SGLOB_plog_symlink_dir,
  SGLOB_internal_xml_update_time,
  SGLOB_external_xml_update_time,
  SGLOB_user_exam_protocol_header_file,
  SGLOB_user_exam_protocol_footer_file,
  SGLOB_user_exam_protocol_header_txt,
  SGLOB_user_exam_protocol_footer_txt,
  SGLOB_prob_exam_protocol_header_file,
  SGLOB_prob_exam_protocol_footer_file,
  SGLOB_prob_exam_protocol_header_txt,
  SGLOB_prob_exam_protocol_footer_txt,
  SGLOB_full_exam_protocol_header_file,
  SGLOB_full_exam_protocol_footer_file,
  SGLOB_full_exam_protocol_header_txt,
  SGLOB_full_exam_protocol_footer_txt,
  SGLOB_extended_sound,
  SGLOB_disable_sound,
  SGLOB_sound_player,
  SGLOB_accept_sound,
  SGLOB_runtime_sound,
  SGLOB_timelimit_sound,
  SGLOB_presentation_sound,
  SGLOB_wrong_sound,
  SGLOB_internal_sound,
  SGLOB_start_sound,
  SGLOB_team_download_time,
  SGLOB_cr_serialization_key,
  SGLOB_show_astr_time,
  SGLOB_ignore_duplicated_runs,
  SGLOB_report_error_code,
  SGLOB_auto_short_problem_name,
  SGLOB_compile_real_time_limit,
  SGLOB_checker_real_time_limit,
  SGLOB_show_deadline,
  SGLOB_use_gzip,
  SGLOB_min_gzip_size,
  SGLOB_use_dir_hierarchy,
  SGLOB_html_report,
  SGLOB_xml_report,
  SGLOB_enable_full_archive,
  SGLOB_cpu_bogomips,
  SGLOB_skip_full_testing,
  SGLOB_skip_accept_testing,
  SGLOB_variant_map_file,
  SGLOB_variant_map,
  SGLOB_enable_printing,
  SGLOB_disable_banner_page,
  SGLOB_team_page_quota,
  SGLOB_user_priority_adjustments,
  SGLOB_user_adjustment_info,
  SGLOB_user_adjustment_map,
  SGLOB_contestant_status_num,
  SGLOB_contestant_status_legend,
  SGLOB_contestant_status_row_attr,
  SGLOB_stand_show_contestant_status,
  SGLOB_stand_show_warn_number,
  SGLOB_stand_contestant_status_attr,
  SGLOB_stand_warn_number_attr,
  SGLOB_unhandled_vars,
  SGLOB_disable_prob_long_name,
  SGLOB_disable_passed_tests,

  SGLOB_LAST_FIELD,
};

struct section_global_data;

int global_get_type(int tag);
size_t global_get_size(int tag);
const char *global_get_name(int tag);
const void *global_get_ptr(const struct section_global_data *ptr, int tag);
void *global_get_ptr_nc(struct section_global_data *ptr, int tag);
int global_lookup_field(const char *name);


enum
{
  SPROB_id = 1,
  SPROB_tester_id,
  SPROB_abstract,
  SPROB_type_val,
  SPROB_manual_checking,
  SPROB_examinator_num,
  SPROB_check_presentation,
  SPROB_scoring_checker,
  SPROB_use_stdin,
  SPROB_use_stdout,
  SPROB_binary_input,
  SPROB_ignore_exit_code,
  SPROB_olympiad_mode,
  SPROB_score_latest,
  SPROB_real_time_limit,
  SPROB_time_limit,
  SPROB_time_limit_millis,
  SPROB_use_ac_not_ok,
  SPROB_team_enable_rep_view,
  SPROB_team_enable_ce_view,
  SPROB_team_show_judge_report,
  SPROB_ignore_compile_errors,
  SPROB_full_score,
  SPROB_variable_full_score,
  SPROB_test_score,
  SPROB_run_penalty,
  SPROB_acm_run_penalty,
  SPROB_disqualified_penalty,
  SPROB_ignore_penalty,
  SPROB_use_corr,
  SPROB_use_info,
  SPROB_use_tgz,
  SPROB_tests_to_accept,
  SPROB_accept_partial,
  SPROB_min_tests_to_accept,
  SPROB_checker_real_time_limit,
  SPROB_disable_user_submit,
  SPROB_disable_tab,
  SPROB_restricted_statement,
  SPROB_disable_submit_after_ok,
  SPROB_disable_auto_testing,
  SPROB_disable_testing,
  SPROB_enable_compilation,
  SPROB_skip_testing,
  SPROB_hidden,
  SPROB_priority_adjustment,
  SPROB_stand_hide_time,
  SPROB_score_multiplier,
  SPROB_prev_runs_to_show,
  SPROB_advance_to_next,
  SPROB_enable_text_form,
  SPROB_stand_ignore_score,
  SPROB_stand_last_column,
  SPROB_disable_security,
  SPROB_super,
  SPROB_short_name,
  SPROB_long_name,
  SPROB_group_name,
  SPROB_test_dir,
  SPROB_test_sfx,
  SPROB_corr_dir,
  SPROB_corr_sfx,
  SPROB_info_dir,
  SPROB_info_sfx,
  SPROB_tgz_dir,
  SPROB_tgz_sfx,
  SPROB_input_file,
  SPROB_output_file,
  SPROB_test_score_list,
  SPROB_score_tests,
  SPROB_standard_checker,
  SPROB_spelling,
  SPROB_statement_file,
  SPROB_alternatives_file,
  SPROB_plugin_file,
  SPROB_xml_file,
  SPROB_stand_attr,
  SPROB_source_header,
  SPROB_source_footer,
  SPROB_test_pat,
  SPROB_corr_pat,
  SPROB_info_pat,
  SPROB_tgz_pat,
  SPROB_type,
  SPROB_ntests,
  SPROB_tscores,
  SPROB_x_score_tests,
  SPROB_test_sets,
  SPROB_ts_total,
  SPROB_ts_infos,
  SPROB_deadline,
  SPROB_t_deadline,
  SPROB_start_date,
  SPROB_t_start_date,
  SPROB_variant_num,
  SPROB_date_penalty,
  SPROB_dp_total,
  SPROB_dp_infos,
  SPROB_disable_language,
  SPROB_enable_language,
  SPROB_require,
  SPROB_checker_env,
  SPROB_valuer_env,
  SPROB_check_cmd,
  SPROB_valuer_cmd,
  SPROB_lang_time_adj,
  SPROB_lang_time_adj_millis,
  SPROB_alternative,
  SPROB_personal_deadline,
  SPROB_pd_total,
  SPROB_pd_infos,
  SPROB_score_bonus,
  SPROB_score_bonus_total,
  SPROB_score_bonus_val,
  SPROB_max_vm_size,
  SPROB_max_data_size,
  SPROB_max_stack_size,
  SPROB_unhandled_vars,
  SPROB_score_view,
  SPROB_score_view_score,
  SPROB_score_view_text,

  SPROB_LAST_FIELD,
};

struct section_problem_data;

int prob_get_type(int tag);
size_t prob_get_size(int tag);
const char *prob_get_name(int tag);
const void *prob_get_ptr(const struct section_problem_data *ptr, int tag);
void *prob_get_ptr_nc(struct section_problem_data *ptr, int tag);
int prob_lookup_field(const char *name);


enum
{
  SLANG_id = 1,
  SLANG_compile_id,
  SLANG_disabled,
  SLANG_compile_real_time_limit,
  SLANG_binary,
  SLANG_priority_adjustment,
  SLANG_insecure,
  SLANG_short_name,
  SLANG_long_name,
  SLANG_key,
  SLANG_arch,
  SLANG_src_sfx,
  SLANG_exe_sfx,
  SLANG_content_type,
  SLANG_cmd,
  SLANG_disable_auto_testing,
  SLANG_disable_testing,
  SLANG_compile_dir,
  SLANG_compile_queue_dir,
  SLANG_compile_src_dir,
  SLANG_compile_out_dir,
  SLANG_compile_status_dir,
  SLANG_compile_report_dir,
  SLANG_compiler_env,
  SLANG_unhandled_vars,
  SLANG_disabled_by_config,

  SLANG_LAST_FIELD,
};

struct section_language_data;

int lang_get_type(int tag);
size_t lang_get_size(int tag);
const char *lang_get_name(int tag);
const void *lang_get_ptr(const struct section_language_data *ptr, int tag);
void *lang_get_ptr_nc(struct section_language_data *ptr, int tag);
int lang_lookup_field(const char *name);


enum
{
  STESTER_id = 1,
  STESTER_name,
  STESTER_problem,
  STESTER_problem_name,
  STESTER_any,
  STESTER_is_dos,
  STESTER_no_redirect,
  STESTER_priority_adjustment,
  STESTER_ignore_stderr,
  STESTER_arch,
  STESTER_key,
  STESTER_memory_limit_type,
  STESTER_secure_exec_type,
  STESTER_abstract,
  STESTER_super,
  STESTER_is_processed,
  STESTER_skip_testing,
  STESTER_no_core_dump,
  STESTER_enable_memory_limit_error,
  STESTER_kill_signal,
  STESTER_max_stack_size,
  STESTER_max_data_size,
  STESTER_max_vm_size,
  STESTER_clear_env,
  STESTER_time_limit_adjustment,
  STESTER_time_limit_adj_millis,
  STESTER_run_dir,
  STESTER_run_queue_dir,
  STESTER_run_exe_dir,
  STESTER_run_out_dir,
  STESTER_run_status_dir,
  STESTER_run_report_dir,
  STESTER_run_team_report_dir,
  STESTER_run_full_archive_dir,
  STESTER_check_dir,
  STESTER_errorcode_file,
  STESTER_error_file,
  STESTER_prepare_cmd,
  STESTER_start_cmd,
  STESTER_check_cmd,
  STESTER_start_env,
  STESTER_checker_env,
  STESTER_standard_checker_used,
  STESTER_memory_limit_type_val,
  STESTER_secure_exec_type_val,

  STESTER_LAST_FIELD,
};

struct section_tester_data;

int tester_get_type(int tag);
size_t tester_get_size(int tag);
const char *tester_get_name(int tag);
const void *tester_get_ptr(const struct section_tester_data *ptr, int tag);
void *tester_get_ptr_nc(struct section_tester_data *ptr, int tag);
int tester_lookup_field(const char *name);

#endif
