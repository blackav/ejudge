<%
/* $Id$ */
%><%@include "priv_includes.csp"
%><%
#include "ej_uuid.h"
#include "mime_type.h"
#include "charsets.h"
#include "fileutl.h"

#define FAIL(c) do { retval = -(c); goto cleanup; } while (0)

int
ns_parse_run_id(
        FILE *fout,
        struct http_request_info *phr,
        const struct contest_desc *cnts,
        struct contest_extra *extra,
        int *p_run_id,
        struct run_entry *pe);
%><%@set getter_name = "csp_get_priv_source_page"
%><%@set ac_prefix = "NEW_SRV_ACTION_"
%><%@page csp_view_priv_source_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "priv_stdvars.csp"
%><%
  path_t src_path;
  struct run_entry info;
  char *src_text = 0; //, *html_text;
  //unsigned char *numb_txt;
  size_t src_len; //, html_len, numb_len;
  time_t start_time;
  int variant, src_flags;
  unsigned char filtbuf1[128];
  time_t run_time;
  int run_id2;
  unsigned char bb[1024];
  const struct section_problem_data *prob = 0;
  const struct section_language_data *lang = 0;
  const unsigned char *ss;
  const struct section_global_data *global = cs->global;
  const unsigned char *run_charset = 0;
  int charset_id = 0;
  int txt_flags = 0;
  path_t txt_path = { 0 };
  char *txt_text = 0;
  size_t txt_size = 0;
  unsigned char title[1024];
  const unsigned char *sep = NULL;
  int run_id;

  if (ns_parse_run_id(out_f, phr, cnts, extra, &run_id, 0) < 0) goto cleanup;

  if (opcaps_check(phr->caps, OPCAP_VIEW_SOURCE) < 0) {
    ns_error(log_f, NEW_SRV_ERR_PERMISSION_DENIED);
    goto cleanup;
  }

  if (ns_cgi_param(phr, "run_charset", &ss) > 0 && ss && *ss)
    run_charset = ss;

  if (run_id < 0 || run_id >= run_get_total(cs->runlog_state)) {
    ns_error(log_f, NEW_SRV_ERR_INV_RUN_ID);
    return 0;
  }
  run_get_entry(cs->runlog_state, run_id, &info);
  if (info.status > RUN_LAST
      || (info.status > RUN_MAX_STATUS && info.status < RUN_TRANSIENT_FIRST)) {
    ns_error(log_f, NEW_SRV_ERR_SOURCE_UNAVAILABLE);
    return 0;
  }

  src_flags = serve_make_source_read_path(cs, src_path, sizeof(src_path), &info);
  if (src_flags < 0) {
    ns_error(log_f, NEW_SRV_ERR_SOURCE_NONEXISTANT);
    return 0;
  }

  if (info.prob_id > 0 && info.prob_id <= cs->max_prob)
    prob = cs->probs[info.prob_id];
  if (info.lang_id > 0 && info.lang_id <= cs->max_lang)
    lang = cs->langs[info.lang_id];

  run_time = info.time;
  if (run_time < 0) run_time = 0;
  start_time = run_get_start_time(cs->runlog_state);
  if (start_time < 0) start_time = 0;
  if (run_time < start_time) run_time = start_time;


  snprintf(title, sizeof(title), "%s %d", _("Viewing run"), run_id);
%><%@include "priv_header.csp"
%>
<s:url name="ViewSourceUrl" ac="view-source">
    <s:param name="run_id" value="run_id" />
</s:url>
<s:url name="ViewReportUrl" ac="view-report">
    <s:param name="run_id" value="run_id" />
</s:url>
<s:url name="ViewUserReportUrl" ac="view-user-report">
    <s:param name="run_id" value="run_id" />
</s:url>
<s:url name="ViewAuditLogUrl" ac="view-audit-log">
    <s:param name="run_id" value="run_id" />
</s:url>

<table class="b0"><tr>
    <td class="b0"><s:a ac="main-page"><s:tr>Main page</s:tr></s:a></td>
    <td class="b0"><s:a url="ViewSourceUrl"><s:tr>Source</s:tr></s:a></td>
    <td class="b0"><s:a url="ViewReportUrl"><s:tr>Report</s:tr></s:a></td>
    <td class="b0"><s:a url="ViewUserReportUrl"><s:tr>User report</s:tr></s:a></td>
    <td class="b0"><s:a url="ViewAuditLogUrl"><s:tr>Audit log</s:tr></s:a></td>
</tr></table>

<s:url name="PrivEditRunPageUrl" ac="priv-edit-run-page">
    <s:param name="run_id" value="run_id" />
</s:url>

<h2><s:tr>Information about run</s:tr> <s:v value="run_id" /><%
  if (phr->role == USER_ROLE_ADMIN && opcaps_check(phr->caps, OPCAP_EDIT_RUN) >= 0) {
%> [<s:a url="PrivEditRunPageUrl"><s:tr>Edit</s:tr></s:a>]
<% } %></h2>

<table>
<tr><td style="width: 10em;"><s:tr>Run ID</s:tr>:</td><td><s:v value="info.run_id" /></td></tr>
<tr><td><s:tr>Submission time</s:tr>:</td><td><s:v value="info.time" />:<s:v value="info.nsec" /></td></tr>
<tr><td><s:tr>Contest time</s:tr>:</td><td><s:v type="duration" value="run_time - start_time, info.nsec" /></td></tr>
<% #if CONF_HAS_LIBUUID - 0 != 0 %>
<tr><td>UUID:</td><td><s:v type="uuid" value="info.run_uuid" /></td></tr>
<% #endif %>

<% snprintf(filtbuf1, sizeof(filtbuf1), "ip == ip(%d)", run_id); %>
<s:url name="FilteredMainUrl" ac="main-page">
    <s:param name="filter_expr" value="filtbuf1" />
</s:url>
<tr><td><s:tr>Originator IP</s:tr></td><td><s:a url="FilteredMainUrl"><s:v value="info.a.ip" /></s:a></td></tr>

<% snprintf(filtbuf1, sizeof(filtbuf1), "uid == %d", info.user_id); %>
<s:url name="FilteredMainUrl" ac="main-page">
    <s:param name="filter_expr" value="filtbuf1" />
</s:url>
<tr><td><s:tr>User ID</s:tr>:</td><td><s:a url="FilteredMainUrl"><s:v value="info.user_id" /></s:a></td></tr>

<tr><td><s:tr>User login</s:tr>:</td><td><s:v value="teamdb_get_login(cs->teamdb_state, info.user_id)" /></td></tr>

<tr><td><s:tr>User name</s:tr>:</td><td><s:v value="teamdb_get_name(cs->teamdb_state, info.user_id)" /></td></tr>

<% if (prob) { %>

<% snprintf(filtbuf1, sizeof(filtbuf1), "prob == \"%s\"",  prob->short_name); %>
<s:url name="FilteredMainUrl" ac="main-page">
    <s:param name="filter_expr" value="filtbuf1" />
</s:url>
<tr><td><s:tr>Problem</s:tr>:</td><td><s:a url="FilteredMainUrl"><s:v value="prob->short_name" escape="false" /> - <s:v value="prob->long_name" /></s:a><%
    if (prob->xml_file && prob->xml_file[0]) {
%><s:url name="SubmitPageUrl" ac="priv-submit-page"><s:param name="problem" value="prob->id" /></s:url> <s:a url="SubmitPageUrl">[<s:tr>Statement</s:tr>]</s:a><%
    }
%></td></tr>
<% } else { %>
<tr><td><s:tr>Problem</s:tr>:</td><td>#<s:v value="info.prob_id" /></td></tr>
<% } %>

<% if (prob && prob->variant_num > 0) {
    variant = info.variant;
    if (!variant) variant = find_variant(cs, info.user_id, info.prob_id, 0);
    if (variant > 0) {
%>
<% snprintf(filtbuf1, sizeof(filtbuf1), "prob == \"%s\" && variant == %d", prob->short_name, variant); %>
<s:url name="FilteredMainUrl" ac="main-page">
    <s:param name="filter_expr" value="filtbuf1" />
</s:url>
<tr><td><s:tr>Variant</s:tr>:</td><td><s:a url="FilteredMainUrl"><%
      if (info.variant > 0) {
%><s:v value="(int) info.variant" /><%
      } else {
%><s:v value="variant" /> (implicit)<%
      }
%></s:a></td></tr>
<%    } else { %>
<tr><td><s:tr>Variant</s:tr>:</td><td><i>unassigned</i></td></tr>
<%    } %>
<% } %>

<%  if (lang) { %>
<% snprintf(filtbuf1, sizeof(filtbuf1), "lang == \"%s\"", lang->short_name); %>
<s:url name="FilteredMainUrl" ac="main-page">
    <s:param name="filter_expr" value="filtbuf1" />
</s:url>
<tr><td><s:tr>Language</s:tr>:</td><td><s:a url="FilteredMainUrl" ><s:v escape="false" value="lang->short_name" /> - <s:v value="lang->long_name" /></s:a></td></tr>
<%  } else if (!info.lang_id) { %>
<tr><td><s:tr>Language</s:tr>:</td><td>N/A</td></tr>
<%  } else { %>
<tr><td><s:tr>Language</s:tr>:</td><td>#<s:v value="info.lang_id" /></td></tr>
<%  } %>

<tr><td><s:tr>EOLN Type</s:tr>:</td><td><s:v type="eoln_type" value="info.eoln_type" /></td></tr>

<%
  run_status_to_str_short(bb, sizeof(bb), info.status);
  snprintf(filtbuf1, sizeof(filtbuf1), "status == %s", bb);
%>
<tr><td><s:tr>Status</s:tr>:</td><td><s:a url="FilteredMainUrl"><s:v type="run_status" value="info.status" /></s:a></td></tr>

<% if (info.passed_mode > 0) { %>
<tr><td><s:tr>Tests passed</s:tr>:</td><td><s:v value="info.test" checkExpr=">= 0" defstr="N/A" /></td></tr>
<% } %>

<%  if (global->score_system == SCORE_KIROV
      || global->score_system == SCORE_OLYMPIAD) {
    if (info.passed_mode <= 0) {
%>
<tr><td><s:tr>Tests passed</s:tr>:</td><td><s:v value="info.test - 1" checkExpr=">= 0" defstr="N/A" /></td></tr>
<%    } %>

<tr><td><s:tr>Score gained</s:tr>:</td><td><s:v value="info.score" checkExpr=">= 0" defstr="N/A" /></td></tr>
<%  } else if (global->score_system == SCORE_MOSCOW) {
    if (info.passed_mode <= 0) {
%>
<tr><td><s:tr>Failed test</s:tr>:</td><td><s:v value="info.test" checkExpr="> 0" defstr="N/A" /></td></tr>
<%    } %>

<tr><td><s:tr>Score gained</s:tr>:</td><td><s:v value="info.score" checkExpr=">= 0" defstr="N/A" /></td></tr>
<%  } else { %>
<%    if (info.passed_mode <= 0) { %>
<tr><td><s:tr>Failed test</s:tr>:</td><td><s:v value="info.test" checkExpr="> 0" defstr="N/A" /></td></tr>
<%    }
  }
%>

<tr><td><s:tr>Marked?</s:tr>:</td><td><s:vb value="info.is_marked" /></td></tr>
</table>

<script language="javascript">
function setDivVisibility(oper, value)
{
  obj1 = document.getElementById("Show" + oper + "Div");
  obj2 = document.getElementById("Hide" + oper + "Div");
  if (value) {
    obj1.style.display = "none";
    obj2.style.display = "";
  } else {
    obj1.style.display = "";
    obj2.style.display = "none";
  }
}
</script>
<div id="ShowExtraDiv">
<a onclick="setDivVisibility('Extra', true)">[<s:tr>More info</s:tr>]</a>
</div>
<div style="display: none;" id="HideExtraDiv">
<a onclick="setDivVisibility('Extra', false)">[<s:tr>Hide extended info</s:tr>]</a>

<br/>

<table>

<% if (!info.lang_id) { %>
<tr><td><s:tr>Content type</s:tr></td><td><s:v type="mime_type" value="info.mime_type" /></td></tr>
<% } %>

<tr><td style="width: 10em;"><s:tr>Imported?</s:tr>:</td><td><s:vb value="info.is_imported" /></td></tr>
<tr><td><s:tr>Hidden?</s:tr>:</td><td><s:vb value="info.is_hidden" /></td></tr>
<tr><td><s:tr>Saved?</s:tr>:</td><td><s:vb value="info.is_saved" /></td></tr>
<tr><td><s:tr>Read-only?</s:tr>:</td><td><s:vb value="info.is_readonly" /></td></tr>
<tr><td><s:tr>Locale ID</s:tr>:</td><td><s:v value="info.locale_id" /></td></tr>

<%  if (global->score_system != SCORE_ACM) { %>
<tr><td><s:tr>Score adjustment</s:tr>:</td><td><s:v value="info.score_adj" /></td></tr>
<%  } %>

<% snprintf(filtbuf1, sizeof(filtbuf1), "size == size(%d)", run_id); %>
<tr><td><s:tr>Size</s:tr>:</td><td><s:a url="FilteredMainUrl"><s:v value="info.size" /></s:a></td></tr>

<% snprintf(filtbuf1, sizeof(filtbuf1), "hash == hash(%d)", run_id); %>
<tr><td><s:tr>Hash value</s:tr>:</td><td><s:a url="FilteredMainUrl"><s:v type="sha1" value="info.sha1" /></s:a></td></tr>

<tr><td><s:tr>Pages printed</s:tr>:</td><td><s:v value="(int) info.pages" /></td></tr>
</table>
</div>

<s:url name="DownloadRunUrl" ac="priv-download-run">
    <s:param name="run_id" value="run_id" />
</s:url>
<p><s:a url="DownloadRunUrl"><s:tr>Download run</s:tr></s:a></p>

<% if (phr->role == USER_ROLE_ADMIN && opcaps_check(phr->caps, OPCAP_EDIT_RUN) >= 0 && info.is_readonly <= 0) { %>
<s:form>
<s:hidden name="run_id" />
<p><s:submit ac="clear-run" /></p>
</s:form>
<% } %>

<% if (opcaps_check(phr->caps, OPCAP_PRINT_RUN) >= 0) { %>
<s:form>
<s:hidden name="run_id" />
<p><s:submit ac="print-run" /></p>
</s:form>
<% } %>

<%
  if (run_id > 0) {
    run_id2 = run_find(cs->runlog_state, run_id - 1, 0, info.user_id,
                       info.prob_id, info.lang_id, NULL, NULL);
  }
%>

<s:form>
<s:hidden name="run_id" />
<p><s:tr>Compare this run with run</s:tr>: <s:textfield name="run_id2" checkExpr=">= 0" size="10" /> <s:submit ac="compare-runs" /></p>
</s:form>

<s:form>
<s:hidden name="run_id" />
<p><s:tr>Charset</s:tr>: <% charset_html_select(out_f, "run_charset", run_charset); %> <s:submit ac="view-source" /></p>
</s:form>

<% if (global->enable_report_upload) { %>
<s:form enctype="multipart/form-data">
<s:hidden name="run_id" />
<p><s:tr>Upload judging protocol</s:tr>: <input type="file" name="file" /><%
    if (global->team_enable_rep_view) {
%> <s:checkbox name="judge_report" checkedExpr="1" /><s:tr>Judge's report</s:tr><%
%> <s:checkbox name="user_report" checkedExpr="1" /><s:tr>User's report</s:tr><%
} %><s:submit ac="upload-report" />
</s:form>
<% } %>

<hr />

<%  if (prob && prob->type > 0 && info.mime_type > 0) {
    if(info.mime_type >= MIME_TYPE_IMAGE_FIRST
       && info.mime_type <= MIME_TYPE_IMAGE_LAST) {
%>
<s:url name="PrivDownloadRunUrl" ac="priv-download-run">
    <s:param name="run_id" value="run_id" />
    <s:param name="no_disp" value="1" />
</s:url>
<p><s:img url="PrivDownloadRunUrl" label="Submit image" /></p>
<%    } else { %>
<p><s:tr>The submission is binary and thus is not shown.</s:tr></p>
<%    }
  } else if (lang && lang->binary) {
%><p><s:tr>The submission is binary and thus is not shown.</s:tr></p>
<%  } else if (!info.is_imported) {
    if (src_flags < 0 || generic_read_file(&src_text, 0, &src_len, src_flags, 0, src_path, "") < 0) {
%>
<big><font color="red"><s:tr>Cannot read source text!</s:tr></font></big>
<%    } else {
      if (run_charset && (charset_id = charset_get_id(run_charset)) > 0) {
        unsigned char *newsrc = charset_decode_to_heap(charset_id, src_text);
        xfree(src_text);
        src_text = newsrc;
        src_len = strlen(src_text);
      }
%>
<table class="b0"><% text_table_number_lines(out_f, src_text, src_len, 0, " class=\"b0\""); %></table><br/><hr/>
<%
      xfree(src_text); src_text = 0;
    }
  }
%>

<%
  txt_flags = serve_make_report_read_path(cs, txt_path, sizeof(txt_path), &info);
  if (txt_flags >= 0) {
    if (generic_read_file(&txt_text, 0, &txt_size, txt_flags, 0,
                          txt_path, 0) >= 0) {
%>
<h2><s:tr>Style checker output</s:tr></h2>
<pre><s:v value="txt_text" /></pre>
<%
      xfree(txt_text); txt_text = 0; txt_size = 0;
    }
  }
%>

<h2><s:tr>Send a message about this run</s:tr></h2>

<s:form id="run_comment">
<s:hidden name="run_id" />

<table class="b0"><tr>
<td class="b0"><s:submit ac="priv-submit-run-just-ignore" /></td>
<td class="b0"><s:submit ac="priv-submit-run-just-ok" /></td>
</tr></table>

<table class="b0"><tr>
<td><s:button onclick="formatViolation()" label="Formatting rules violation" /></td>
</tr></table>

<p><textarea id="msg_text" name="msg_text" rows="20" cols="60"></textarea></p>

<table class="b0"><tr>
<td class="b0"><s:submit ac="priv-submit-run-comment" /></td>
<td class="b0"><s:submit ac="priv-submit-run-comment-and-ignore" /></td>
<td class="b0"><s:submit ac="priv-submit-run-comment-and-ok" /></td>
<td class="b0"><s:submit ac="priv-set-run-rejected" /></td>
</tr></table></s:form>
<%@include "priv_footer.csp"
%><%
  l10n_setlocale(0);
cleanup:
  html_armor_free(&ab);
%>
