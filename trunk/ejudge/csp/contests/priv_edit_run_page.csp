<%
/* $Id$ */
%><%@include "priv_includes.csp"
%><%@set ac_prefix = "NEW_SRV_ACTION_"
%><%@set getter_name = "csp_get_priv_edit_run_page"
%><%@page csp_view_priv_edit_run_page(PageInterface *ps, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%
  const struct section_global_data *global = cs->global;
  const struct section_problem_data *prob = NULL;
  const struct section_language_data *lang = NULL;
  time_t start_time = 0, run_time = 0;
  struct run_entry info;
  unsigned char hbuf[1024], buf[1024];
  const unsigned char *str = NULL;
  struct html_armor_buffer ab = HTML_ARMOR_INITIALIZER;
  const unsigned char *s;
  const unsigned char *dis = "";
  int run_id = 0;

  if (ns_cgi_param(phr, "run_id", &s) <= 0
      || sscanf(s, "%d%n", &run_id, &n) != 1 || s[n]
      || run_id < 0 || run_id >= run_get_total(cs->runlog_state)) {
    ns_html_err_inv_param(fout, phr, 1, "cannot parse run_id");
    return -1;
  }

  if (opcaps_check(phr->caps, OPCAP_EDIT_RUN) < 0) {
    ns_error(log_f, NEW_SRV_ERR_PERMISSION_DENIED);
    goto cleanup;
  }

  if (run_id < 0 || run_id >= run_get_total(cs->runlog_state)) {
    ns_error(log_f, NEW_SRV_ERR_INV_RUN_ID);
    goto done;
  }
  if (run_get_entry(cs->runlog_state, run_id, &info) < 0) {
    ns_error(log_f, NEW_SRV_ERR_INV_RUN_ID);
    goto done;
  }
  if (info.status < 0 || info.status > RUN_MAX_STATUS) {
    ns_error(log_f, NEW_SRV_ERR_INV_RUN_ID);
    goto done;
  }

  l10n_setlocale(phr->locale_id);

  unsigned char title[1024];
  snprintf(title, sizeof(title), "%s %d", _("Editing run"), run_id);
%><@include "priv_header.csp"
%><%
  ns_write_run_view_menu(f, phr, cnts, extra, run_id);

  if (global->is_virtual) {
    start_time = run_get_virtual_start_time(cs->runlog_state, info.user_id);
  } else {
    start_time = run_get_start_time(cs->runlog_state);
  }
  if (start_time < 0) start_time = 0;
  run_time = info.time;
  if (run_time < 0) run_time = 0;
  if (run_time < start_time) run_time = start_time;

  if (info.is_readonly > 0) dis = " disabled=\"disabled\"";
%>
<s:url name="ViewSourceUrl" ac="view-source">
  <s:param name="run_id" value="run_id" />
</s:url>
<h2><s:tr>Run</s:tr> <s:v value="run_id" /> [<s:a url="ViewSourceUrl"><s:tr>Source</s:tr></s:a>]</h2>
<s:form>
<s:hidden name="action" value="0" zzvalue="(int) NEW_SRV_ACTION_PRIV_EDIT_RUN_ACTION" />
<s:hidden name="run_id" />
<%  unsigned char *cl = " class=\"b0\""; %>
<table class="b0">
<tr><td class="b0"><s:tr>Run ID</s:tr>:</td><td class="b0"><s:v value="run_id" /></td></tr>
<%  if (run_time != info.time) {
    if (info.time <= 0) { %>
<tr><td class="b0"><s:tr>DB timestamp</s:tr>:</td><td class="b0"><s:v value="(long) info.time" />.<s:v format="06" value="info.nsec / 1000" /></td></tr>
<%    } else { %>
<tr><td class="b0"><s:tr>DB time</s:tr></td><td class="b0"><s:v value="info.time" />.<s:v format="06" value="info.nsec / 1000" /></td></tr>
<%    }
  } %>
<%  if (run_time <= 0) {%>
<tr><td class="b0"><s:tr>Timestamp</s:tr>:</td><td class="b0"><s:v value="(long) run_time" />.<s:v format="06" value="info.nsec / 1000" /></td></tr>
<%  } else { %>
<tr><td class="b0"><s:tr>Time</s:tr></td><td class="b0"><s:v value="run_time" />.<s:v format="06" value="info.nsec / 1000" /></td></tr>
<%  } %>
<tr><td class="b0"><s:tr>Contest time</s:tr></td><td class="b0"><s:v value="duration_str_2(hbuf, sizeof(hbuf), run_time - start_time, info.nsec)" /></td></tr>
<%  if (info.user_id <= 0 || !(str = teamdb_get_login(cs->teamdb_state, info.user_id))) {
    snprintf(buf, sizeof(buf), "#%d", info.user_id);
    str = buf;
  } %>
<tr><td class="b0"><s:tr>User login/ID</s:tr></td><td class="b0"><s:textfield name="user" size="20" value="str" disabledExpr="info.is_readonly" /></td></tr>
<%  if ((str = teamdb_get_name(cs->teamdb_state, info.user_id))) { %>
<tr><td class="b0"><s:tr>User name</s:tr></td><td class="b0"><s:v value="str" /></td></tr>
<%  } %>
<%
  fprintf(f, "<tr><td%s>%s:</td><td%s><select name=\"prob\"%s>", cl, "Prob name/ID", cl, dis);
  if (info.prob_id <= 0 || info.prob_id > cs->max_prob || !(prob = cs->probs[info.prob_id])) {
    fprintf(f, "<option value=\"%d\" selected=\"selected\">#%d</option>",
            info.prob_id, info.prob_id);
  }
  for (int prob_id = 1; prob_id <= cs->max_prob; ++prob_id) {
    if (cs->probs[prob_id]) {
      s = "";
      if (info.prob_id == prob_id) s = " selected=\"selected\"";
      fprintf(f, "<option value=\"%d\"%s>%s - %s</option>",
              prob_id, s, cs->probs[prob_id]->short_name,
              ARMOR(cs->probs[prob_id]->long_name));
    }
  }
  fprintf(f, "</select></td></tr>\n");

  if (prob && prob->variant_num > 0) {
    str = "";
    if (info.variant > 0) {
      snprintf(buf, sizeof(buf), "%d", info.variant);
      str = buf;
    }
    fprintf(f, "<tr><td%s>%s:</td><td%s>%s</td></tr>\n", cl, "Variant",
            cl, html_input_text(hbuf, sizeof(hbuf), "variant", 20, info.is_readonly, "%s", str));
  }

  fprintf(f, "<tr><td%s>%s:</td><td%s><select name=\"lang\"%s>", cl, "Lang name/ID", cl, dis);
  if (info.lang_id == 0) {
    fprintf(f, "<option value=\"0\" selected=\"selected\"></option>");
    str = "";
  } else if (info.lang_id < 0 || info.lang_id > cs->max_lang || !(lang = cs->langs[info.lang_id])) {
    fprintf(f, "<option value=\"%d\" selected=\"selected\">#%d</option>", info.lang_id, info.lang_id);
  }
  for (int lang_id = 1; lang_id <= cs->max_lang; ++lang_id) {
    if (cs->langs[lang_id]) {
      s = "";
      if (info.lang_id == lang_id) s = " selected=\"selected\"";
      fprintf(f, "<option value=\"%d\"%s>%s - %s</option>",
              lang_id, s, cs->langs[lang_id]->short_name,
              ARMOR(cs->langs[lang_id]->long_name));
    }
  }
  fprintf(f, "</select></td></tr>\n");
%>

<%
  fprintf(f, "<tr><td%s>%s:</td><td%s><select name=\"eoln_type\"%s>",
          cl, "EOLN Type", cl, dis);
  fprintf(f, "<option value=\"0\"></option>");
  s = "";
  if (info.eoln_type == 1) s = " selected=\"selected\"";
  fprintf(f, "<option value=\"1\"%s>LF (Unix/MacOS)</option>", s);
  s = "";
  if (info.eoln_type == 2) s = " selected=\"selected\"";
  fprintf(f, "<option value=\"2\"%s>CRLF (Windows/DOS)</option>", s);
  fprintf(f, "</select></td></tr>\n");
%>
<tr><td class="b0"><s:tr>Status</s:tr></td><% write_change_status_dialog(cs, f, NULL, info.is_imported, "b0", info.status, info.is_readonly); %></tr>
<%
  buf[0] = 0;
  if (info.passed_mode > 0) {
    if (info.test >= 0) {
      snprintf(buf, sizeof(buf), "%d", info.test);
    }
    s = "Tests passed";
  } else {
    if (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD) {
      if (info.test > 0) {
        snprintf(buf, sizeof(buf), "%d", info.test - 1);
      }
      s = "Tests passed";
    } else if (global->score_system == SCORE_MOSCOW || global->score_system == SCORE_ACM) {
      if (info.test > 0) {
        snprintf(buf, sizeof(buf), "%d", info.test);
      }
      s = "Failed test";
    } else {
      abort();
    }
  }
  fprintf(f, "<tr><td%s>%s:</td><td%s>%s</td></tr>\n", cl, s,
          cl, html_input_text(hbuf, sizeof(hbuf), "test", 20, info.is_readonly, "%s", buf));
%>
<%
  if (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD
      || global->score_system == SCORE_MOSCOW) {
    buf[0] = 0;
    if (info.score >= 0) {
      snprintf(buf, sizeof(buf), "%d", info.score);
    }
    fprintf(f, "<tr><td%s>%s:</td><td%s>%s</td></tr>\n", cl, "Score",
            cl, html_input_text(hbuf, sizeof(hbuf), "score", 20, info.is_readonly, "%s", buf));

    fprintf(f, "<tr><td%s>%s:</td><td%s>%s</td></tr>\n", cl, "Score adjustment",
            cl, html_input_text(hbuf, sizeof(hbuf), "score_adj", 20, info.is_readonly, "%d", info.score_adj));
  }
%>
<s:checkbox name="is_marked" checkedExpr="info.is_marked" disabledExpr="info.is_readonly" />
<%
  if (global->separate_user_score > 0) {
    fprintf(f, "<tr><td%s>%s:</td><td%s>%s</td></tr>\n", cl, "Has saved score",
            cl, html_checkbox(hbuf, sizeof(hbuf), "is_saved", "1", info.is_saved, info.is_readonly));
    fprintf(f, "<tr><td%s>%s:</td>", cl, "Saved status");
    write_change_status_dialog(cs, f, "saved_status", info.is_imported, "b0", info.saved_status,
                               info.is_readonly);
    fprintf(f, "</tr>\n");
    buf[0] = 0;
    if (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD) {
      snprintf(buf, sizeof(buf), "%d", info.saved_test);
      s = "Saved tests passed";
    } else if (global->score_system == SCORE_MOSCOW || global->score_system == SCORE_ACM) {
      if (info.saved_test > 0) {
        snprintf(buf, sizeof(buf), "%d", info.saved_test);
      }
      s = "Saved failed test";
    } else {
      abort();
    }
    fprintf(f, "<tr><td%s>%s:</td><td%s>%s</td></tr>\n", cl, s,
            cl, html_input_text(hbuf, sizeof(hbuf), "saved_test", 20, info.is_readonly, "%s", buf));
    if (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD
        || global->score_system == SCORE_MOSCOW) {
      buf[0] = 0;
      if (info.saved_score >= 0) {
        snprintf(buf, sizeof(buf), "%d", info.saved_score);
      }
      fprintf(f, "<tr><td%s>%s:</td><td%s>%s</td></tr>\n", cl, "Saved score",
              cl, html_input_text(hbuf, sizeof(hbuf), "saved_score", 20, info.is_readonly, "%s", buf));
    }
  }
%>
<tr><td class="b0">IP:</td><td class="b0"><s:textfield name="ip" size="20" disabledExpr="info.is_readonly" value="info.a.ip" /></td></tr>
<tr><td class="b0">SSL:</td><td class="b0"><s:checkbox name="ssl_flag" checkedExpr="info.ssl_flag" disabledExpr="info.is_readonly" /></td></tr>
<tr><td class="b0">Size:</td><td class="b0"><s:textfield name="size" size="20" disabledExpr="info.is_readonly" value="info.size" /></td></tr>
<tr><td class="b0">SHA1:</td><td class="b0"><s:textfield name="sha1" size="60" disabledExpr="info.is_readonly" escape="false" value="unparse_sha1(info.sha1)" /></td></tr>
<% #if CONF_HAS_LIBUUID - 0 != 0 %>
<tr><td class="b0">UUID:</td><td class="b0"><s:textfield name="sha1" size="60" disabledExpr="info.is_readonly" escape="false" value='ej_uuid_unparse(info.run_uuid, "")' /></td></tr>
<% #endif %>
<%  if (!info.lang_id) { %>
<tr><td class="b0">Content type:</td><td class="b0"><s:textfield name="mime_type" size="60" disabledExpr="info.is_readonly" value="mime_type_get_type(info.mime_type)" /></td></tr>
<%  } %>
<tr><td class="b0">Hidden:</td><td class="b0"><s:checkbox name="is_hidden" checkedExpr="info.is_hidden" disabledExpr="info.is_readonly" /></td></tr>
<tr><td class="b0">Imported:</td><td class="b0"><s:checkbox name="is_imported" checkedExpr="info.is_imported" disabledExpr="info.is_readonly" /></td></tr>
<tr><td class="b0">Read-only:</td><td class="b0"><s:checkbox name="is_readonly" checkedExpr="info.is_readonly" /></td></tr>

<tr><td class="b0">Locale ID:</td><td class="b0"><s:textfield name="locale_id" size="20" disabledExpr="info.is_readonly" value="info.locale_id" /></td></tr>
<%  if (global->enable_printing > 0) { %>
<tr><td class="b0">Pages printed:</td><td class="b0"><s:textfield name="pages" size="20" disabledExpr="info.is_readonly" value="(int) info.pages" /></td></tr>
<%  } %>
<table>

<table class="b0">
<tr>
<td class="b0"><s:submit name="save" value='"Save"' /></td>
<td class="b0"><s:submit name="cancel" value='"Cancel"' /></td>
</tr>
</table>
</form>
%><%@include "priv_footer.csp"
%><%
  l10n_setlocale(0);
done:;
  html_armor_free(&ab);
}
%>
