<div class="h2-long"><h2><s:_>Problem status summary</s:_></h2></div>
<%
    if (cnts->exam_mode && global->score_system == SCORE_OLYMPIAD
        && global->is_virtual && stop_time > 0
        && global->disable_virtual_auto_judge > 0
        && !cs->testing_finished) {
      char *ff_txt = 0, *fl_txt = 0;
      size_t ff_len = 0, fl_len = 0;
      FILE *ff = open_memstream(&ff_txt, &ff_len);
      FILE *fl = open_memstream(&fl_txt, &fl_len);
      int rr = ns_olympiad_final_user_report(ff, fl, cnts, cs,
                                             phr->user_id, phr->locale_id);
      if (rr < 0) {
%><p><s:_>Error</s:_> <s:v value="-rr" /><%
      } else {
        close_memstream(fl); fl = 0;
        if (fl_txt && *fl_txt) {
%><pre><font color="red"><s:v value="fl_txt" /></font></pre><%
          xfree(fl_txt); fl_txt = 0; fl_len = 0;
          close_memstream(ff); ff = 0; xfree(ff_txt); ff_txt = 0; ff_len = 0;
        } else {
          close_memstream(ff); ff = 0;
%><s:v value="ff_txt" escape="false" /><%
          xfree(fl_txt); fl_txt = 0; fl_len = 0;
          xfree(ff_txt); ff_txt = 0; ff_len = 0;
        }
      }
    } else if (cnts->exam_mode && global->score_system == SCORE_OLYMPIAD
               && global->is_virtual && stop_time > 0
               && (run_has_transient_user_runs(cs->runlog_state, phr->user_id)
                   || (global->disable_virtual_auto_judge <= 0
                       && !is_judged_virtual_olympiad(cs, phr->user_id)))) {
%><p><s:_>Testing is in progress...</s:_></p><%
    } else {
      if (global->score_system == SCORE_OLYMPIAD
          && global->is_virtual
          && cs->testing_finished)
        accepting_mode = 0;
      if (cs->contest_plugin
          && cs->contest_plugin->generate_html_user_problems_summary) {
        // FIXME: return code and logging stream is not used now
        char *us_text = 0;
        size_t us_size = 0;
        FILE *us_file = open_memstream(&us_text, &us_size);
        (*cs->contest_plugin->generate_html_user_problems_summary)(cs->contest_plugin_data, us_file, out_f, cnts, cs, phr->user_id, accepting_mode, "b1", pinfo);
        close_memstream(us_file); us_file = 0;
        xfree(us_text); us_text = 0;
      } else {
        int separate_user_score = (global->separate_user_score > 0 && cs->online_view_judge_score <= 0);
        int total_score = 0;
        int act_status = RUN_CHECK_FAILED;
%>
<table border="1" class="b1">
    <tr>
<%
        if (cnts->exam_mode > 0 || global->disable_prob_long_name > 0) {
%>
        <th class="b1"><s:_>Problem</s:_></th>
<%
        } else {
%>
        <th class="b1"><s:_>Short name</s:_></th>
        <th class="b1"><s:_>Long name</s:_></th>
<%
        }
%>
        <th class="b1"><s:_>Status</s:_></th>
<%
        if (global->score_system == SCORE_OLYMPIAD && accepting_mode) {
          if (global->disable_passed_tests <= 0) {
%>
        <th class="b1"><s:_>Tests passed</s:_></th>
<%
          }
        } else if ((global->score_system == SCORE_OLYMPIAD && !accepting_mode) || global->score_system == SCORE_KIROV) {
          if (global->disable_passed_tests <= 0) {
%>
        <th class="b1"><s:_>Tests passed</s:_></th>
<%
          }
%>
        <th class="b1"><s:_>Score</s:_></th>
<%
        } else if (global->score_system == SCORE_MOSCOW) {
%>
        <th class="b1"><s:_>Failed test</s:_></th>
        <th class="b1"><s:_>Score</s:_></th>
<%
        } else {
%>
        <th class="b1"><s:_>Failed test</s:_></th>
<%
        }
        if (!cnts->exam_mode) {
%>
        <th class="b1"><s:_>Run ID</s:_></th>
<%
        }
%>
    </tr>

<%
        for (prob_id = 1; prob_id <= cs->max_prob; prob_id++) {
          if (!(prob = cs->probs[prob_id])) continue;
          if (!serve_is_problem_started(cs, phr->user_id, prob)) continue;
          if (prob->hidden > 0) continue;

          const unsigned char *s = "";
          if (pinfo[prob_id].accepted_flag || pinfo[prob_id].solved_flag || pinfo[prob_id].pr_flag) {
            s = " bgcolor=\"#ddffdd\"";
          } else if (pinfo[prob_id].pending_flag) {
            s = " bgcolor=\"#ffffdd\"";
          } else if (!pinfo[prob_id].pending_flag && pinfo[prob_id].attempts) {
            s = " bgcolor=\"#ffdddd\"";
          }
%>
    <s:tr attr="s">
<%
          if (cnts->exam_mode > 0) {
%>
        <td class="b1"><s:v value="prob->long_name" /></td>
<%
          } else {
%>
        <td class="b1"><%
            if (global->prob_info_url[0]) {
              unsigned char url_buf[4096];
              sformat_message(url_buf, sizeof(url_buf), 0, global->prob_info_url, NULL, prob, NULL, NULL, NULL, 0, 0, 0);
%><a href="<s:v value="url_buf" escape="false"/>" target="_blank"><%
            }
%><s:v value="prob->short_name" /><%
            if (global->prob_info_url[0]) {
%></a><%
            }
%></td>
<%
            if (global->disable_prob_long_name <= 0) {
%>
        <td class="b1"><s:v value="prob->long_name" /></td>
<%
            }
          }

          if (pinfo[prob_id].best_run < 0) {
            if (global->score_system == SCORE_KIROV || (global->score_system == SCORE_OLYMPIAD && !accepting_mode) || global->score_system == SCORE_MOSCOW) {
%>
        <td class="b1">&nbsp;</td>
        <td class="b1">&nbsp;</td>
<%
              if (global->disable_passed_tests <= 0) {
%>
        <td class="b1">&nbsp;</td>
<%
              }
              if (!cnts->exam_mode) {
%>
        <td class="b1">&nbsp;</td>
<%
              }
            } else {
%>
        <td class="b1">&nbsp;</td>
        <td class="b1">&nbsp;</td>
<%
              if (!cnts->exam_mode) {
%>
        <td class="b1">&nbsp;</td>
<%
              }
            }
          } else {
            int status, test;
            struct run_entry re;
            run_get_entry(cs->runlog_state, pinfo[prob_id].best_run, &re);
            if (separate_user_score > 0 && re.is_saved) {
              status = re.saved_status;
              act_status = re.saved_status;
              test = re.saved_test;
            } else {
              status = re.status;
              act_status = re.status;
              test = re.test;
            }
            if (global->score_system == SCORE_OLYMPIAD && accepting_mode) {
              if (act_status == RUN_OK || act_status == RUN_PARTIAL || (act_status == RUN_WRONG_ANSWER_ERR && prob->type != PROB_TYPE_STANDARD)) {
                act_status = RUN_ACCEPTED;
              }
            }
            run_status_str(act_status, hbuf, sizeof(hbuf), prob->type, prob->scoring_checker);
%>
        <td class="b1"><s:v value="hbuf" escape="false" /></td>
<%
            if (global->score_system == SCORE_OLYMPIAD && accepting_mode) {
              if (global->disable_passed_tests <= 0) {
                switch (act_status) {
                case RUN_RUN_TIME_ERR:
                case RUN_TIME_LIMIT_ERR:
                case RUN_WALL_TIME_LIMIT_ERR:
                case RUN_PRESENTATION_ERR:
                case RUN_WRONG_ANSWER_ERR:
                case RUN_MEM_LIMIT_ERR:
                case RUN_SECURITY_ERR:
%>
        <td class="b1"><s:v value="test" /></td>
<%
                  break;
                default:
%>
        <td class="b1">&nbsp;</td>
<%
                  break;
                }
              }
            } else if (global->score_system == SCORE_OLYMPIAD) {
              total_score += pinfo[prob_id].best_score;
              switch (status) {
              case RUN_OK:
              case RUN_PARTIAL:
                if (prob->type != PROB_TYPE_STANDARD) {
                  if (global->disable_passed_tests <= 0) {
%>
        <td class="b1">&nbsp;</td>
<%
                  }
%>
        <td class="b1"><% score_view_display_f(out_f, prob, pinfo[prob_id].best_score); %></td>
<%
                } else {
                  if (re.passed_mode > 0) { 
%>
        <td class="b1"><s:v value="test" /></td>
<%
                  } else {
%>
        <td class="b1"><s:v value="test - 1" /></td>
<%
                  }
%>
        <td class="b1"><% score_view_display_f(out_f, prob, pinfo[prob_id].best_score); %></td>
<%
                }
                break;
              default:
                if (global->disable_passed_tests <= 0) {
%>
        <td class="b1">&nbsp;</td>
<%
                }
%>
        <td class="b1">&nbsp;</td>
<%
                break;
              }
            } else if (global->score_system == SCORE_KIROV) {
              total_score += pinfo[prob_id].best_score;
              switch (status) {
              case RUN_OK:
              case RUN_PARTIAL:
                if (global->disable_passed_tests <= 0) {
                  if (re.passed_mode > 0) {
%>
        <td class="b1"><s:v value="test" /></td>
<%
                  } else {
%>
        <td class="b1"><s:v value="test - 1" /></td>
<%
                  }
                }
%>
        <td class="b1"><% score_view_display_f(out_f, prob, pinfo[prob_id].best_score); %></td>
<%
                break;
              default:
                if (global->disable_passed_tests <= 0) {
%>
        <td class="b1">&nbsp;</td>
<%
                }
%>
        <td class="b1">&nbsp;</td>
<%
                break;
              }
            } else if (global->score_system == SCORE_MOSCOW) {
              total_score += pinfo[prob_id].best_score;
              switch (status) {
              case RUN_OK:
%>
        <td class="b1">&nbsp;</td>
        <td class="b1"><s:v value="pinfo[prob_id].best_score" /></td>
<%
                break;
              case RUN_RUN_TIME_ERR:
              case RUN_TIME_LIMIT_ERR:
              case RUN_WALL_TIME_LIMIT_ERR:
              case RUN_PRESENTATION_ERR:
              case RUN_WRONG_ANSWER_ERR:
              case RUN_MEM_LIMIT_ERR:
              case RUN_SECURITY_ERR:
                if (global->disable_failed_test_view > 0) {
%>
        <td class="b1">&nbsp;</td>
<%
                } else {
%>
        <td class="b1"><s:v value="test" /></td>
<%
                }
%>
        <td class="b1"><s:v value="pinfo[prob_id].best_score" /></td>
<%
                break;
              default:
%>
        <td class="b1">&nbsp;</td>
        <td class="b1">&nbsp;</td>
<%
                break;
              }
            } else {
              // ACM contest
              switch (status) {
              case RUN_RUN_TIME_ERR:
              case RUN_TIME_LIMIT_ERR:
              case RUN_WALL_TIME_LIMIT_ERR:
              case RUN_PRESENTATION_ERR:
              case RUN_WRONG_ANSWER_ERR:
              case RUN_MEM_LIMIT_ERR:
              case RUN_SECURITY_ERR:
                if (global->disable_failed_test_view > 0) {
%>
        <td class="b1">&nbsp;</td>
<%
                } else {
%>
        <td class="b1"><s:v value="test" /></td>
<%
                }
                break;
              default:
%>
        <td class="b1">&nbsp;</td>
<%
                break;
              }
            }
            if (!cnts->exam_mode) {
%>
        <td class="b1"><s:v value="pinfo[prob_id].best_run" /></td>
<%
            }
          }
%>
    </s:tr>
<%
        }
%>
</table>

<%
        if (global->score_n_best_problems > 0 && cs->max_prob > 0) {
          total_score = 0;
          unsigned char *used_flag = NULL;
          XALLOCAZ(used_flag, cs->max_prob + 1);
          for (int i = 0; i < global->score_n_best_problems; ++i) {
            int max_ind = -1;
            int max_score = -1;
            for (prob_id = 1; prob_id <= cs->max_prob; prob_id++) {
              if (!(prob = cs->probs[prob_id])) continue;
              if (used_flag[prob_id]) continue;
              if (pinfo[prob_id].best_score <= 0) continue;
              if (max_ind < 0 || pinfo[prob_id].best_score > max_score) {
                max_ind = prob_id;
                max_score = pinfo[prob_id].best_score;
              }
            }
            if (max_ind < 0) break;
            total_score += max_score;
            used_flag[max_ind] = 1;
          }
        }

        if ((global->score_system == SCORE_OLYMPIAD && !accepting_mode)
            || global->score_system == SCORE_KIROV || global->score_system == SCORE_MOSCOW) {
%>
<p><big><s:_>Total score</s:_>: <s:v value="total_score" /></big></p>
<%
        }
      }
    }
%>
