<%
/* $Id$ */
%>
<%
  int show_details = 0, show_adv = 0;
  if ((flags & SID_STATE_SHOW_HIDDEN)) show_details = 1;
  if ((flags & SID_STATE_SHOW_CLOSED)) show_adv = 1;
  struct section_problem_data *tmp_prob = prepare_copy_problem(prob);
  int prob_type = 0;
  const unsigned char *str_value = 0;
  unsigned char num_buf[1024];
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <tr bgcolor="#b0b0b0">
        <td colspan="2" align="center"><%
  if (is_abstract) {
%><s:v value="prob->short_name" /><%
  } else if (!prob->short_name[0]) {
%>Problem <s:v value="prob->id" /><%
  } else if (!prob->long_name[0]) {
%><s:v value="prob->short_name" /><%
  } else {
%><s:v value="prob->short_name" />: <s:v value="prob->long_name" /><%
  }
%></td>
        <td colspan="2"><%
  if (!show_details) {
%><s:submit ac="prob-show-details" label="Show details" /><%
  } else {
%><s:submit ac="prob-hide-details" label="Hide details" /><%
    if (!show_adv) {
%><s:submit ac="prob-show-advanced" label="Show advanced" /><%
    } else {
%><s:submit ac="prob-hide-advanced" label="Hide advanced" /><%
    }
  }
%><s:submit ac="prob-delete" label="Delete!" /></td>
    </tr>
</s:form>
<%
  if (show_details) {
    const struct section_problem_data *sup_prob = 0;
    int sup_id = 0;
    int j;
    if (!is_abstract && prob->super && prob->super[0]) {
      for (j = 0; j < phr->ss->aprob_u; ++j) {
        if (!strcmp(prob->super, phr->ss->aprobs[j]->short_name)) {
          sup_prob = phr->ss->aprobs[j];
          sup_id = j + 1;
          break;
        }
      }
    }
    row = 1;
%><%
    if (!is_abstract) {
%>
<s:htr attr="form_row_attrs[row ^= 1]">
    <td>Problem ID:</td>
    <td><s:v value="prob->id" /></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
</s:htr>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Problem short name:</td>
        <td><s:textfield name="param" value="prob->short_name" size="48" maxlength="1024" check="no" /><% if (!prob->short_name) { %>(<i>Not set</i>)<% } %></td>
        <td><s:submit ac="prob-change-short-name" label="Change" /><s:submit ac="prob-clear-short-name" label="Clear" /></td>
        <td><s:help ac="prob-change-short-name" /></td>
    </s:htr>
</s:form>

<%
      if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Internal name:</td>
        <td><s:textfield name="param" value="prob->internal_name" size="48" maxlength="1024" check="no" /><% if (!prob->internal_name) { %>(<i>Not set</i>)<% } %></td>
        <td><s:submit ac="prob-change-internal-name" label="Change" /><s:submit ac="prob-clear-internal-name" label="Clear" /></td>
        <td><s:help ac="prob-change-internal-name" /></td>
    </s:htr>
</s:form>
<%
      }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Problem long name:</td>
        <td><s:textfield name="param" value="prob->long_name" size="48" maxlength="1024" check="no" /><% if (!prob->long_name) { %>(<i>Not set</i>)<% } %></td>
        <td><s:submit ac="prob-change-long-name" label="Change" /><s:submit ac="prob-clear-long-name" label="Clear" /></td>
        <td><s:help ac="prob-change-long-name" /></td>
    </s:htr>
</s:form>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Base abstract problem:</td>
        <td><select name="param"><option value="0"></option><%
    for (j = 0; j < phr->ss->aprob_u; ++j) {
%><s:option value="j + 1" selectedExpr="j + 1 == sup_id"><s:v value="phr->ss->aprobs[j]->short_name" /></s:option><%
    }
%></select></td>
        <td><s:submit ac="prob-change-super" label="Change" /></td>
        <td><s:help ac="prob-change-super" /></td>
    </s:htr>
</s:form>
<%
    } else {
%>
<s:htr attr="form_row_attrs[row ^= 1]">
    <td>Problem Name:</td>
    <td><s:v value="prob->short_name" /></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
</s:htr>
<%
    }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Problem type:</td>
        <td><select name="param"><%
    if (is_abstract || !sup_prob) {
      prob_type = prob->type;
      if (prob_type < 0 || prob_type >= PROB_TYPE_LAST) prob_type = 0;
      for (j = 0; j < PROB_TYPE_LAST; ++j) {
%><s:option value="j" selectedExpr="j == prob_type"><s:v value="problem_unparse_type(j)" escape="false" /></s:option><%
      }
    } else {
      prob_type = prob->type;
      if (prob_type < -1 || prob_type >= PROB_TYPE_LAST) prob_type = -1;
      int sup_type = sup_prob->type;
      if (sup_type < 0 || sup_type >= PROB_TYPE_LAST) sup_type = 0;
%><s:option value="-1" selectedExpr="prob_type < 0">Default (<s:v value="problem_unparse_type(sup_type)" escape="false" />)</s:option><%
      for (j = 0; j < PROB_TYPE_LAST; ++j) {
%><s:option value="j" selectedExpr="j == prob->type"><s:v value="problem_unparse_type(j)" escape="false" /></s:option><%
      }
      if (prob_type < 0) prob_type = sup_type;
    }
%></select></td>
        <td><s:submit ac="prob-change-type" label="Change" /></td>
        <td><s:help ac="prob-change-type" /></td>
    </s:htr>
</s:form>

<%
    if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Title for the standings column:</td>
        <td><s:textfield name="param" value="prob->stand_name" size="48" maxlength="1024" check="no" /><% if (!prob->stand_name) { %>(<i>Not set</i>)<% } %></td>
        <td><s:submit ac="prob-change-stand-name" label="Change" /><s:submit ac="prob-clear-stand-name" label="Clear" /></td>
        <td><s:help ac="prob-change-stand-name" /></td>
    </s:htr>
</s:form>
<%
    }
%>

<%
    if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Collate this problem with the specified one:</td>
        <td><s:textfield name="param" value="prob->stand_column" size="48" maxlength="1024" check="no" /><% if (!prob->stand_column) { %>(<i>Not set</i>)<% } %></td>
        <td><s:submit ac="prob-change-stand-column" label="Change" /><s:submit ac="prob-clear-stand-column" label="Clear" /></td>
        <td><s:help ac="prob-change-stand-column" /></td>
    </s:htr>
</s:form>
<%
    }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Problem is checked manually?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->manual_checking == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_manual_checking, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->manual_checking" default="tmp_prob->manual_checking" /><%
    }
%></td>
        <td><s:submit ac="prob-change-manual-checking" label="Change" /></td>
        <td><s:help ac="prob-change-manual-checking" /></td>
    </s:htr>
</s:form>

<%
  if (is_abstract || tmp_prob->manual_checking > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Check output presentation anyway?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->check_presentation == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_check_presentation, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->check_presentation" default="tmp_prob->check_presentation" /><%
    }
%></td>
        <td><s:submit ac="prob-change-check-presentation" label="Change" /></td>
        <td><s:help ac="prob-change-check-presentation" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use standard input?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = prob->use_stdin;
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_stdin, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->use_stdin" default="tmp_prob->use_stdin" /><%
    }
%></td>
        <td><s:submit ac="prob-change-use-stdin" label="Change" /></td>
        <td><s:help ac="prob-change-use-stdin" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Combined standard/file input?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = prob->combined_stdin;
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_combined_stdin, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->combined_stdin" default="tmp_prob->combined_stdin" /><%
    }
%></td>
        <td><s:submit ac="prob-change-combined-stdin" label="Change" /></td>
        <td><s:help ac="prob-change-combined-stdin" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Input file name:</td>
        <td><%
    if (is_abstract || !sup_prob) {
      const unsigned char *value = prob->input_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Not set</i>)<% } %><%
    } else {
      prepare_set_prob_value(CNTSPROB_input_file, tmp_prob, sup_prob, global);
      const unsigned char *value = prob->input_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Default</i>: <i><s:v value="tmp_prob->input_file" /></i>)<% } %><%
    }
%></td>
        <td><s:submit ac="prob-change-input-file" label="Change" /><s:submit ac="prob-clear-input-file" label="Clear" /></td>
        <td><s:help ac="prob-change-input-file" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use standard output?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = prob->use_stdout;
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_stdout, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->use_stdout" default="tmp_prob->use_stdout" /><%
    }
%></td>
        <td><s:submit ac="prob-change-use-stdout" label="Change" /></td>
        <td><s:help ac="prob-change-use-stdout" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Combined standard/file output?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = prob->combined_stdout;
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_combined_stdout, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->combined_stdout" default="tmp_prob->combined_stdout" /><%
    }
%></td>
        <td><s:submit ac="prob-change-combined-stdout" label="Change" /></td>
        <td><s:help ac="prob-change-combined-stdout" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Output file name:</td>
        <td><%
    if (is_abstract || !sup_prob) {
      const unsigned char *value = prob->output_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Not set</i>)<% } %><%
    } else {
      prepare_set_prob_value(CNTSPROB_output_file, tmp_prob, sup_prob, global);
      const unsigned char *value = prob->output_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Default</i>: <i><s:v value="tmp_prob->output_file" /></i>)<% } %><%
    }
%></td>
        <td><s:submit ac="prob-change-output-file" label="Change" /><s:submit ac="prob-clear-output-file" label="Clear" /></td>
        <td><s:help ac="prob-change-output-file" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Consider output to stderr as PE?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = prob->disable_stderr == 1;
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_stderr, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_stderr" default="tmp_prob->disable_stderr" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-stderr" label="Change" /></td>
        <td><s:help ac="prob-change-disable-stderr" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Input data is binary?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = prob->binary_input == 1;
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_binary_input, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->binary_input" default="tmp_prob->binary_input" /><%
    }
%></td>
        <td><s:submit ac="prob-change-binary-input" label="Change" /></td>
        <td><s:help ac="prob-change-binary-input" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type != PROB_TYPE_STANDARD && prob_type != PROB_TYPE_TESTS) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Submit is binary?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = prob->binary == 1;
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_binary, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->binary" default="tmp_prob->binary" /><%
    }
%></td>
        <td><s:submit ac="prob-change-binary" label="Change" /></td>
        <td><s:help ac="prob-change-binary" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv && (is_abstract || tmp_prob->binary_input <= 0)) {
    int value = 0;
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Test normalization mode:</td>
        <td><select name="param"><%
    if (is_abstract || !sup_prob) {
      value = test_normalization_parse(prob->normalization);
      if (value < 0) value = TEST_NORM_NL;
      if (value == TEST_NORM_DEFAULT) value = TEST_NORM_NL;
    } else {
      value = test_normalization_parse(prob->normalization);
      if (value < 0) value = TEST_NORM_DEFAULT;
      int sup_value = test_normalization_parse(sup_prob->normalization);
      if (sup_value < 0) sup_value = TEST_NORM_NL;
      if (sup_value == TEST_NORM_DEFAULT) sup_value = TEST_NORM_NL;
%><s:option value='""' selectedExpr="value == TEST_NORM_DEFAULT">Default (<s:v value="test_normalization_unparse(sup_value)" escape="false" />)</s:option><%
    }
%><s:option value='"none"' selectedExpr="value == TEST_NORM_NONE">none - No normalization</s:option>
<s:option value='"nl"' selectedExpr="value == TEST_NORM_NL">nl - End-of-line normalization</s:option>
<s:option value='"nlws"' selectedExpr="value == TEST_NORM_NLWS">nlws - End-of-line and trailing space normalization</s:option>
<s:option value='"nlwsnp"' selectedExpr="value == TEST_NORM_NLWSNP">nlwsnp - End-of-line, trailing space, and trailing lines normalization</s:option>
<s:option value='"nlnp"' selectedExpr="value == TEST_NORM_NLNP">nlnp - End-of-line and trailing lines normalization</s:option>
</select></td>
        <td><s:submit ac="prob-change-normalization" label="Change" /></td>
        <td><s:help ac="prob-change-normalization" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>XML File with problem statement:</td>
        <td><%
  str_value = prob->xml_file;
  if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
  if (is_abstract) {
%><% if (!str_value) { %>(<i>Not set</i>)<% } %><%
  } else if (!sup_prob) {
    prepare_set_prob_value(CNTSPROB_xml_file, tmp_prob, sup_prob, global);
    if (!str_value) {
%>(<i>Not set</i>)<%
    } else {
%>(<i><s:v value="tmp_prob->xml_file" /></i>)<%
    }
  } else {
    prepare_set_prob_value(CNTSPROB_xml_file, tmp_prob, sup_prob, global);
    if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->xml_file" /></i>)<%
    } else {
%>(<i><s:v value="tmp_prob->xml_file" /></i>)<%
    }
  }
%></td>
        <td><s:submit ac="prob-change-xml-file" label="Change" /><s:submit ac="prob-clear-xml-file" label="Clear" /></td>
        <td><s:help ac="prob-change-xml-file" /></td>
    </s:htr>
</s:form>

<%
  if (global->advanced_layout <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Directory with tests:</td>
        <td><%
    str_value = prob->test_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value || !sup_prob) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_test_dir, tmp_prob, sup_prob, global);
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->test_dir" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-test-dir" label="Change" /><s:submit ac="prob-clear-test-dir" label="Clear" /></td>
        <td><s:help ac="prob-change-test-dir" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract) {
    prepare_set_prob_value(CNTSPROB_test_sfx, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_test_pat, tmp_prob, sup_prob, global);
  }
%>

<%
  if (is_abstract || show_adv || tmp_prob->test_pat[0] >= ' ') {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Pattern for test file names:</td>
        <td><%
    str_value = prob->test_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_pat" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-test-pat" label="Change" /><s:submit ac="prob-clear-test-pat" label="Clear" /></td>
        <td><s:help ac="prob-change-test-pat" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (is_abstract || tmp_prob->test_pat[0] < ' ') {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Suffix of test files:</td>
        <td><%
    str_value = prob->test_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_sfx" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-test-sfx" label="Change" /><s:submit ac="prob-clear-test-sfx" label="Clear" /></td>
        <td><s:help ac="prob-change-test-sfx" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use &quot;correct answer&quot; files for check?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->use_corr > 0);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_corr, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->use_corr" default="tmp_prob->use_corr" /><%
    }
%></td>
        <td><s:submit ac="prob-change-use-corr" label="Change" /></td>
        <td><s:help ac="prob-change-use-corr" /></td>
    </s:htr>
</s:form>

<%
  if (tmp_prob->use_corr > 0 && global->advanced_layout <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Directory with &quot;correct answer&quot; files:</td>
        <td><%
    str_value = prob->corr_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract || !sup_prob) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_corr_dir, tmp_prob, sup_prob, global);
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->corr_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->corr_dir" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-corr-dir" label="Change" /><s:submit ac="prob-clear-corr-dir" label="Clear" /></td>
        <td><s:help ac="prob-change-corr-dir" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!prob->abstract) {
    prepare_set_prob_value(CNTSPROB_corr_sfx, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_corr_pat, tmp_prob, sup_prob, global);
  }
%>

<%
  if (tmp_prob->use_corr > 0 && (is_abstract || show_adv || tmp_prob->corr_pat[0] >= ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Pattern for &quot;correct answer&quot; file names:</td>
        <td><%
    str_value = prob->corr_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->corr_pat" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-corr-pat" label="Change" /><s:submit ac="prob-clear-corr-pat" label="Clear" /></td>
        <td><s:help ac="prob-change-corr-pat" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (tmp_prob->use_corr > 0 && (is_abstract || tmp_prob->corr_pat[0] < ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Suffix of &quot;correct answer&quot; files:</td>
        <td><%
    str_value = prob->corr_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->corr_sfx" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-corr-sfx" label="Change" /><s:submit ac="prob-clear-corr-sfx" label="Clear" /></td>
        <td><s:help ac="prob-change-corr-sfx" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use test info files for check?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->use_info > 0);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_info, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->use_info" default="tmp_prob->use_info" /><%
    }
%></td>
        <td><s:submit ac="prob-change-use-info" label="Change" /></td>
        <td><s:help ac="prob-change-use-info" /></td>
    </s:htr>
</s:form>

<%
  if (tmp_prob->use_info > 0 && global->advanced_layout <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Directory with test info files:</td>
        <td><%
    str_value = prob->info_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_info_dir, tmp_prob, sup_prob, global);
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->info_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->info_dir" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-info-dir" label="Change" /><s:submit ac="prob-clear-info-dir" label="Clear" /></td>
        <td><s:help ac="prob-change-info-dir" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!prob->abstract) {
    prepare_set_prob_value(CNTSPROB_info_sfx, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_info_pat, tmp_prob, sup_prob, global);
  }
%>

<%
  if (tmp_prob->use_info > 0 && (is_abstract || show_adv || tmp_prob->info_pat[0] >= ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Pattern for test info file names:</td>
        <td><%
    str_value = prob->info_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->info_pat" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-info-pat" label="Change" /><s:submit ac="prob-clear-info-pat" label="Clear" /></td>
        <td><s:help ac="prob-change-info-pat" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (tmp_prob->use_info > 0 && (is_abstract || tmp_prob->info_pat[0] < ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Suffix of test info:</td>
        <td><%
    str_value = prob->info_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->info_sfx" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-info-sfx" label="Change" /><s:submit ac="prob-clear-info-sfx" label="Clear" /></td>
        <td><s:help ac="prob-change-info-sfx" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && tmp_prob->use_info > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use special working directory for check?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->use_tgz > 0);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_tgz, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->use_tgz" default="tmp_prob->use_tgz" /><%
    }
%></td>
        <td><s:submit ac="prob-change-use-tgz" label="Change" /></td>
        <td><s:help ac="prob-change-use-tgz" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!prob->abstract) {
    prepare_set_prob_value(CNTSPROB_tgz_sfx, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_tgz_pat, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_tgzdir_sfx, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_tgzdir_pat, tmp_prob, sup_prob, global);
  }
%>

<%
  if (show_adv && tmp_prob->use_tgz > 0 && (is_abstract || tmp_prob->tgz_pat[0] >= ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Pattern for working dir archives:</td>
        <td><%
    str_value = prob->tgz_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgz_pat" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-tgz-pat" label="Change" /><s:submit ac="prob-clear-tgz-pat" label="Clear" /></td>
        <td><s:help ac="prob-change-tgz-pat" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && tmp_prob->use_tgz > 0 && (is_abstract || tmp_prob->tgzdir_pat[0] >= ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Pattern for master working dirs:</td>
        <td><%
    str_value = prob->tgzdir_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgzdir_pat" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-tgzdir-pat" label="Change" /><s:submit ac="prob-clear-tgzdir-pat" label="Clear" /></td>
        <td><s:help ac="prob-change-tgzdir-pat" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && tmp_prob->use_tgz > 0 && (is_abstract || tmp_prob->tgz_pat[0] < ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Suffix of working dir archives:</td>
        <td><%
    str_value = prob->tgz_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgz_sfx" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-tgz-sfx" label="Change" /><s:submit ac="prob-clear-tgz-sfx" label="Clear" /></td>
        <td><s:help ac="prob-change-tgz-sfx" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && tmp_prob->use_tgz > 0 && (is_abstract || tmp_prob->tgzdir_pat[0] < ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Suffix of master working dirs:</td>
        <td><%
    str_value = prob->tgzdir_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgzdir_sfx" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-tgzdir-sfx" label="Change" /><s:submit ac="prob-clear-tgzdir-sfx" label="Clear" /></td>
        <td><s:help ac="prob-change-tgzdir-sfx" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  prepare_set_prob_value(CNTSPROB_time_limit, tmp_prob, sup_prob, global);
  prepare_set_prob_value(CNTSPROB_time_limit_millis, tmp_prob, sup_prob, global);
%>

<%
  if (show_adv || tmp_prob->time_limit_millis > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Processor time limit (ms):</td>
        <td><s:textfield name="param" value="prob->time_limit_millis" size="48" maxlength="1024" checkExpr=" > 0" /><%
    if (is_abstract) {
      if (prob->time_limit_millis <= 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (prob->time_limit_millis <= 0 && tmp_prob->time_limit_millis <= 0) {
%>(<i>Not set</i>)<%
      } else if (prob->time_limit_millis <= 0) {
%>(<i>Default: <s:v value="tmp_prob->time_limit_millis" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-time-limit-millis" label="Change" /></td>
        <td><s:help ac="prob-change-time-limit-millis" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (tmp_prob->time_limit_millis <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Processor time limit (s):</td>
        <td><s:textfield name="param" value="prob->time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      if (prob->time_limit < 0 && tmp_prob->time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->time_limit < 0 && !tmp_prob->time_limit) {
%>(<i>Default: Unlimited</i>)<%
      } else if (prob->time_limit < 0) {
%>(<i>Default: <s:v value="tmp_prob->time_limit" /></i>)<%
      } else if (!prob->time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-time-limit" label="Change" /></td>
        <td><s:help ac="prob-change-time-limit" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Real time limit (s):</td>
        <td><s:textfield name="param" value="prob->real_time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_real_time_limit, tmp_prob, sup_prob, global);
      if (prob->real_time_limit < 0 && tmp_prob->real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->real_time_limit < 0 && !tmp_prob->real_time_limit) {
%>(<i>Default: Unlimited</i>)<%
      } else if (prob->real_time_limit < 0) {
%>(<i>Default: <s:v value="tmp_prob->real_time_limit" /></i>)<%
      } else if (!prob->real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-real-time-limit" label="Change" /></td>
        <td><s:help ac="prob-change-real-time-limit" /></td>
    </s:htr>
</s:form>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Real time limit for checker(s):</td>
        <td><s:textfield name="param" value="prob->checker_real_time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->checker_real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->checker_real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_checker_real_time_limit, tmp_prob, sup_prob, global);
      if (prob->checker_real_time_limit < 0 && tmp_prob->checker_real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->checker_real_time_limit < 0 && !tmp_prob->checker_real_time_limit) {
%>(<i>Default: Unlimited</i>)<%
      } else if (prob->checker_real_time_limit < 0) {
%>(<i>Default: <s:v value="tmp_prob->checker_real_time_limit" /></i>)<%
      } else if (!prob->checker_real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-checker-real-time-limit" label="Change" /></td>
        <td><s:help ac="prob-change-checker-real-time-limit" /></td>
    </s:htr>
</s:form>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Maximum virtual memory size:</td>
        <td><%
    num_buf[0] = 0;
    if (prob->max_vm_size == ~(size_t) 0 && is_abstract) {
      snprintf(num_buf, sizeof(num_buf), "%d", -1);
    } else if (prob->max_vm_size != ~(size_t) 0) {
      size_t_to_size_str(num_buf, sizeof(num_buf), prob->max_vm_size);
    }
%><s:textfield name="param" value="num_buf" size="48" maxlength="1024" check="no" /><%
    if (is_abstract) {
      if (prob->max_vm_size == ~(size_t) 0 || prob->max_vm_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_vm_size, tmp_prob, sup_prob, global);
      if (prob->max_vm_size == ~(size_t) 0) {
        if (tmp_prob->max_vm_size == ~(size_t) 0) {
%>(<i>Default: unlimited</i>)<%
        } else if (tmp_prob->max_vm_size == 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
          size_t_to_size_str(num_buf, sizeof(num_buf), tmp_prob->max_vm_size);
%>(<i>Default: <s:v value="num_buf" escape="false"/></i>)<%
        }
      } else if (prob->max_vm_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-max-vm-size" label="Change" /></td>
        <td><s:help ac="prob-change-max-vm-size" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Maximum stack size:</td>
        <td><%
    num_buf[0] = 0;
    if (prob->max_stack_size == ~(size_t) 0 && is_abstract) {
      snprintf(num_buf, sizeof(num_buf), "%d", -1);
    } else if (prob->max_stack_size != ~(size_t) 0) {
      size_t_to_size_str(num_buf, sizeof(num_buf), prob->max_stack_size);
    }
%><s:textfield name="param" value="num_buf" size="48" maxlength="1024" check="no" /><%
    if (is_abstract) {
      if (prob->max_stack_size == ~(size_t) 0 || prob->max_stack_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_stack_size, tmp_prob, sup_prob, global);
      if (prob->max_stack_size == ~(size_t) 0) {
        if (tmp_prob->max_stack_size == ~(size_t) 0) {
%>(<i>Default: unlimited</i>)<%
        } else if (tmp_prob->max_stack_size == 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
          size_t_to_size_str(num_buf, sizeof(num_buf), tmp_prob->max_stack_size);
%>(<i>Default: <s:v value="num_buf" escape="false"/></i>)<%
        }
      } else if (prob->max_stack_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-max-stack-size" label="Change" /></td>
        <td><s:help ac="prob-change-max-stack-size" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Maximum core file size:</td>
        <td><%
    num_buf[0] = 0;
    if (prob->max_core_size == ~(size_t) 0 && is_abstract) {
      snprintf(num_buf, sizeof(num_buf), "%d", -1);
    } else if (prob->max_core_size != ~(size_t) 0) {
      size_t_to_size_str(num_buf, sizeof(num_buf), prob->max_core_size);
    }
%><s:textfield name="param" value="num_buf" size="48" maxlength="1024" check="no" /><%
    if (is_abstract) {
      if (prob->max_core_size == ~(size_t) 0 || prob->max_core_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_core_size, tmp_prob, sup_prob, global);
      if (prob->max_core_size == ~(size_t) 0) {
        if (tmp_prob->max_core_size == ~(size_t) 0) {
%>(<i>Default: OS Limit</i>)<%
        } else if (tmp_prob->max_core_size == 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
          size_t_to_size_str(num_buf, sizeof(num_buf), tmp_prob->max_core_size);
%>(<i>Default: <s:v value="num_buf" escape="false"/></i>)<%
        }
      } else if (prob->max_core_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-max-core-size" label="Change" /></td>
        <td><s:help ac="prob-change-max-core-size" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Maximum output file size:</td>
        <td><%
    num_buf[0] = 0;
    if (prob->max_file_size == ~(size_t) 0 && is_abstract) {
      snprintf(num_buf, sizeof(num_buf), "%d", -1);
    } else if (prob->max_file_size != ~(size_t) 0) {
      size_t_to_size_str(num_buf, sizeof(num_buf), prob->max_file_size);
    }
%><s:textfield name="param" value="num_buf" size="48" maxlength="1024" check="no" /><%
    if (is_abstract) {
      if (prob->max_file_size == ~(size_t) 0 || prob->max_file_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_file_size, tmp_prob, sup_prob, global);
      if (prob->max_file_size == ~(size_t) 0) {
        if (tmp_prob->max_file_size == ~(size_t) 0) {
%>(<i>Default: OS Limit</i>)<%
        } else if (tmp_prob->max_file_size == 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
          size_t_to_size_str(num_buf, sizeof(num_buf), tmp_prob->max_file_size);
%>(<i>Default: <s:v value="num_buf" escape="false"/></i>)<%
        }
      } else if (prob->max_file_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-max-file-size" label="Change" /></td>
        <td><s:help ac="prob-change-max-file-size" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Maximum open file count:</td>
        <td><s:textfield name="param" value="prob->max_open_file_count" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->max_open_file_count < 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_open_file_count, tmp_prob, sup_prob, global);
      if (prob->max_open_file_count < 0) {
        if (tmp_prob->max_open_file_count < 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->max_open_file_count" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-max-open-file-count" label="Change" /></td>
        <td><s:help ac="prob-change-max-open-file-count" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Maximum process count:</td>
        <td><s:textfield name="param" value="prob->max_process_count" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->max_process_count < 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_process_count, tmp_prob, sup_prob, global);
      if (prob->max_process_count < 0) {
        if (tmp_prob->max_process_count < 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->max_process_count" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-max-process-count" label="Change" /></td>
        <td><s:help ac="prob-change-max-process-count" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use separate process group?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->enable_process_group == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_enable_process_group, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->enable_process_group" default="tmp_prob->enable_process_group" /><%
    }
%></td>
        <td><s:submit ac="prob-change-enable-process-group" label="Change" /></td>
        <td><s:help ac="prob-change-enable-process-group" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use PR (pending review) status instead of OK?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->use_ac_not_ok == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_ac_not_ok, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->use_ac_not_ok" default="tmp_prob->use_ac_not_ok" /><%
    }
%></td>
        <td><s:submit ac="prob-change-use-ac-not-ok" label="Change" /></td>
        <td><s:help ac="prob-change-use-ac-not-ok" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && (is_abstract || tmp_prob->use_ac_not_ok > 0)) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Mark previous PR as IG (ignored)?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->ignore_prev_ac == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_ignore_prev_ac, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->ignore_prev_ac" default="tmp_prob->ignore_prev_ac" /><%
    }
%></td>
        <td><s:submit ac="prob-change-ignore-prev-ac" label="Change" /></td>
        <td><s:help ac="prob-change-ignore-prev-ac" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Contestant may view testing protocol?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->team_enable_rep_view == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_team_enable_rep_view, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->team_enable_rep_view" default="tmp_prob->team_enable_rep_view" /><%
    }
%></td>
        <td><s:submit ac="prob-change-team-enable-rep-view" label="Change" /></td>
        <td><s:help ac="prob-change-team-enable-rep-view" /></td>
    </s:htr>
</s:form>

<%
  if (is_abstract || tmp_prob->team_enable_rep_view <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Contestant may view compilation errors?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->team_enable_ce_view == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_team_enable_ce_view, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->team_enable_ce_view" default="tmp_prob->team_enable_ce_view" /><%
    }
%></td>
        <td><s:submit ac="prob-change-team-enable-ce-view" label="Change" /></td>
        <td><s:help ac="prob-change-team-enable-ce-view" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (is_abstract || tmp_prob->team_enable_rep_view > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Contestant may view FULL testing protocol?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->team_show_judge_report == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_team_show_judge_report, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->team_show_judge_report" default="tmp_prob->team_show_judge_report" /><%
    }
%></td>
        <td><s:submit ac="prob-change-team-show-judge-report" label="Change" /></td>
        <td><s:help ac="prob-change-team-show-judge-report" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (is_abstract || tmp_prob->team_enable_rep_view > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Contestant may view checker comment?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->show_checker_comment == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_show_checker_comment, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->show_checker_comment" default="tmp_prob->show_checker_comment" /><%
    }
%></td>
        <td><s:submit ac="prob-change-show-checker-comment" label="Change" /></td>
        <td><s:help ac="prob-change-show-checker-comment" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Ignore compilation errors?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->ignore_compile_errors == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_ignore_compile_errors, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->ignore_compile_errors" default="tmp_prob->ignore_compile_errors" /><%
    }
%></td>
        <td><s:submit ac="prob-change-ignore-compile-errors" label="Change" /></td>
        <td><s:help ac="prob-change-ignore-compile-errors" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disable user submissions?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_user_submit == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_user_submit, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_user_submit" default="tmp_prob->disable_user_submit" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-user-submit" label="Change" /></td>
        <td><s:help ac="prob-change-disable-user-submit" /></td>
    </s:htr>
</s:form>

<%
  if (show_adv && global->problem_navigation > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disable problem tab?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_tab == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_tab, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_tab" default="tmp_prob->disable_tab" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-tab" label="Change" /></td>
        <td><s:help ac="prob-change-disable-tab" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Restricted problem statement?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->restricted_statement == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_restricted_statement, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->restricted_statement" default="tmp_prob->restricted_statement" /><%
    }
%></td>
        <td><s:submit ac="prob-change-restricted-statement" label="Change" /></td>
        <td><s:help ac="prob-change-restricted-statement" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disable submissions after OK?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_submit_after_ok == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_submit_after_ok, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_submit_after_ok" default="tmp_prob->disable_submit_after_ok" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-submit-after-ok" label="Change" /></td>
        <td><s:help ac="prob-change-disable-submit-after-ok" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disable security restrictions?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_security == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_security, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_security" default="tmp_prob->disable_security" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-security" label="Change" /></td>
        <td><s:help ac="prob-change-disable-security" /></td>
    </s:htr>
</s:form>

<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disable any testing of submissions?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_testing == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_testing, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_testing" default="tmp_prob->disable_testing" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-testing" label="Change" /></td>
        <td><s:help ac="prob-change-disable-testing" /></td>
    </s:htr>
</s:form>

<%
  if (is_abstract || tmp_prob->disable_testing <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disable automatic testing of submissions?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_auto_testing == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_auto_testing, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_auto_testing" default="tmp_prob->disable_auto_testing" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-auto-testing" label="Change" /></td>
        <td><s:help ac="prob-change-disable-auto-testing" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && prob_type == PROB_TYPE_STANDARD && (is_abstract || tmp_prob->disable_testing > 0)) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Still compile runs to mark as ACCEPTED?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->enable_compilation == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_enable_compilation, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->enable_compilation" default="tmp_prob->enable_compilation" /><%
    }
%></td>
        <td><s:submit ac="prob-change-enable-compilation" label="Change" /></td>
        <td><s:help ac="prob-change-enable-compilation" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && prob_type == PROB_TYPE_STANDARD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Ignore exit code?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->ignore_exit_code == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_ignore_exit_code, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->ignore_exit_code" default="tmp_prob->ignore_exit_code" /><%
    }
%></td>
        <td><s:submit ac="prob-change-ignore-exit-code" label="Change" /></td>
        <td><s:help ac="prob-change-ignore-exit-code" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->score_system == SCORE_KIROV) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Use Olympiad mode?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->olympiad_mode == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_olympiad_mode, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->olympiad_mode" default="tmp_prob->olympiad_mode" /><%
    }
%></td>
        <td><s:submit ac="prob-change-olympiad-mode" label="Change" /></td>
        <td><s:help ac="prob-change-olympiad-mode" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->score_system == SCORE_KIROV) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Score the latest submit?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->score_latest == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_score_latest, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->score_latest" default="tmp_prob->score_latest" /><%
    }
%></td>
        <td><s:submit ac="prob-change-score-latest" label="Change" /></td>
        <td><s:help ac="prob-change-score-latest" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->score_system == SCORE_KIROV) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Score the latest or the best unmarked?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->score_latest_or_unmarked == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_score_latest_or_unmarked, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->score_latest_or_unmarked" default="tmp_prob->score_latest_or_unmarked" /><%
    }
%></td>
        <td><s:submit ac="prob-change-score-latest-or-unmarked" label="Change" /></td>
        <td><s:help ac="prob-change-score-latest-or-unmarked" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->score_system == SCORE_KIROV) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Score the latest marked submit?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->score_latest_marked == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_score_latest_marked, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->score_latest_marked" default="tmp_prob->score_latest_marked" /><%
    }
%></td>
        <td><s:submit ac="prob-change-score-latest-marked" label="Change" /></td>
        <td><s:help ac="prob-change-score-latest-marked" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Ignore unmarked runs in scoring?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->ignore_unmarked == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_ignore_unmarked, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->ignore_unmarked" default="tmp_prob->ignore_unmarked" /><%
    }
%></td>
        <td><s:submit ac="prob-change-ignore-unmarked" label="Change" /></td>
        <td><s:help ac="prob-change-ignore-unmarked" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (global->score_system != SCORE_ACM) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Score for full solution:</td>
        <td><s:textfield name="param" value="prob->full_score" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->full_score < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_full_score, tmp_prob, sup_prob, global);
      if (prob->full_score < 0) {
        if (tmp_prob->full_score < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->full_score" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-full-score" label="Change" /></td>
        <td><s:help ac="prob-change-full-score" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (global->score_system != SCORE_ACM && global->separate_user_score > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Score for user-visible full solution:</td>
        <td><s:textfield name="param" value="prob->full_user_score" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->full_user_score < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_full_user_score, tmp_prob, sup_prob, global);
      if (prob->full_user_score < 0) {
        if (tmp_prob->full_user_score < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->full_user_score" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-full-user-score" label="Change" /></td>
        <td><s:help ac="prob-change-full-user-score" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD)) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Allow variable score for full solution?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->variable_full_score == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_variable_full_score, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->variable_full_score" default="tmp_prob->variable_full_score" /><%
    }
%></td>
        <td><s:submit ac="prob-change-variable-full-score" label="Change" /></td>
        <td><s:help ac="prob-change-variable-full-score" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Default score for 1 passed test:</td>
        <td><s:textfield name="param" value="prob->test_score" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->test_score < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_test_score, tmp_prob, sup_prob, global);
      if (prob->test_score < 0) {
        if (tmp_prob->test_score < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->test_score" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-test-score" label="Change" /></td>
        <td><s:help ac="prob-change-test-score" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (global->score_system == SCORE_KIROV) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Penalty for a submission:</td>
        <td><s:textfield name="param" value="prob->run_penalty" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->run_penalty < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_run_penalty, tmp_prob, sup_prob, global);
      if (prob->run_penalty < 0) {
        if (tmp_prob->run_penalty < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->run_penalty" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-run-penalty" label="Change" /></td>
        <td><s:help ac="prob-change-run-penalty" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->score_system == SCORE_KIROV) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Penalty for a disqualified submission:</td>
        <td><s:textfield name="param" value="prob->disqualified_penalty" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract) {
      if (prob->disqualified_penalty < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_disqualified_penalty, tmp_prob, sup_prob, global);
      if (prob->disqualified_penalty < 0) {
        if (tmp_prob->disqualified_penalty < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->disqualified_penalty" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-disqualified-penalty" label="Change" /></td>
        <td><s:help ac="prob-change-disqualified-penalty" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD)) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Test scores for tests:</td>
        <td><s:textfield name="param" value="prob->test_score_list" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-test-score-list" label="Change" /></td>
        <td><s:help ac="prob-change-test-score-list" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && (global->score_system == SCORE_ACM || global->score_system == SCORE_MOSCOW)) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Penalty for a submission (minutes):</td>
        <td><s:textfield name="param" value="prob->acm_run_penalty" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (prob->acm_run_penalty < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_acm_run_penalty, tmp_prob, sup_prob, global);
      if (prob->acm_run_penalty < 0 && tmp_prob->acm_run_penalty < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->acm_run_penalty < 0) {
%>(<i>Default: <s:v value="tmp_prob->acm_run_penalty" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-acm-run-penalty" label="Change" /></td>
        <td><s:help ac="prob-change-acm-run-penalty" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && global->score_system == SCORE_MOSCOW) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Tests for problem scores:</td>
        <td><s:textfield name="param" value="prob->score_tests" size="48" maxlength="1024" check="no" /></td>
        <td><s:submit ac="prob-change-score-tests" label="Change" /><s:submit ac="prob-clear-score-tests" label="Clear" /></td>
        <td><s:help ac="prob-change-score-tests" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && (global->score_system == SCORE_KIROV || global->score_system == SCORE_OLYMPIAD)) {
    unsigned char *strs = 0;
    if (prob->test_sets && prob->test_sets[0]) strs = sarray_unparse_2(prob->test_sets);
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Specially scored test sets:</td>
        <td><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /><%
    if (!strs) {
%>(<i>Not set</i>)<%
}
%></td>
        <td><s:submit ac="prob-change-test-sets" label="Change" /><s:submit ac="prob-clear-test-sets" label="Clear" /></td>
        <td><s:help ac="prob-change-test-sets" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs);
  }
%>

<%
  if (show_adv && global->score_system == SCORE_KIROV) {
    const unsigned char *value = prob->score_bonus;
    if (value && value[0] == 1) value = 0;
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Additional score bonus:</td>
        <td><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!value) {
%>(<i>Not set</i>)<%
      } else if (!*value) {
%>(<i>Empty</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_score_bonus, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->score_bonus[0] || tmp_prob->score_bonus[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->score_bonus" /></i>)<%
        }
      } else if (!*value) {
%>(<i>Empty</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-score-bonus" label="Change" /><s:submit ac="prob-clear-score-bonus" label="Clear" /></td>
        <td><s:help ac="prob-change-score-bonus" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && !is_abstract) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Tests open for participants:</td>
        <td><s:textfield name="param" value="prob->open_tests" size="48" maxlength="1024" check="no" /></td>
        <td><s:submit ac="prob-change-open-tests" label="Change" /><s:submit ac="prob-clear-open-tests" label="Clear" /></td>
        <td><s:help ac="prob-change-open-tests" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && !is_abstract) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Tests open for participants finally:</td>
        <td><s:textfield name="param" value="prob->final_open_tests" size="48" maxlength="1024" check="no" /></td>
        <td><s:submit ac="prob-change-final-open-tests" label="Change" /><s:submit ac="prob-clear-final-open-tests" label="Clear" /></td>
        <td><s:help ac="prob-change-final-open-tests" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (global->score_system == SCORE_OLYMPIAD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Number of accept tests:</td>
        <td><s:textfield name="param" value="prob->tests_to_accept" size="48" maxlength="1024" checkExpr=">= 0" /><%
    if (is_abstract) {
      if (prob->tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_tests_to_accept, tmp_prob, sup_prob, global);
      if (prob->tests_to_accept < 0 && tmp_prob->tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      } else {
%>(<i>Default: <s:v value="tmp_prob->tests_to_accept" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-tests-to-accept" label="Change" /></td>
        <td><s:help ac="prob-change-tests-to-accept" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->score_system == SCORE_OLYMPIAD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Accept for testing solutions that do not pass all accept tests?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->accept_partial == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_accept_partial, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->accept_partial" default="tmp_prob->accept_partial" /><%
    }
%></td>
        <td><s:submit ac="prob-change-accept-partial" label="Change" /></td>
        <td><s:help ac="prob-change-accept-partial" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->score_system == SCORE_OLYMPIAD) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Min. number of accept tests:</td>
        <td><s:textfield name="param" value="prob->min_tests_to_accept" size="48" maxlength="1024" checkExpr=">= 0" /><%
    if (is_abstract) {
      if (prob->min_tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_min_tests_to_accept, tmp_prob, sup_prob, global);
      if (prob->min_tests_to_accept < 0 && tmp_prob->min_tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      } else {
%>(<i>Default: <s:v value="tmp_prob->min_tests_to_accept" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-min-tests-to-accept" label="Change" /></td>
        <td><s:help ac="prob-change-min-tests-to-accept" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Max submissions for the problem:</td>
        <td><s:textfield name="param" value="prob->max_user_run_count" size="48" maxlength="1024" checkExpr=">= 0" /><%
    if (is_abstract) {
      if (prob->max_user_run_count < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_user_run_count, tmp_prob, sup_prob, global);
      if (prob->max_user_run_count < 0 && tmp_prob->max_user_run_count < 0) {
%>(<i>Not set</i>)<%
      } else {
%>(<i>Default: <s:v value="tmp_prob->max_user_run_count" /></i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-max-user-run-count" label="Change" /></td>
        <td><s:help ac="prob-change-max-user-run-count" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Do not show this problem in standings?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->hidden == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_hidden, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->hidden" default="tmp_prob->hidden" /><%
    }
%></td>
        <td><s:submit ac="prob-change-hidden" label="Change" /></td>
        <td><s:help ac="prob-change-hidden" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && global->stand_show_ok_time > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Do not show accept time for this problem?</td>
        <td><%
    int value = (prob->stand_hide_time > 0);
%><s:yesno name="param" value="value" /></td>
        <td><s:submit ac="prob-change-stand-hide-time" label="Change" /></td>
        <td><s:help ac="prob-change-stand-hide-time" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && global->problem_navigation > 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Automatically advance to the next problem?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->advance_to_next == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_advance_to_next, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->advance_to_next" default="tmp_prob->advance_to_next" /><%
    }
%></td>
        <td><s:submit ac="prob-change-advance-to-next" label="Change" /></td>
        <td><s:help ac="prob-change-advance-to-next" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disable any control characters in the source code?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_ctrl_chars == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_ctrl_chars, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_ctrl_chars" default="tmp_prob->disable_ctrl_chars" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-ctrl-chars" label="Change" /></td>
        <td><s:help ac="prob-change-disable-ctrl-chars" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Enable textarea input form?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->enable_text_form == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_enable_text_form, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->enable_text_form" default="tmp_prob->enable_text_form" /><%
    }
%></td>
        <td><s:submit ac="prob-change-enable-text-form" label="Change" /></td>
        <td><s:help ac="prob-change-enable-text-form" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Standings attributes:</td>
        <td><%
    const unsigned char *value = prob->stand_attr;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract || !sup_prob) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_stand_attr, tmp_prob, sup_prob, global);
      if (!value) {
        if (tmp_prob->stand_attr[0] == 1) {
%>(<i>Not set</i>)<%
        } else if (!tmp_prob->stand_attr[0]) {
%>(<i>Default: empty</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->stand_attr" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-stand-attr" label="Change" /><s:submit ac="prob-clear-stand-attr" label="Change" /></td>
        <td><s:help ac="prob-change-stand-attr" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Report Presentation Error as Wrong Answer?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_pe == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_pe, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_pe" default="tmp_prob->disable_pe" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-pe" label="Change" /></td>
        <td><s:help ac="prob-change-disable-pe" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Report Wall Time Limit Exceeded as Time Limit Exceeded?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->disable_wtl == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_wtl, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->disable_wtl" default="tmp_prob->disable_wtl" /><%
    }
%></td>
        <td><s:submit ac="prob-change-disable-wtl" label="Change" /></td>
        <td><s:help ac="prob-change-disable-wtl" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract) {
    const struct std_checker_info *std_checkers = super_html_std_checkers;
    int was_match = 0;
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Standard checker:</td>
        <td><select name="param"><%
    for (j = 0; std_checkers[j].name; ++j) {
%><option value='<s:v value="std_checkers[j].name" />'<%
      if (!strcmp(prob->standard_checker, std_checkers[j].name)) {
        was_match = 1;
%> selected="selected"<%
      }
%>><s:v value="std_checkers[j].desc" /></option><%
    }
    if (!was_match) {
%><option value='<s:v value="prob->standard_checker" />' selected="selected">Unknown - <s:v value="prob->standard_checker" /></option><%
    }
%></select></td>
        <td><s:submit ac="prob-change-standard-checker" label="Change" /></td>
        <td><s:help ac="prob-change-standard-checker" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (is_abstract || !prob->standard_checker[0] || prob->standard_checker[0] == 1) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Checker name:</td>
        <td><%
    const unsigned char *value = prob->check_cmd;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_check_cmd, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->check_cmd[0] || tmp_prob->check_cmd[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->check_cmd" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-check-cmd" label="Change" /><s:submit ac="prob-clear-check-cmd" label="Change" /></td>
        <td><s:help ac="prob-change-check-cmd" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Checker environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->checker_env && prob->checker_env[0]) strs = sarray_unparse(prob->checker_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-checker-env" label="Change" /><s:submit ac="prob-clear-checker-env" label="Change" /></td>
        <td><s:help ac="prob-change-checker-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Checker calculates score?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->scoring_checker == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_scoring_checker, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->scoring_checker" default="tmp_prob->scoring_checker" /><%
    }
%></td>
        <td><s:submit ac="prob-change-scoring-checker" label="Change" /></td>
        <td><s:help ac="prob-change-scoring-checker" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Start environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->start_env && prob->start_env[0]) strs = sarray_unparse(prob->start_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-start-env" label="Change" /><s:submit ac="prob-clear-start-env" label="Change" /></td>
        <td><s:help ac="prob-change-start-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Score valuer name:</td>
        <td><%
    const unsigned char *value = prob->valuer_cmd;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_valuer_cmd, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->valuer_cmd[0] || tmp_prob->valuer_cmd[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->valuer_cmd" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-valuer-cmd" label="Change" /><s:submit ac="prob-clear-valuer-cmd" label="Change" /></td>
        <td><s:help ac="prob-change-valuer-cmd" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && tmp_prob->valuer_cmd[0] >= ' ') {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Valuer sets <i>marked</i> flag?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->valuer_sets_marked == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_valuer_sets_marked, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->valuer_sets_marked" default="tmp_prob->valuer_sets_marked" /><%
    }
%></td>
        <td><s:submit ac="prob-change-valuer-sets-marked" label="Change" /></td>
        <td><s:help ac="prob-change-valuer-sets-marked" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv && tmp_prob->valuer_cmd[0] >= ' ') {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Valuer works interactively?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->interactive_valuer == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_interactive_valuer, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->interactive_valuer" default="tmp_prob->interactive_valuer" /><%
    }
%></td>
        <td><s:submit ac="prob-change-interactive-valuer" label="Change" /></td>
        <td><s:help ac="prob-change-interactive-valuer" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && tmp_prob->valuer_cmd[0] >= ' ') {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Valuer environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->valuer_env && prob->valuer_env[0]) strs = sarray_unparse(prob->valuer_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-valuer-env" label="Change" /><s:submit ac="prob-clear-valuer-env" label="Change" /></td>
        <td><s:help ac="prob-change-valuer-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Interactor name:</td>
        <td><%
    const unsigned char *value = prob->interactor_cmd;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_interactor_cmd, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->interactor_cmd[0] || tmp_prob->interactor_cmd[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->interactor_cmd" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-interactor-cmd" label="Change" /><s:submit ac="prob-clear-interactor-cmd" label="Change" /></td>
        <td><s:help ac="prob-change-interactor-cmd" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && tmp_prob->interactor_cmd[0] >= ' ') {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Interactor environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->interactor_env && prob->interactor_env[0]) strs = sarray_unparse(prob->interactor_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-interactor-env" label="Change" /><s:submit ac="prob-clear-interactor-env" label="Change" /></td>
        <td><s:help ac="prob-change-interactor-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv && (is_abstract || tmp_prob->interactor_cmd[0] >= ' ')) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Time limit for interactor (s):</td>
        <td><s:textfield name="param" value="prob->interactor_time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (is_abstract || !sup_prob) {
      if (prob->interactor_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->interactor_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_interactor_time_limit, tmp_prob, sup_prob, global);
      if (prob->interactor_time_limit < 0) {
        if (tmp_prob->interactor_time_limit < 0) {
%>(<i>Not set</i>)<%
        } else if (!tmp_prob->interactor_time_limit) {
%>(<i>Default: unlimited</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->interactor_time_limit" /></i>)<%
        }
      } else if (!prob->interactor_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-interactor-time-limit" label="Change" /></td>
        <td><s:help ac="prob-change-interactor-time-limit" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Style checker name:</td>
        <td><%
    const unsigned char *value = prob->style_checker_cmd;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_style_checker_cmd, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->style_checker_cmd[0] || tmp_prob->style_checker_cmd[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->style_checker_cmd" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-style-checker-cmd" label="Change" /><s:submit ac="prob-clear-style-checker-cmd" label="Change" /></td>
        <td><s:help ac="prob-change-style-checker-cmd" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && tmp_prob->style_checker_cmd[0] >= ' ') {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Style checker environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->style_checker_env && prob->style_checker_env[0]) strs = sarray_unparse(prob->style_checker_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-style-checker-env" label="Change" /><s:submit ac="prob-clear-style-checker-env" label="Change" /></td>
        <td><s:help ac="prob-change-style-checker-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Compiler environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->lang_compiler_env && prob->lang_compiler_env[0]) strs = sarray_unparse(prob->lang_compiler_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-lang-compiler-env" label="Change" /><s:submit ac="prob-clear-lang-compiler-env" label="Change" /></td>
        <td><s:help ac="prob-change-lang-compiler-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Test checker name:</td>
        <td><%
%><s:textfield name="param" value="prob->test_checker_cmd" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!prob->test_checker_cmd) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_test_checker_cmd, tmp_prob, sup_prob, global);
      if (!prob->test_checker_cmd) {
        if (!tmp_prob->test_checker_cmd || !tmp_prob->test_checker_cmd[0]) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->test_checker_cmd" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-test-checker-cmd" label="Change" /><s:submit ac="prob-clear-test-checker-cmd" label="Change" /></td>
        <td><s:help ac="prob-change-test-checker-cmd" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && tmp_prob->test_checker_cmd) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Test checker environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->test_checker_env && prob->test_checker_env[0]) strs = sarray_unparse(prob->test_checker_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-test-checker-env" label="Change" /><s:submit ac="prob-clear-test-checker-env" label="Change" /></td>
        <td><s:help ac="prob-change-test-checker-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Init-style interactor name:</td>
        <td><%
%><s:textfield name="param" value="prob->init_cmd" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!prob->init_cmd) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_init_cmd, tmp_prob, sup_prob, global);
      if (!prob->init_cmd) {
        if (!tmp_prob->init_cmd || !tmp_prob->init_cmd[0]) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->init_cmd" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-init-cmd" label="Change" /><s:submit ac="prob-clear-init-cmd" label="Change" /></td>
        <td><s:help ac="prob-change-init-cmd" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && tmp_prob->init_cmd) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Init-style interactor environment:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->init_env && prob->init_env[0]) strs = sarray_unparse(prob->init_env);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-init-env" label="Change" /><s:submit ac="prob-clear-init-env" label="Change" /></td>
        <td><s:help ac="prob-change-init-env" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Solution source name:</td>
        <td><%
%><s:textfield name="param" value="prob->solution_src" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!prob->solution_src) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_solution_src, tmp_prob, sup_prob, global);
      if (!prob->solution_src) {
        if (!tmp_prob->solution_src || !tmp_prob->solution_src[0]) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->solution_src" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-solution-src" label="Change" /><s:submit ac="prob-clear-solution-src" label="Change" /></td>
        <td><s:help ac="prob-change-solution-src" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Solution command:</td>
        <td><%
%><s:textfield name="param" value="prob->solution_cmd" size="48" maxlength="1024" checkExpr="" /><%
    if (is_abstract) {
      if (!prob->solution_cmd) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_solution_cmd, tmp_prob, sup_prob, global);
      if (!prob->solution_cmd) {
        if (!tmp_prob->solution_cmd || !tmp_prob->solution_cmd[0]) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->solution_cmd" /></i>)<%
        }
      }
    }
%></td>
        <td><s:submit ac="prob-change-solution-cmd" label="Change" /><s:submit ac="prob-clear-solution-cmd" label="Change" /></td>
        <td><s:help ac="prob-change-solution-cmd" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Special view for scores:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->score_view && prob->score_view[0]) strs = sarray_unparse(prob->score_view);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-score-view" label="Change" /><s:submit ac="prob-clear-score-view" label="Change" /></td>
        <td><s:help ac="prob-change-score-view" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Ignore problem score in standings?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->stand_ignore_score == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_stand_ignore_score, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->stand_ignore_score" default="tmp_prob->stand_ignore_score" /><%
    }
%></td>
        <td><s:submit ac="prob-change-stand-ignore-score" label="Change" /></td>
        <td><s:help ac="prob-change-stand-ignore-score" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Show the problem after all results?</td>
        <td><%
    if (is_abstract || !sup_prob) {
      int value = (prob->stand_last_column == 1);
%><s:yesno name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_stand_last_column, tmp_prob, sup_prob, global);
%><s:yesno3 name="param" value="prob->stand_last_column" default="tmp_prob->stand_last_column" /><%
    }
%></td>
        <td><s:submit ac="prob-change-stand-last-column" label="Change" /></td>
        <td><s:help ac="prob-change-stand-last-column" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Language-based time-limit adjustment (s):</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->lang_time_adj && prob->lang_time_adj[0]) strs = sarray_unparse(prob->lang_time_adj);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-lang-time-adj" label="Change" /><s:submit ac="prob-clear-lang-time-adj" label="Change" /></td>
        <td><s:help ac="prob-change-lang-time-adj" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Language-based time-limit adjustment (ms):</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->lang_time_adj_millis && prob->lang_time_adj_millis[0]) strs = sarray_unparse(prob->lang_time_adj_millis);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-lang-time-adj-millis" label="Change" /><s:submit ac="prob-clear-lang-time-adj-millis" label="Change" /></td>
        <td><s:help ac="prob-change-lang-time-adj-millis" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Language-based memory limit:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->lang_max_vm_size && prob->lang_max_vm_size[0]) strs = sarray_unparse(prob->lang_max_vm_size);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-lang-max-vm-size" label="Change" /><s:submit ac="prob-clear-lang-max-vm-size" label="Change" /></td>
        <td><s:help ac="prob-change-lang-max-vm-size" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Language-based stack limit:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->lang_max_stack_size && prob->lang_max_stack_size[0]) strs = sarray_unparse(prob->lang_max_stack_size);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-lang-max-stack-size" label="Change" /><s:submit ac="prob-clear-lang-max-stack-size" label="Change" /></td>
        <td><s:help ac="prob-change-lang-max-stack-size" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Disabled languages:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->disable_language && prob->disable_language[0]) strs = sarray_unparse(prob->disable_language);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-disable-language" label="Change" /><s:submit ac="prob-clear-disable-language" label="Change" /></td>
        <td><s:help ac="prob-change-disable-language" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Enabled languages:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->enable_language && prob->enable_language[0]) strs = sarray_unparse(prob->enable_language);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-enable-language" label="Change" /><s:submit ac="prob-clear-enable-language" label="Change" /></td>
        <td><s:help ac="prob-change-enable-language" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Required problems:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->require && prob->require[0]) strs = sarray_unparse(prob->require);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-require" label="Change" /><s:submit ac="prob-clear-require" label="Change" /></td>
        <td><s:help ac="prob-change-require" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Provide OK to problems:</td>
        <td><%
    unsigned char *strs = 0;
    if (prob->provide_ok && prob->provide_ok[0]) strs = sarray_unparse(prob->provide_ok);
%><s:textfield name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
        <td><s:submit ac="prob-change-provide-ok" label="Change" /><s:submit ac="prob-clear-provide-ok" label="Change" /></td>
        <td><s:help ac="prob-change-provide-ok" /></td>
    </s:htr>
</s:form>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  if (!is_abstract && show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Number of variants:</td>
        <td><s:textfield name="param" value="prob->variant_num" size="48" maxlength="1024" checkExpr="> 0" /><%
    if (prob->variant_num <= 0) {
%>(<i>No variants</i>)<%
    }
%></td>
        <td><s:submit ac="prob-change-variant-num" label="Change" /><%
    if (prob->variant_num > 0) {
%>[<s:a ac="prob-edit-variants">Edit variants</s:a>]<%
    }
%></td>
        <td><s:help ac="prob-change-variant-num" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (!is_abstract && show_adv && global->contest_time <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Accept start date:</td>
        <td><% html_date_select(out_f, prob->start_date); %></td>
        <td><s:submit ac="prob-change-start-date" label="Change" /><s:submit ac="prob-clear-start-date" label="Clear" /></td>
        <td><s:help ac="prob-change-start-date" /></td>
    </s:htr>
</s:form>
<%
}
%>

<%
  if (!is_abstract && show_adv && global->contest_time <= 0) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Accept deadline:</td>
        <td><% html_date_select(out_f, prob->deadline); %></td>
        <td><s:submit ac="prob-change-deadline" label="Change" /><s:submit ac="prob-clear-deadline" label="Clear" /></td>
        <td><s:help ac="prob-change-deadline" /></td>
    </s:htr>
</s:form>
<%
}
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Source header file:</td>
        <td><%
    const unsigned char *value = prob->source_header;
    if (value && value[0] == 1) value = 0;
%><s:textfield name="param" value="prob->source_header" size="48" maxlength="1024" checkExpr="> 0" /><%
    if (is_abstract) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_source_header, tmp_prob, sup_prob, global);
      if (!value) {
        if (tmp_prob->source_header[0] == 1) {
%>(<i>Not set</i>)<%
        } else if (!tmp_prob->source_header[0]) {
%>(<i>Default: none</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->source_header" /></i>)<%
        }
      } else if (!value[0]) {
%>(<i>None</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-source-header" label="Change" /><s:submit ac="prob-clear-source-header" label="Clear" /></td>
        <td><s:help ac="prob-change-source-header" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (show_adv) {
%>
<s:form>
    <s:hidden name="prob_id" check="false" />
    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Source footer file:</td>
        <td><%
    const unsigned char *value = prob->source_footer;
    if (value && value[0] == 1) value = 0;
%><s:textfield name="param" value="prob->source_footer" size="48" maxlength="1024" checkExpr="> 0" /><%
    if (is_abstract) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_source_footer, tmp_prob, sup_prob, global);
      if (!value) {
        if (tmp_prob->source_footer[0] == 1) {
%>(<i>Not set</i>)<%
        } else if (!tmp_prob->source_footer[0]) {
%>(<i>Default: none</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->source_footer" /></i>)<%
        }
      } else if (!value[0]) {
%>(<i>None</i>)<%
      }
    }
%></td>
        <td><s:submit ac="prob-change-source-footer" label="Change" /><s:submit ac="prob-clear-source-footer" label="Clear" /></td>
        <td><s:help ac="prob-change-source-footer" /></td>
    </s:htr>
</s:form>
<%
  }
%>

<%
  if (prob->unhandled_vars) {
%>
<s:htr attr="form_row_attrs[row ^= 1]">
    <td colspan="4" align="center"><b>Uneditable parameters</b></td>
</s:htr>
<s:htr attr="form_row_attrs[row ^= 1]">
    <td colspan="4"><pre><s:v value="prob->unhandled_vars" /></pre></td>
</s:htr>
<%
  }
%>

<%
  }
%><%
  tmp_prob = prepare_problem_free(tmp_prob);
%>
