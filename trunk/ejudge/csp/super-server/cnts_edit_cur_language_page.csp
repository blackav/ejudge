<%
/* $Id$ */
%><%@include "includes.csp"
%><%
%><%@set getter_name = "csp_get_cnts_edit_cur_language_page"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@set err_prefix = "SSERV_ERR_"
%><%@page csp_view_cnts_edit_cur_language_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    unsigned char subtitle_buf[1024];
    const unsigned char *title = 0;
    const unsigned char *subtitle = subtitle_buf;
    opcap_t caps = 0;
    int row = 1;
    int cur_page = 3;
    unsigned char cs_conf_file[PATH_MAX];
    unsigned char num_buf[1024];

static const unsigned char head_row_attr[] =
  " bgcolor=\"#a0a0a0\"";
static const unsigned char * const form_row_attrs[]=
{
  " bgcolor=\"#d0d0d0\"",
  " bgcolor=\"#e0e0e0\"",
};

    if (phr->priv_level != PRIV_LEVEL_ADMIN) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (ejudge_cfg_opcaps_find(phr->config, phr->login, &caps) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (opcaps_check(caps, OPCAP_EDIT_CONTEST) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (!phr->ss->edited_cnts) FAIL(SSERV_ERR_CONTEST_NOT_EDITED);

    snprintf(subtitle_buf, sizeof(subtitle_buf), "editing serve.cfg, programming languages");
    cnts = phr->ss->edited_cnts;
    struct section_global_data *global = phr->ss->global;

    (void) row;
    (void) head_row_attr;
    (void) form_row_attrs;
%><%@include "header.csp"
%>

<%@include "cnts_edit_cur_top_menu.csp"
%>

<%
  if (phr->ss->serve_parse_errors) {
%>
<h2><tt>serve.cfg</tt> cannot be edited</h2>
<font color="red"><pre><s:v value="phr->ss->serve_parse_errors" /></pre></font>
<%
    goto bottom_links;
  }
%>

<%
  if (!global) {
%>
<h2>No current global settings!</h2>
<%
    goto bottom_links;
  }
%>

<%
  if (phr->ss->disable_compilation_server) {
%>
<h2>Compilation server is disabled!</h2>
<p>Enable compilation server on &quot;Global settings&qout; tab.</p>
<%
    goto bottom_links;
  }
%>
<%
  if (!phr->ss->cs_langs_loaded) {
    super_load_cs_languages(phr->config, phr->ss, global->extra_compile_dirs, 1, cs_conf_file, sizeof(cs_conf_file));
  }
%>
<%
  if (!phr->ss->cs_langs) {
%>
<h2>The standard compilation server is not available!</h2>
<%
    goto bottom_links;
  }
%>

<!--
  int i;
  unsigned char *s;
  struct section_global_data *global = sstate->global;
  struct section_language_data *lang = 0, *cs_lang;
  unsigned char buf[1024], buf2[1024];
  unsigned char *cmt, *lang_name, *td_attr, *env;
  path_t lang_hidden_vars;
  int row = 1;
  struct html_armor_buffer ab = HTML_ARMOR_INITIALIZER;
-->

<table border="0">
    <s:htr attr="head_row_attr">
        <td colspan="4" align="center"><b>Compilation limitations</b></td>
    </s:htr>

<%
  num_buf[0] = 0;
  if (((ssize_t) global->compile_max_vm_size) > 0) {
    num_to_size_str(num_buf, sizeof(num_buf), global->compile_max_vm_size);
  }
%>
    <s:form>
        <s:htr attr="form_row_attrs[row ^= 1]">
            <td>Maximum VM size for compilers:</td>
            <td><s:textfield name="param" value="num_buf" size="48" maxlength="1024" check="no" /></td>
            <td><s:submit ac="glob-change-compile-max-vm-size" label="Change" /></td>
            <td><s:help ac="glob-change-compile-max-vm-size" /></td>
        </s:htr>
    </s:form>

<%
  num_buf[0] = 0;
  if (((ssize_t) global->compile_max_stack_size) > 0) {
    num_to_size_str(num_buf, sizeof(num_buf), global->compile_max_stack_size);
  }
%>
    <s:form>
        <s:htr attr="form_row_attrs[row ^= 1]">
            <td>Maximum stack size for compilers:</td>
            <td><s:textfield name="param" value="num_buf" size="48" maxlength="1024" check="no" /></td>
            <td><s:submit ac="glob-change-compile-max-stack-size" label="Change" /></td>
            <td><s:help ac="glob-change-compile-max-stack-size" /></td>
        </s:htr>
    </s:form>

<%
  num_buf[0] = 0;
  if (((ssize_t) global->compile_max_file_size) > 0) {
    num_to_size_str(num_buf, sizeof(num_buf), global->compile_max_file_size);
  }
%>
    <s:form>
        <s:htr attr="form_row_attrs[row ^= 1]">
            <td>Maximum file size for compilers:</td>
            <td><s:textfield name="param" value="num_buf" size="48" maxlength="1024" check="no" /></td>
            <td><s:submit ac="glob-change-compile-max-file-size" label="Change" /></td>
            <td><s:help ac="glob-change-compile-max-file-size" /></td>
        </s:htr>
    </s:form>

<%
  int i;
  for (i = 1; i < phr->ss->cs_lang_total; ++i) {
    const struct section_language_data *cs_lang = phr->ss->cs_langs[i];
    if (!cs_lang) continue;
    if (!phr->ss->cs_lang_names[i]) continue;
    if (!*phr->ss->cs_lang_names[i]) continue;
    const struct section_language_data *lang = 0;
    if (phr->ss->cs_loc_map[i] > 0) lang = phr->ss->langs[phr->ss->cs_loc_map[i]];
    const unsigned char *td_attr = "";
    td_attr = "";
    if (lang && lang->insecure && global && global->secure_run > 0) {
      td_attr = " bgcolor=\"#ffffdd\"";
    } else if (lang) {
      td_attr = " bgcolor=\"#ddffdd\"";
    }
%>
    <s:form>
        <s:hidden name="lang_id" value="i" />
        <tr>
            <td colspan="2"<s:v value="td_attr" escape="false" />><%
    if (lang && lang->long_name[0]) {
%><b><s:v value="lang->long_name" /></b><%
      if (!phr->ss->cs_lang_names[i]) {
%> <font color="magenta">(No version script!)</font><%
      } else if (!*phr->ss->cs_lang_names[i]) {
%> <font color="red">(Version script failed!)</font><%
      } else {
%> (<s:v value="phr->ss->cs_lang_names[i]" />)<%
      }
    } else if (!phr->ss->cs_lang_names[i]) {
%><b><s:v value="cs_lang->long_name" /></b> <font color="magenta">(No version script!)</font><%
    } else if (!*phr->ss->cs_lang_names[i]) {
%><b><s:v value="cs_lang->long_name" /></b> <font color="red">(Version script failed!)</font><%
    } else {
%><b><s:v value="phr->ss->cs_lang_names[i]" /></b><%
    }
%></td>
            <td<s:v value="td_attr" escape="false" />><%
    if (lang) {
      if (!phr->ss->lang_flags[lang->id]) {
%><s:submit ac="lang-show-details" label="View details" /><%
      } else {
%><s:submit ac="lang-hide-details" label="Hide details" /><%
      }
      if (!phr->ss->loc_cs_map[lang->id]) {
%><s:submit ac="lang-deactivate" label="Deactivate" /><%
      }
    } else {
%><s:submit ac="lang-activate" label="Activate" /><%
    }
%></td>
            <td<s:v value="td_attr" escape="false" />>&nbsp;</td>
        </tr>
    </s:form>

<%
    if (!lang || !phr->ss->lang_flags[lang->id]) continue;
    //ASSERT(lang->compile_id == i);
    row = 1;
%>

    <s:htr attr="form_row_attrs[row ^= 1]">
        <td>Language ID:</td>
        <td><s:v value="lang->id" /></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:htr>
<!--
    //LANGUAGE_PARAM(compile_id, "d"),
    fprintf(f, "<tr%s><td>Compilation server ID:</td><td>%d</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n",
            form_row_attrs[row ^= 1],
            lang->compile_id);
    //LANGUAGE_PARAM(short_name, "s"),
    fprintf(f, "<tr%s><td>Language short name:</td><td>%s</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n",
            form_row_attrs[row ^= 1], ARMOR(lang->short_name));
    //LANGUAGE_PARAM(arch, "s"),
    s = html_armor_string_dup(lang->arch);
    fprintf(f, "<tr%s><td>Language architecture:</td><td>%s%s</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n",
            form_row_attrs[row ^= 1],
            s, *s?"":"<i>(Default)</i>");
    xfree(s);
    //LANGUAGE_PARAM(src_sfx, "s"),
    fprintf(f, "<tr%s><td>Suffix of the source files:</td><td>%s</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n",
            form_row_attrs[row ^= 1],
            ARMOR(lang->src_sfx));
    //LANGUAGE_PARAM(exe_sfx, "s"),
    s = html_armor_string_dup(lang->exe_sfx);
    fprintf(f, "<tr%s><td>Suffix of the executable files:</td><td>%s%s</td><td>&nbsp;</td><td>&nbsp;</td></tr>\n",
            form_row_attrs[row ^= 1],
            s, *s?"":"<i>(Empty)</i>");
    xfree(s);

    snprintf(lang_hidden_vars, sizeof(lang_hidden_vars),
             "%s<input type=\"hidden\" name=\"lang_id\" value=\"%d\"/>",
             hidden_vars, lang->compile_id);

    //LANGUAGE_PARAM(long_name, "s"),
    print_string_editing_row(f, "Language long name:", lang->long_name,
                             SSERV_CMD_LANG_CHANGE_LONG_NAME,
                             SSERV_CMD_LANG_CLEAR_LONG_NAME,
                             0,
                             session_id, 
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    //LANGUAGE_PARAM(extid, "S"),
    print_string_editing_row(f, "Language external name:", lang->extid,
                             SSERV_CMD_LANG_CHANGE_EXTID,
                             SSERV_CMD_LANG_CLEAR_EXTID,
                             0,
                             session_id, 
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    //LANGUAGE_PARAM(disabled, "d"),
    print_boolean_select_row(f, "Disable this language for participants",
                             lang->disabled,
                             SSERV_CMD_LANG_CHANGE_DISABLED,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    //LANGUAGE_PARAM(insecure, "d"),
    print_boolean_select_row(f, "This language is insecure",
                             lang->insecure,
                             SSERV_CMD_LANG_CHANGE_INSECURE,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    //LANGUAGE_PARAM(disable_security, "d"),
    print_boolean_select_row(f, "Disable security restrictions",
                             lang->disable_security,
                             SSERV_CMD_LANG_CHANGE_DISABLE_SECURITY,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    //LANGUAGE_PARAM(disable_testing, "d"),
    print_boolean_select_row(f, "Disable any testing of submissions",
                             lang->disable_testing,
                             SSERV_CMD_LANG_CHANGE_DISABLE_TESTING,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    if (!lang->disable_testing) {
      //LANGUAGE_PARAM(disable_auto_testing, "d"),
      print_boolean_select_row(f, "Disable automatic testing of submissions",
                               lang->disable_auto_testing,
                               SSERV_CMD_LANG_CHANGE_DISABLE_AUTO_TESTING,
                               session_id,
                               form_row_attrs[row ^= 1],
                               self_url, extra_args, lang_hidden_vars);
    }

    //LANGUAGE_PARAM(binary, "d"),
    print_boolean_select_row(f, "Language source files are binary",
                             lang->binary,
                             SSERV_CMD_LANG_CHANGE_BINARY,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    //LANGUAGE_PARAM(is_dos, "d"),
    print_boolean_select_row(f, "Perform UNIX->DOS conversion",
                             lang->is_dos,
                             SSERV_CMD_LANG_CHANGE_IS_DOS,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

    //LANGUAGE_PARAM(max_vm_size, "d"),
    if (lang->max_vm_size == -1L || lang->max_vm_size == 0) {
      num_buf[0] = 0;
    } else {
      num_to_size_str(num_buf, sizeof(num_buf), lang->max_vm_size);
    }
    html_start_form(f, 1, self_url, lang_hidden_vars);
    fprintf(f, "<tr%s><td>%s</td><td>",
            form_row_attrs[row ^= 1], "Maximum VM size:");
    html_edit_text_form(f, 0, 0, "param", num_buf);
    fprintf(f, "</td><td>");
    html_submit_button(f, SSERV_CMD_LANG_CHANGE_MAX_VM_SIZE, "Change");
    fprintf(f, "</td>");
    print_help_url(f, SSERV_CMD_LANG_CHANGE_MAX_VM_SIZE);
    fprintf(f, "</tr></form>\n");

    //LANGUAGE_PARAM(max_stack_size, "d"),
    if (lang->max_stack_size == -1L || lang->max_stack_size == 0) {
      num_buf[0] = 0;
    } else {
      num_to_size_str(num_buf, sizeof(num_buf), lang->max_stack_size);
    }
    html_start_form(f, 1, self_url, lang_hidden_vars);
    fprintf(f, "<tr%s><td>%s</td><td>",
            form_row_attrs[row ^= 1], "Maximum stack size:");
    html_edit_text_form(f, 0, 0, "param", num_buf);
    fprintf(f, "</td><td>");
    html_submit_button(f, SSERV_CMD_LANG_CHANGE_MAX_STACK_SIZE, "Change");
    fprintf(f, "</td>");
    print_help_url(f, SSERV_CMD_LANG_CHANGE_MAX_STACK_SIZE);
    fprintf(f, "</tr></form>\n");

    //LANGUAGE_PARAM(max_file_size, "d"),
    if (lang->max_file_size == -1L || lang->max_file_size == 0) {
      num_buf[0] = 0;
    } else {
      num_to_size_str(num_buf, sizeof(num_buf), lang->max_file_size);
    }
    html_start_form(f, 1, self_url, lang_hidden_vars);
    fprintf(f, "<tr%s><td>%s</td><td>",
            form_row_attrs[row ^= 1], "Maximum file size:");
    html_edit_text_form(f, 0, 0, "param", num_buf);
    fprintf(f, "</td><td>");
    html_submit_button(f, SSERV_CMD_LANG_CHANGE_MAX_FILE_SIZE, "Change");
    fprintf(f, "</td>");
    print_help_url(f, SSERV_CMD_LANG_CHANGE_MAX_FILE_SIZE);
    fprintf(f, "</tr></form>\n");

    if (lang->binary) {
      //LANGUAGE_PARAM(content_type, "s"),
      print_string_editing_row(f, "Content type for files:", lang->content_type,
                               SSERV_CMD_LANG_CHANGE_CONTENT_TYPE,
                               SSERV_CMD_LANG_CLEAR_CONTENT_TYPE,
                               0,
                               session_id, 
                               form_row_attrs[row ^= 1],
                               self_url, extra_args, lang_hidden_vars);
    }

    //LANGUAGE_PARAM(style_checker_cmd, "s"),
    print_string_editing_row(f, "Style checker command:", lang->style_checker_cmd,
                               SSERV_CMD_LANG_CHANGE_STYLE_CHECKER_CMD,
                               SSERV_CMD_LANG_CLEAR_STYLE_CHECKER_CMD,
                               0,
                               session_id, 
                               form_row_attrs[row ^= 1],
                               self_url, extra_args, lang_hidden_vars);

    // additional compilation options
    buf[0] = 0;
    if (sstate->lang_opts[lang->id])
      snprintf(buf, sizeof(buf), "%s", sstate->lang_opts[lang->id]);
    print_string_editing_row(f, "Additional compilation options:", buf,
                             SSERV_CMD_LANG_CHANGE_OPTS,
                             SSERV_CMD_LANG_CLEAR_OPTS,
                             0,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);

/*
  FIXME: LANGUAGE_PARAM(compiler_env, "x"),
 */

    //LANGUAGE_PARAM(style_checker_env, "x"),
    if (!lang->style_checker_env || !lang->style_checker_env[0]) {
      env = xstrdup("");
    } else {
      env = sarray_unparse(lang->style_checker_env);
    }
    print_string_editing_row(f, "Style checker environment:", env,
                             SSERV_CMD_LANG_CHANGE_STYLE_CHECKER_ENV,
                             SSERV_CMD_LANG_CLEAR_STYLE_CHECKER_ENV,
                             0,
                             session_id,
                             form_row_attrs[row ^= 1],
                             self_url, extra_args, lang_hidden_vars);
    xfree(env); env = 0;

    if (lang->unhandled_vars) {
      fprintf(f, "<tr%s><td colspan=\"3\" align=\"center\"><b>Uneditable parameters</td></tr>\n<tr><td colspan=\"3\"><pre>%s</pre></td></tr>\n",
              form_row_attrs[row ^= 1],
              ARMOR(lang->unhandled_vars));
    }
-->
<%
  }
%>
</table>

<s:form><table><tr><td><s:submit ac="lang-update-versions" label="Update versions" /></td></tr></table></s:form>

<%
bottom_links: ;
%>

<s:form>
<table border="0"><tr>
    <td><s:a ac="main-page"><s:_>To the top</s:_></s:a></td>
    <td><s:submit ac="cnts-forget" label="Forget it" /></td>
    <td><s:submit ac="cnts-commit" label="COMMIT changes!" /></td>
    <td><s:a ac="view-new-serve-cfg"><s:_>View serve.cfg</s:_></s:a></td>
</tr></table>
</s:form>

<%@include "footer.csp"
%><%
  l10n_setlocale(0);
cleanup:
  html_armor_free(&ab);
%>
