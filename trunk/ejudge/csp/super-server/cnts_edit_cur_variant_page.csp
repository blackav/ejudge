<%
/* $Id$ */
%><%@include "includes.csp"
%><%
#include "ejudge/prepare_serve.h"

#include <ctype.h>
%><%@set getter_name = "csp_get_cnts_edit_cur_variant_page"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@set err_prefix = "SSERV_ERR_"
%><%@page csp_view_cnts_edit_cur_variant_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    unsigned char subtitle_buf[1024];
    const unsigned char *title = 0;
    const unsigned char *subtitle = subtitle_buf;
    opcap_t caps = 0;
    int row = 1;
    int cur_page = 5;
static const unsigned char head_row_attr[] =
  " bgcolor=\"#a0a0a0\"";
static const unsigned char * const form_row_attrs[]=
{
  " bgcolor=\"#d0d0d0\"",
  " bgcolor=\"#e0e0e0\"",
};

    if (phr->priv_level != PRIV_LEVEL_ADMIN) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (ejudge_cfg_opcaps_find(phr->config, phr->login, &caps) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (opcaps_check(caps, OPCAP_EDIT_CONTEST) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (!phr->ss->edited_cnts) FAIL(SSERV_ERR_CONTEST_NOT_EDITED);

    snprintf(subtitle_buf, sizeof(subtitle_buf), "editing serve.cfg, variants");
    cnts = phr->ss->edited_cnts;
    struct section_global_data *global = phr->ss->global;
%><%@include "header.csp"
%>

<%@include "cnts_edit_cur_top_menu.csp"
%>

<%
  if (phr->ss->serve_parse_errors) {
%>
<h2><tt>serve.cfg</tt> cannot be edited</h2>
<font color="red"><pre><s:v value="phr->ss->serve_parse_errors" /></pre></font>
<%
    goto bottom_links;
  }
%>

<%
  if (!global) {
%>
<h2>No current global settings!</h2>
<%
    goto bottom_links;
  }
%>

<%
  int var_prob_num = 0;
  if (phr->ss->probs) {
    int i;
    for (i = 1; i < phr->ss->prob_a; i++)
      if (phr->ss->probs[i] && phr->ss->probs[i]->variant_num > 0)
        var_prob_num++;
  }
  if (var_prob_num <= 0) {
%><h2>Contest does not have variant problems</h2><%
    prepare_free_variant_map(global->variant_map);
    global->variant_map = 0;
    goto bottom_links;
  }
%>

<%
  struct variant_map *vmap = 0;
  char *vlog_s = 0;
  size_t vlog_z = 0;
  if (phr->action == SSERV_CMD_CNTS_EDIT_CUR_VARIANT_PAGE) {
    vmap = global->variant_map;
    if (!vmap || vmap->prob_map_size != phr->ss->prob_a || vmap->prob_rev_map_size <= 0) {
%><h2>Variant map is obsolete</h2><%
      prepare_free_variant_map(global->variant_map);
      global->variant_map = 0;
      goto bottom_links;
    }
  } else {
    FILE *vlog_f = open_memstream(&vlog_s, &vlog_z);
    int r = super_html_update_variant_map(vlog_f, cnts->id, phr->userlist_clnt,
                                          cnts, global, phr->ss->prob_a, phr->ss->probs,
                                          &phr->ss->var_header_text, &phr->ss->var_footer_text);
    fclose(vlog_f); vlog_f = 0;
    if (r < 0) {
%><h2>Variant map cannot be edited</h2>
<font color="red"><pre><s:v value="vlog_s" /></pre></font>
<%
      xfree(vlog_s); vlog_s = 0; vlog_z = 0;
      goto bottom_links;
    }
  }
%>

<h2>Variant map</h2>

<%
  if (vlog_s) {
    while (vlog_z > 0 && isspace(vlog_s[vlog_z - 1])) --vlog_z;
    vlog_s[vlog_z] = 0;
  }
  if (vlog_s && *vlog_s) {
%><p>Variant map parsing messages:</p>
<pre><s:v value="vlog_s" /></pre><%
  }
  xfree(vlog_s); vlog_s = 0; vlog_z = 0;
  vmap = global->variant_map;
%>

<table border="0">
    <s:htr attr="head_row_attr">
        <th>User Id</th>
        <th>User Login</th>
        <th>User Name</th>
<%
  int j = 0;
  for (j = 0; j < vmap->prob_rev_map_size; ++j) {
    const struct section_problem_data *prob = phr->ss->probs[vmap->prob_rev_map[j]];
%>
        <th><s:v value="prob->short_name" /></th>
<%
  }
%>
        <th>Action</th>
    </s:htr>
<%
  int i;
  for (i = 0; i < vmap->u; ++i) {
%>
    <s:form>
        <s:hidden name="row" value="i" checkExpr=">= 0" />
        <s:htr attr="form_row_attrs[row ^= 1]">
            <td><%
    if (vmap->v[i].user_id > 0) {
%><s:v value="vmap->v[i].user_id" /><%
    } else {
%>&nbsp;<%
    }
%></td>
            <td><%
    if (vmap->v[i].login) {
%><s:v value="vmap->v[i].login" /><%
    } else {
%>&nbsp;<%
    }
%></td>
            <td><%
    if (vmap->v[i].name) {
%><s:v value="vmap->v[i].name" /><%
    } else {
%>&nbsp;<%
    }
%></td>
<%
    for (j = 0; j < vmap->prob_rev_map_size; ++j) {
      const struct section_problem_data *prob = phr->ss->probs[vmap->prob_rev_map[j]];
%>
            <td><select name='param_<s:v value="j" />'><s:option value="0" selectedExpr="!vmap->v[i].variants[j]">N/A</s:option><%
      int k;
      for (k = 1; k <= prob->variant_num; ++k) {
%><s:option value="k" selectedExpr="vmap->v[i].variants[j] == k"><s:v value="k" /></s:option><%
      }
%></select></td><%
    }
%>
            <td><s:submit ac="prob-change-variants" label="Change"/><s:submit ac="prob-delete-variants" label="Delete row"/></td>
        </s:htr>
    </s:form>
<%
  }
%>
</table>

<s:form>
    <table border="0">
        <tr>
            <td>Problem</td>
            <td><select name="prob_id"><option value=""></option><%
  for (j = 0; j < vmap->prob_rev_map_size; ++j) {
    const struct section_problem_data *prob = phr->ss->probs[vmap->prob_rev_map[j]];
%><s:option value="prob->id"><s:v value="prob->short_name"/> - <s:v value="prob->long_name" /></s:option><%
  }
%></select></td>
            <td><s:submit ac="prob-clear-variants" label="Clear variants" /><s:submit ac="prob-random-variants" label="Random variants" /></td>
        </tr>
    </table>
</s:form>

<%
bottom_links: ;
%>

<%@include "cnts_edit_cur_bottom_menu.csp"
%>

<%@include "footer.csp"
%><%
  l10n_setlocale(0);
cleanup:
  html_armor_free(&ab);
%>
