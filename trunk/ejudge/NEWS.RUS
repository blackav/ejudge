Версия 2.1.23 (20031121)
========================
В данной версии исправлены замеченные ошибки предыдущей версии.
Новых возможностей не добавлено. Формат конфигурационных файлов
не изменился.

В архив исходных текстов добавлен неофициальный русский перевод
Стандартной общественной лицензии GNU (автор перевода - Елена
Тяпкина). Система ejudge распространяется на условиях данной
лицензии. Перевод находится в файле COPYING.RUS.

serve, compile, run
-------------------

В конфигурационных файлах поддерживаются два вида кавычек:
одинарные и двойные, а также символ \ для экранирования
следующего за ним символа. Правила использования этих
специальных символов такие же, как в файле дополнительной
информации о тестах test.inf. Например:
table_head_style = 'h2 style="common"'

serve/master
------------

При экспорте журнала посылок в формате XML корректно
обрабатываются специальные символы (", &) - они заменяются на
соответствующие HTML/XML последовательности (&quot; &amp;).

team
----

В случае ошибки регистрации пользователя выдаётся сообщение об
ошибке, в котором более точно указывается причина ошибки:
пользователь не зарегистрирован на турнир, пользователь
заблокирован администратором или неверный
логин/пароль/идентификатор турнира.

run
---

Символы `#' внутри последовательностей символов в кавычках " и
', а также после \ обрабатываются корректно. Таким образом можно
использовать символ `#' в аргументах командной строки,
передаваемых тестируемой программе.

userlist-server
---------------

При записи базы пользователей в формате XML специальных
XML-cимволы (", &, <, >) обрабатываются корректно, то есть
заменяются на соответствующие последовательности (&quot; и т. д.).

Для поиска логина пользователя или его cookie реализован
просмотр хэш-таблиц вместо последовательного просмотра
списков. Это позволило ускорить поиск в 100 раз.

register
--------

Исправлено обрезание полей ввода по символу "Номер". Этот символ
теперь корректно заменяется на свой Unicode-код &#XXXX;.

libchecker.a
------------

Если в проверяющей программе установлен флаг NEED_TGZ,
библиотека libchecker.a сохраняет в глобальных переменных
`dir_in_path' и `dir_out_path'. В переменной `dir_in_path'
находится путь к каталогу, в котором находится содержимое
рабочего каталога, создаваемого перед запуском тестируемой
программы (dir_in_path). В переменной `dir_out_path' находится
путь к каталогу в рабочем каталоге тестирования. Таким образом,
чтобы открыть входной каталог тестируемой программы можно
использовать вызов функции opendir(dir_in_path), а чтобы открыть
выходной каталог тестируемой программы - opendir(dir_out_path).

В библиотеку добавлены новые функции:
  checker_read_corr_double,
  checker_read_corr_long_long,
  checker_read_int,
  checker_read_in_long_double,
  checker_read_long_double,
  checker_read_long_long.

