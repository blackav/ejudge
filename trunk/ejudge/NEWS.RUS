-*- mode: text; mode: auto-fill; coding: koi8-r -*-
$Id$

Версия 2.1.35 (20050118)
========================
В данной версии исправлены некоторые некритические ошибки и
добавлены некоторые новые возможности.

userlist-server
---------------
При чтении XML-файла базы пользователей не выдаётся ошибка
разбора XML файла, если какой-либо пользователь имеет пустой
пароль (то есть пароль, установленный в пустую строку).

Попытка установить пустой пароль (пароль, равный пустой строке)
с помощью программы `edit-userlist' теперь приводит к ошибке
"Invalid password". Пустые пароли всё равно считаются
недопустимыми при проверке пароля при входе в систему.

serve
-----
Добавлены новые конфигурационные переменные секции описания
языка программирования: `disable_testing',
`disable_auto_testing'. Они ведут себя точно так же, как
одноимённые переменные секции описания задачи, то есть
переменная `disable_testing' запрещает всякое тестирование
посылки на заданном языке, а переменная `disable_auto_testing'
предотвращает автоматическое тестирование посылки на заданном
языке сразу после её получения. Такая посылка получает статус
"Accepted for testing" и может быть протестирована с помощью
явной команды перетестирования посылки администратором турнира.

serve
-----
Добавлена новая конфигурационная переменная секции описания
задачи `disqualified_penalty'. Эта переменная позволяет задать
штраф за дисквалифицированную посылку. В данной версии системы
ejudge дисквалифицированные посылки учитываются отдельно от
обычных посылок и штрафуются отдельно. По умолчанию значение
переменной `disqualified_penalty' равно значению переменной
`run_penalty'.

Таким образом, в текущей версии системы балл за посылку в
системе KIROV или OLYMPIAD вычисляется по следующей формуле:
S = I * M - A * P + D + J - B * Q
Переменные `S', `I', `M', `A', `P', `J' описаны ниже.
Переменная `B' - это количество дисквалифицированных посылок,
`Q' - штраф за одну дисквалифицированную посылку, задаваемый
конфигурационной переменной `disqualified_penalty'.

В режиме турнира KIROV или OLYMPIAD в поле "баллы" таблицы
посылок пользователя соответственно изменилось отображение
формулы, по которой вычислялись баллы за данную посылку.
Полный вид отображения формулы выглядит следующим образом:
S = I [ * M ] [ - A * P ] [ +/- D ] [ +/- J ] [ - B * Q ]
если M == 1, то соответствующая часть формулы не отображается,
аналогично для A * P == 0, D == 0, J == 0, B * Q == 0.

В журнал посылок в CVS-форме, выводимый с помощью команды
serve-cmd dump-master-runs
добавлены два поля
          [27] disq_attempts
          [28] disq_penalty

serve
-----
При просмотре листинга программы с помощью команды "View source"
CGI программ `judge' или `master' строки программы нумеруются.

serve,master,judge
------------------
Кнопка "Reset filter" выражения фильтра теперь очищает только
выражение фильтра и номер первой и последней просматриваемой
посылки и не очищает параметры просмотра списка сообщений.

В диалог задания параметров просмотра списка сообщений добавлен
новый параметр, выбираемый с помощью выпадающего меню. Параметр
позволяет просматривать либо все сообщения, либо только
неотвеченные сообщения. Для программы `judge' по умолчанию
устанавливается режим просмотра неотвеченных сообщений, а для
программы `master' - режим просмотра всех сообщений.

Добавлена кнопка "Reset filter" для сброса параметров просмотра
списка сообщений. Данная кнопка расположена рядом с кнопкой
"View" просмотра списка сообщений.

contest.xml
-----------     
Добавлен новый элемент <register_email_file>. Данный элемент
позволяет задать шаблон письма, посылаемого после регистрации
нового пользователя. Значение элемента может быть либо полным
путём к файлу, либо относительным путём. В последнем случае путь
вычисляется относительно каталога конфигурационных файлов
турнира, задаваемого либо с помощью элемента <root_dir>, либо с
помощью элемента <conf_dir>. В значении элемента допускаются
форматные преобразования, например, %Vl - номер текущего
языкового окружения (0 - английский язык, 1 - русский язык),
например:
<register_email_file>email_tmpl_%Vl.txt</register_email_file>
Тогда если выбран русский язык, тогда в качестве шаблона
регистрационного письма будет использоваться файл
email_tmpl_1.txt в каталоге conf (<root_dir>/conf) каталога
турнира, а если выбран английский язык, будет использоваться
файл email_tmpl_0.txt. Если файл шаблона письма не существует
для текущего языкового окружения, загружается файл для шаблона
для языкового окружения 0, если и этот шаблон письма не
существует, используется шаблон письма в текущем языковом
окружении. Если значение элемента <register_email_file> не
установлено, всегда используется шаблон письма по умолчанию.

В тексте шаблона письма также допускаются форматные
преобразования, подставляющие параметры нового пользователя в
текст письма. Допустимые форматные преобразования перечислены
ниже:
%Vu - URL для продолжения регистрации в системе
%Vl - идентификатор языкового окружения
%Ul - регистрационное имя пользователя
%Ui - регистрационный номер пользователя
%Un - имя пользователя
%Ue - регистрационный email пользователя
%Uz - автоматически сгенерированный новый пароль пользователя

Пример текста письма по умолчанию на английском языке:
--------
Hello,

Somebody (probably you) have specified this e-mail address (%Ue)
when registering an account on the Moscow Programming Contests
Server.

To confirm registration, you should enter the provided login
and password on the login page of the server at the
following url: %Vu.

Note, that if you do not do this in 24 hours from the moment
of sending this letter, registration will be void.

login:    %Ul
password: %Uz

Regards
The ejudge contest administration system
--------

serve-cmd,serve
---------------
Реализована новая команда проверки, есть ли в данный момент в
турнире посылки в состоянии компиляции или тестирования. Данная
команда доступна только с помощью программы `serve-cmd':
serve-cmd CONTEST-ID has-transient-runs SESSION-ID-FILE
Если такие посылки есть, то код возврата программы равен 2, если
таких посылок нет, код возврата равен 0. Кроме того,
вырабатывается код возврата 1, если возникла какая-либо другая
ошибка выполнения команды.

serve-cmd
---------
Реализовано несколько новых команд управления турниром из
командной строки:
serve-cmd CONTEST-ID suspend-testing SESSION-ID-FILE
          Данная команда приостанавливает тестирование всех
          поступающих посылок. Посылки получают статус "Accepted
          for testing" (RUN_ACCEPTED) и не направляются на
          компиляцию и тестирование.
serve-cmd CONTEST-ID resume-testing SESSION-ID-FILE
          Данная команда отменяет действие предыдущей команды,
          то есть все поступающие посылки будут обрабатываться
          как обычно.
serve-cmd CONTEST-ID judge-suspended-runs SESSION-ID-FILE
          Данная команда отправляет на компиляцию и тестирование
          все посылки, которые имеют статус "Accepted for
          testing" (RUN_ACCEPTED).

Эти команды могут использоваться для корректного импорта
внешнего журнала посылок в систему. Как было сказано ниже,
команда `import-xml-runs' не работает, если в текущий момент в
системе есть посылки в состоянии компиляции или тестирования.
Поэтому алгоритм импорта внешнего журнала посылок в работающий
турнир может выглядеть следующим образом:
	serve-cmd CONTEST-ID suspend-testing SESSION-ID-FILE
	serve-cmd CONTEST-ID has-transient-runs SESSION-ID-FILE
	while [ "$?" = 2 ]
	do
                sleep 1
		serve-cmd CONTEST-ID has-transient-runs SESSION-ID-FILE
	done
        serve-cmd CONTEST-ID import-xml-runs SESSION-ID-FILE RUNLOG-FILE
        serve-cmd CONTEST-ID resume-testing SESSION-ID-FILE
        serve-cmd CONTEST-ID judge-suspended-runs SESSION-ID-FILE
В данном фрагменте отсутствует проверка возможных ошибочных ситуаций.

serve-cmd CONTEST-ID full-import-xml-runs SESSION-ID-FILE XML-FILE1 ...
	Данная команда реализует полный алгоритм импорта
	внешнего журнала посылок в систему, описанный выше. В
	качестве аргументов команды допускается задание сразу
	нескольких файлов с журналами посылок, все эти файлы
	будут проимпортированы. Команда возвращает 0 при
	успешном завершении, когда все файлы были успешно
	проимпортированы, 1 - когда ни один файл не был
	проимпортирован из-за возникшей ошибки, 2 - если ни один
	файл не был проимпортирован, так как программа была
	прервана пользователем, 3 - если часть файлов была
	проимпортирована, а часть нет из-за ошибки в этих
	файлах. Данная команда корректно восстанавливает
	состояние турнира в случае, если её выполнение было
	прервано пользователем, при этом учитывается состояние
	турнира (то есть, было ли приостановлено тестирование
	поступающих посылок) на момент начала выполнения
	команды.

serve
-----
Добавлены новые возможности в выражение фильтра посылок.
Поддерживаются следующие новые предикаты проверки состояния
посылки:
userinvisible [ ( RUN-ID ) ]
        Вырабатывает булевский результат TRUE, если посылка
        RUN-ID выполнена пользователем, который в данном турнире
        имеет статус "невидимый" (invisible). В противном случае
        вырабатывается булевский результат FALSE. Если выражение
        RUN-ID опущено, берётся текущая посылка.
userbanned [ ( RUN-ID ) ]
        Вырабатывает булевский результат TRUE, если посылка
        RUN-ID выполнена пользователем, который в данном турнире
        имеет статус "дисквалифицированный" (banned). В
        противном случае вырабатывается булевский результат
        FALSE. Если выражение RUN-ID опущено, берётся текущая
        посылка.
userlocked [ ( RUN-ID ) ]
        Вырабатывает булевский результат TRUE, если посылка
        RUN-ID выполнена пользователем, который в данном турнире
        имеет статус "заблокированный" (locked). В противном
        случае вырабатывается булевский результат FALSE. Если
        выражение RUN-ID опущено, берётся текущая посылка.
curuserinvisible
        Вырабатывает булевский результат TRUE, если текущая
        посылка выполнена пользователем, который в данном турнире
        имеет статус "невидимый" (invisible). В противном случае
        вырабатывается булевский результат FALSE.
curuserbanned
        Вырабатывает булевский результат TRUE, если текущая
        посылка выполнена пользователем, который в данном турнире
        имеет статус "дисквалифицированный" (banned). В
        противном случае вырабатывается булевский результат
        FALSE.
curuserlocked
        Вырабатывает булевский результат TRUE, если текущая
        посылка выполнена пользователем, который в данном турнире
        имеет статус "заблокированный" (locked). В противном
        случае вырабатывается булевский результат FALSE.
Новые предикаты проверки состояния посылки могут далее
связываться логическими связками друг с другом и с другими
допустимыми выражениями фильтра, например:
!userinvisible && !invisible
Этому выражению фильтра удовлетворяют все посылки, которые не
являются собственно "невидимыми", и не посланы "невидимыми"
пользователями.

serve
-----
e-mail адреса участников турнира теперь отображаются на странице
"View users" CGI-программ `judge' и `master'.

serve,run
---------
Добавлена новая глобальная конфигурационная переменная
`html_report'. Если эта переменная установлена в ненулевое
значение, судейский протокол тестирования будет генерироваться
программой `run' в формате HTML, а не как простой текст. В
HTML-протоколе тестирования добавлены ссылки от таблицы сводной
информации, находящейся вверху страницы к результатам
тестирования для каждого.

В одном турнире могут быть смешаны протоколы тестирования разных
типов. Чтобы изменить тип протокола тестирования по ходу турнира
необходимо изменить значение переменной `html_report' и
перезапустить программу `serve'. Программа `run' в этом случае
может не перезапускаться.

Версия 2.1.34 (20050108)
========================
В данной версии исправлено значительное количество ошибок и
внесены некоторые улучшения во все программы системы.
Реализованы новые программы, в частности управление турниром из
командной строки.

Начата работа по переносу программ `compile' и `run' на
платформу Windows. Вся серверная часть по-прежнему пока работает
только под Linux. Перенос `compile' и `run' позволит
сделать доступными участникам все системы и языки
программирования, доступные для Windows. Естественно, для
компиляции и проверки потребуется (помимо сервера) компьютер под
Windows. Работы предполагается завершить в следующей версии
системы.

configure
---------
Добавлена опция `--enable-super-serve-socket', которая позволяет
установить путь по умолчанию к командному сокету программы
`super-serve'. Эта программа принимает команды управления
турнирами через указанный Unix-сокет аналогично программам
`userlist-server' и `serve'. На данный момент поддержка
управляющих команд реализована лишь частично и не рекомендуется
для использования. Окончательная реализация предполагается в
следующей версии.

ejudge-setup
------------
Поддерживается редактирования значения пути к командному сокету
программы `super-serve' (см. опцию `--enable-super-serve-socket'
выше).

serve-cmd
---------
Новая программа, предназначенная для управления сервером турнира
`serve' из командной строки. На настоящий момент реализовано
подмножество команд управления турниром, доступных через
интерактивную CGI-программу `master'.

Программа serve-cmd поддерживает следующие команды управления
турниром из командной строки:
serve-cmd CONTEST-ID login SESSION-ID-FILE LOGIN PASSWORD
          Команда входа в систему. Данную команду необходимо
          выполнить до любой операции. Здесь CONTEST-ID - это
          идентификатор турнира, то есть число.
          SESSION-ID-FILE - это имя файла, в который будет
          записан идентификатор сессии (cookie). Файл с
          идентификатором сессии необходимо будет указать во
          всех командах.
          LOGIN - регистрационное имя пользователя, PASSWORD -
          пароль пользователя. Пользователь должен иметь биты
          полномочий MASTER_LOGIN или JUDGE_LOGIN для данного
          турнира.
serve-cmd CONTEST-ID logout SESSION-ID-FILE
          Команда завершения работы. После выполнения данной
          команды идентификатор сессии, находящийся в файле
          SESSION-ID-FILE, становится недействительным. Если
          команда logout не выполнена, идентификатор сессии
          действует 24 часа с момента выполнения команды login.
serve-cmd CONTEST-ID write-xml-runs SESSION-ID-FILE
          Данная команда выводит на стандартный поток вывода
          журнал посылок во внутреннем формате. См. далее
          описание команды "write XML runs" в документации на
          CGI-программу `master'.
serve-cmd CONTEST-ID export-xml-runs SESSION-ID-FILE
          Данная команда выводит на стандартный поток вывода
          журнал посылок во внешнем формате. См. далее описание
          команды "export XML runs" в документации на
          CGI-программу `master'.
serve-cmd CONTEST-ID dump-runs SESSION-ID-FILE
          Данная команда выводит на стандартный поток вывода
          журнал посылок в формате CSV, то есть в формате, в
          котором одна запись занимает одну строку, а поля
          записи разделяются символом ';' (точка с запятой).
          См. далее описание команды "dump XML runs" в
          документации на CGI-программу `master'.
serve-cmd CONTEST-ID soft-update-stand SESSION-ID-FILE
          Данная команда обновляет таблицу текущих результатов.
          При этом учитывается промежуток времени, когда таблица
          текущих результатов не должна обновляться. В это время
          данная команда не производит никакого эффекта. Эта
          команда может использоваться после того, когда в
          турнир были проимпортированы новые посылки с помощью
          команды import-xml-runs.
serve-cmd CONTEST-ID import-xml-runs SESSION-ID-FILE XML-FILE
          Данная команда импортирует новые посылки в работающий
          турнир. XML-FILE - это файл с XML-журналом посылок,
          который может быть либо во внешнем, либо во внутреннем
          формате. См. далее описание команды "import XML runs"
          в документации на CGI-программу `master'. Обратите
          внимание, что команда import-xml-runs не выполнится,
          если в текущий момент в турнире, в который
          импортируются посылки, есть посылки в состоянии
          компиляции или выполнения.
serve-cmd CONTEST-ID dump-source SESSION-ID-FILE RUN-ID
          Данная команда выводит на стандартный поток вывода
          исходный код посылки с номером RUN-ID.
serve-cmd CONTEST-ID dump-report SESSION-ID-FILE RUN-ID
          Данная команда выводит на стандартный поток вывода
          судейский протокол тестирования посылки с номером
          RUN-ID.
serve-cmd CONTEST-ID dump-team-report SESSION-ID-FILE RUN-ID
          Данная команда выводит на стандартный поток вывода
          пользовательский протокол тестирования посылки с
          номером RUN-ID.
serve-cmd CONTEST-ID dump-master-runs SESSION-ID-FILE FILTER-EXPR FIRST-RUN LAST-RUN
          Данная команда выводит на стандартный поток вывода
          список посылок, удовлетворяющих заданному критерию,
          как при задании выражения фильтра на главной странице
          программы `master'. FILTER-EXPR - это выражение
          фильтра, описание которого дано в соответствующем
          разделе документации. FIRST-RUN - это номер первой
          посылки, а LAST-RUN - это номер последней посылки.
          Отобранные посылки выводятся в формате CSV, в котором
          каждая запись занимает одну строку текста, а поля
          записи разделены символом '&'. Этот символ
          используется, так как он не может использоваться в
          полях. Запись имеет следующие поля:
          [0]  run_id
          [1]  imported_flag
          [2]  hidden_flag
          [3]  read_only_flag
          [4]  absolute_time
          [5]  absolute_time_nsec
          [6]  time_from_start
          [7]  ip_address
          [8]  size
          [9]  hash_value
          [10] user_id
          [11] user_login
          [12] user_name
          [13] problem
          [14] variant
          [15] language
          [16] language_suffix
          [17] status_num
          [18] status_str
          [19] tests_passed/failed_test
          [20] score_gained
          [21] base_score
          [22] score_multiplier
          [23] attempt
          [24] run_penalty
          [25] date_penalty
          [26] score_adjustment

serve-control
-------------
Новая CGI-программа для управлением сервером серверов турнира
`super-serve'. Программа `serve-control' использует управляющий
сокет программы `super-serve' для взаимодействия аналогично
тому, как программа `master' использует управляющий сокет для
взаимодействия с программой `serve'. Путь по умолчанию к
управляющему сокету программы `super-serve' задаётся с помощью
опции `--enable-super-serve-socket' скрипта `configure'. В
текущей версии системы ejudge требуемая функциональность
реализована в `serve-control' лишь частично. Так, в настоящее
время доступны лишь функции просмотра состояния турнира.

Для работы с программой `serve-control' у пользователя должен
быть установлен бит MASTER_LOGIN или JUDGE_LOGIN в глобальном
конфигурационном файле `ejudge.xml'.

slice-userlist
--------------
Новая программа, которая строит "срез" базы пользователей по
указанному множеству турниров. Программа используется следующим
образом:
slice-userlist [ -i CONTEST ]... [CONFIG_FILE]
здесь CONFIG_FILE - это путь к конфигурационному файлу
ejudge.xml. Если путь к конфигурационному файлу совпадает с
указанным в опции `--enable-ejudge-xml' скрипта `configure', то
есть с путём по умолчанию, то путь CONFIG_FILE можно не
указывать. CONTEST - это номер турнира. Опция -i может быть
указана несколько раз. В этом случае в "срез" базы пользователей
попадут все пользователи, зарегистрированные хотя бы в одном из
указанных турниров. Срез базы печатается на стандартный поток
вывода. Пример использования программы:
slice-userlist -i 10 -i 12

Обратите внимание, что для построения среза используется база
пользователей, находящяяся в файле базы, а не её текущее
состояние, хранящееся в памяти программы `userlist-server'. Если
состояние в памяти и состояние в файле рассогласованы, срез базы
окажется построенным по файлу, то есть будет немного устаревшим.

run
---
Исправлена ошибка, которая приводила к аварийному завершению
программы `run' по нехватке памяти в случае, если тестируемая
программа генерировала очень большой вывод на стандартный поток
вывода или стандартный поток ошибок (размер файла вывода должен
составлять 10 и более Мб в зависимости от размера оперативной
памяти). В предыдущей версии все выходные файлы тестируемой
программы считывались в память, а в текущей версии считываются в
память только файлы, размер которых не превышает максимального
размера, задаваемого с помощью глобальной конфигурационной
переменной `max_file_length' конфигурационного файла
`serve.cfg'.

serve
-----
В случае, если в момент времени, на который было запланировано
начало турнира (scheduled start time), программа `serve' не
работала, а была запущена позднее, в качестве времени начала
турнира устанавливается запланированное время старта турнира, а
не текущее время, как в предыдущей версии.

serve
-----
Исправлены многочисленные ошибки в коде слияния журналов посылки
(import XML logs). В частности, исправлена ошибка, приводившая к
очистке архивов посылок при слиянии журналов. Исправлена ошибка,
приводившая к появлению дубликатов записей в журнале посылок.

serve,master,judge
------------------
Добавлен новый статус посылки RUN_DISQUALIFIED
(дисквалифицирован). Статус может использоваться, например, для
снятия "списанных" посылок. Статус DISQUALIFIED аналогичен
статусу IGNORED, но при подсчёте очков учитывается как одна
попытка, и соответственно, за неё начисляется штраф, задаваемый
параметром run_penalty секции описания задачи конфигурационного
файла serve.cfg. В выражении фильтра посылок данный статус
задаётся как DQ, например, "status == DQ".

contest.xml
-----------
В формат конфигурационного файла описания турнира добавлены три
новых элемента: <serve_control_access>, <run_user>, <run_group>
и новый атрибут "invisible" элемента <contest>.

Атрибут "invisible" элемента <contest> может принимать значения
"yes" или "no". Если атрибут установлен в "yes", то данный
турнир не отображается в списке турниров в программе
`serve-control'. Значение атрибута по умолчанию - "no".

Элемент <serve_control_access> позволяет задать ограничение на
IP-адрес для управления турниром с помощью программы
`serve-control'.

Элемент <run_user> позволяет задать пользователя, под которым
будет запускаться программа `run', если турнир управляется
программой `super-serve', а элемент <run_group> позволяет задать
группу, под которой будет запускаться программа `run'. Если
какой-либо из элементов не задан, будет использоваться значение
соответствующего элемента <serve_user> или <serve_group>, а если
и они не заданы, программа `run' будет запускаться под тем же
пользователем/группой, под которой запущена программа
`super-serve'.

serve
-----
Исправлена ошибка, которая не позволяла сравнивать программы,
которые хранились в сжатом виде. В предыдущей версии выдавалась
ошибка "System call failed".

userlist.xml
------------
Добавлен новый атрибут "privileged" элемента <user> описания
пользователя. Атрибут может принимать значения "yes" или "no"
(по умолчанию - "no"). Если атрибут установлен в "yes", данный
пользователь считается привилегированным, то есть для того,
чтобы выполнить действие с этим пользователем, необходим более
высокий уровень полномочий, чем для обычного пользователя.
Например, чтобы редактировать данные обычных пользователей
достаточно бита полномочий EDIT_USER, а для редактирования
привилегированных пользователей необходим бит полномочий
PRIV_EDIT_USER.

edit-userlist
-------------
Поддерживается редактирование атрибута "privileged" (см. выше).

userlist-server
---------------
Поддерживается редактирование атрибута "privileged"
пользователей. Пользователь, у которого атрибут "privileged" не
установлен, не может устанавливать или сбрасывать этот атрибут у
других пользователей. Привилегированный пользователь может
только установить атрибут "privileged", но не сбросить его.

ejudge.xml
----------
В конфигурационный файл системы ejudge добавлены новые элементы
<super_serve_socket> - путь к управляющему сокету программы
super-serve, <super_serve_user> - идентификатор системного
пользователя, под которым будет запущена программа super-serve,
<super_serve_group> - идентификатор системной группы, под
которой будет запущена программа super-serve, <userlist_user> -
идентификатор системного пользователя, под которым будет
запущена программа userlist-server, <userlist_group> -
идентификатор системной группы, под которой будет запущена
программа userlist-server. В текущей версии системы запуск
программ userlist-server и super-serve под другими
идентификаторами пользователей пока не поддерживается.

serve,master,judge
------------------
В журнал посылок добавлено поле `score_adj'. Данное поле
используется в режимах турнира KIROV или OLYMPIAD и хранит
дополнительную поправку к количеству баллов за посылку,
полученному в результате автоматического тестирования. Поле
`score_adj' может принимать значения от -128 до 127 (1 знаковый
байт). Например, если по результатам автоматического
тестирования посылка получила 50 баллов, а дополнительная
поправка score_adj для данной посылки равна -20 баллам, посылка
будет оценена в 30 баллов, из которых будет затем вычтен штраф
за попытки или за время сдачи.

Если значение score_adj положительно и получается, что балл за
посылку превышает максимальный балл, установленный в
конфигурационной переменной `full_score' описания задачи, такая
посылка будет оценена в полный бал, как установлено переменной
`full_score'.

Добавлена новая конфигурационная переменная `score_multiplier'
секции описания задачи конфигурационного файла `serve.cfg'. Эта
переменная позволяет задать коэффициент, на который будет
умножено количество баллов, заданное в поле `score' записи в
журнале посылок. По умолчанию значение мультипликатора равно 1.

Таким образом, балл за посылку в системе KIROV или OLYMPIAD
вычисляется по следующей формуле:
S = I * M - A * P + D + J
здесь I - исходное количество баллов, хранящееся в поле `score',
то есть, как правило, количество баллов, полученное в результате
автоматического тестирования. Обратите внимание, что если статус
посылки - OK, и для данной задачи не установлена
конфигурационная переменная `variable_full_score', то в качестве
исходного количества баллов всегда будет выбран полный балл за
задачу (переменная `full_score' секции описания задачи)
независимо от значения поля `score' записи в журнале посылок.
M - это мультипликатор (переменная `score_multiplier' секции
описания задачи, или 1 по умолчанию). A - количество предыдущих
попыток по данной задаче данного пользователя. P - штраф за одну
попытку (переменная `run_penalty' секции описания задачи). D -
календарный штраф (переменная `date_penalty' секции описания
задачи). J - дополнительная поправка к баллам (переменная
score_adj секции описания задачи). Полученное значение S не
может быть большее значения переменной `full_score' секции
описания задачи (тогда берётся значение `full_score') либо быть
меньше 0 (берётся 0).

serve,master,judge,team
-----------------------
В режиме турнира KIROV или OLYMPIAD в поле "баллы" таблицы
посылок пользователя отображается формула, по которой
вычислялись баллы за данную посылку. Формула отображается
следующим образом:
S
(то есть просто количество баллов), если
M == 1 && (A == 0 || P == 0) && D == 0 && J == 0, то есть тогда,
когда исходное количество баллов I не модифицируется.
Второй вид отображения формулы - полный:
S = I [ * M ] [ - A * P ] [ +/- D ] [ +/- J ]
если M == 1, то соответствующая часть формулы не отображается,
аналогично для A * P == 0, D == 0, J == 0.

serve,master,judge
------------------
Для поддержки новых возможностей управления пользователями
переработана страница просмотра участников турнира. Теперь
вместо трёх кнопок "Ban", "Make Invisible" и т. д. добавлена
ссылка на страницу отображения информации об участнике. 

На странице отображения информации об участнике отображаются его
идентификатор, регистрационное имя, является ли данный
пользователь привилегированным, является ли он невидимым и
кнопка изменения статуса невидимости (если текущий пользователь
имеет достаточно полномочий), является ли участник
дисквалифицированным (banned) и кнопка изменения статуса
дисквалификации (если текущий пользователь имеет достаточно
полномочий), является ли участник заблокированным (locked) и
кнопка изменения статуса блокировки, количество посылок, общий
размер посылок, количество сообщений, общий размер сообщений,
общее число напечатанных страниц, дополнительный статус
участника (см. ниже) и кнопка изменения дополнительного статуса
участника (если достаточно полномочий), общее количество
предупреждений (см. ниже), все вынесенные предупреждения, а
также форма нового предупреждения (если достаточно полномочий).

Поддерживается возможность выносить участникам турнира
предупреждения (например, за нарушение правил и т. п.).

Чтобы пользователь мог просматривать список участников турнира,
он должен иметь полномочия MASTER_LOGIN или JUDGE_LOGIN и
LIST_CONTEST_USERS. Чтобы пользователь мог просматривать
подробную информацию об участниках, он должен дополнительно
иметь полномочия GET_USER. Чтобы иметь возможность изменять
параметры участника турнира (то есть делать невидимым, выносить
предупреждения, менять статус и т. д.), необходим бит полномочий
EDIT_REG.

serve
-----
Добавлена возможность спецификации дополнительного статуса
участника. Дополнительный статус - это произвольная строка.
Множество дополнительных статусов участников задаётся в
конфигурационном файле турнира serve.cfg, далее на страцице
просмотра и редактирования информации об участнике статус может
быть изменён. Общее количество различных статусов задаётся с
помощью глобальной конфигурационной переменной
`contestant_status_num', затем с помощью конфигурационной
переменной `contestant_status_legend' должны быть заданы строки
для всех статусов. Первый статус получает номер 0, второй - 1
и т. д. Каждый участник турнира получит статус по умолчанию,
равный 0, который затем может быть изменён. Пример задания
статусов:
contestant_status_num = 3
contestant_status_legend = "Status 0"
contestant_status_legend = "Status 1"
contestant_status_legend = "Status 2"

Дополнительно для части или всех статусов может быть задан
HTML-атрибут, с которым будет отображаться строка таблицы
текущих результатов участников турнира с данным статусом.
Для этого используется глобальная конфигурационная переменная
`contestant_status_row_attr'. Переменная может не использоваться
в конфигурационном файле, но если она используется,
дополнительные атрибуты должны быть заданы для всех статусов.
Дополнительные атрибуты задаются в том же порядке, что и
значения статусов, например:
contestant_status_row_attr = ' bgcolor="#ff00ff"'
contestant_status_row_attr = ""
contestant_status_row_attr = ' bgcolor="#00ff00"'
установит для статуса `Status 0' дополнительный атрибут строки
` bgcolor="#ff00ff"', для статуса `Status 2' - 
` bgcolor="#00ff00"',  а для `Status 1' - пустая строка, что
эквивалентно отсутствию атрибута. Обратите внимание на пробел в
начале значения атрибута. Он необходим для разделения тега <tr>
HTML-таблицы и дополнительного атрибута.

С помощью глобальной переменной `stand_show_contestant_status'
можно включить отображение столбца статуса участников. Для
каждого участника будет напечатан его статус, как задано в
переменной `contestant_status_legend'. С помощью глобальной
конфигурационной переменной `stand_contestant_status_attr' можно
задать дополнительные атрибуты этого столбца, например:
stand_show_contestant_status
stand_contestant_status_attr = ' width = "10%"'
Обратите внимание на пробел в начале значения атрибута. Он
необходим для разделения тега <td> и значения атрибута.

serve,master,judge,team
-----------------------
Добавлена возможность вынесения участникам турнира
предупреждений. Каждое вынесенное участнику предупреждение
отображается на его персональной странице в её начале. Участнику
доступен основной текст предупреждения и время отправки
предупреждения. 

Если пользователь имеет достаточно полномочий для просмотра
подробной информации об участнике (т. е. установлены биты
полномочий MASTER_LOGIN/JUDGE_LOGIN + LIST_CONTEST_USERS +
GET_USER, на странице подробной информации для участника турнира
отображаются предупреждения, вынесенные участнику, при этом
отображается: 1) время выдачи предупреждения, 2) имя
пользователя, который выдал предупреждение, 3) IP-адрес
компьютера, с которого было выдано предупреждение, 3) основной
текст предупреждения, 4) дополнительный текст предупреждения,
доступный только привилегированным пользователям.

Если пользователь к тому же имеет бит полномочий EDIT_REG, он
может выносить предупреждения. Для этого он должен задать
основной текст предупреждения, который будет доступен участнику,
и может задать дополнительный текст предупреждения, который
будет доступен только привилегированным пользователям. Затем
необходимо нажать кнопку "Issue Warning".

Если установлена глобальная конфигурационная переменая
`stand_show_warn_number' (см. ниже) файла `serve.cfg', в таблице
текущих результатов отображается общее количество
предупреждений, полученных каждым участником.

serve
-----
Добавлена новая глобальная конфигурационная переменная
`stand_show_warn_number'. Если эта переменная установлена, в
таблице текущих результатов печатается столбец с общим
количеством предупреждений для каждого участника. С помощью
глобальной конфигурационной переменной `stand_warn_number_attr'
можно задать HTML-атрибуты этого столбца, например:
stand_show_warn_number
stand_warn_number_attr = ' width = "5%"'
Обратите внимание на пробел в начале значения атрибута. Он
необходим для разделения тега <td> и значения атрибута.

serve
-----
Для хранения предупреждений и статуса участника турнира изменён
формат XML-файла дополнительной информации об участнике. Формат
совместим снизу вверх с форматом предыдущей версии программы
ejudge. В формат добавлены новые элементы <warnings>, <warning>,
<text>, <comment>, <status> и новые атрибуты "ussuer_id",
"issuer_ip", "date" для элемента <warning>.

serve
-----
При генерации таблицы текущих результатов невиртуальных турниров
посылки, время которых больше текущего времени, игнорируются.
Такая ситуация может возникать при проведении турнира в
нескольких точках, когда моменты начала турнира существенно
различаются.

serve
-----
Если в архивных каталогах отсутствует какой-либо файл (исходный
текст, протокол или пользовательский протокол), при попытке его
просмотра выдаётся ошибка, что файл не существует, вместо ошибки
"System call failed".

serve
-----
Добавлена конфигурационная переменная `personal_deadline' секции
описания задачи конфигурационного файла `serve.cfg'. Данная
переменная позволяет устанавливать крайний строк сдачи данной
задачи для указанного пользователя. Переменная может быть
использована несколько раз в описании задачи, и каждое
использование задаёт крайний срок для одного пользователя.
Формат конфигурационной переменной следующий:
LOGIN [DATE [TIME]]
здесь LOGIN - это регистрационное имя пользователя, для которого
устанавливается крайний срок сдачи задания, TIME -
необязательное время суток в формате HH:MM:SS, а DATE - дата в
формате YYYY/MM/DD. Если TIME отсутствует, принимается значение
времени, равное 00:00:00, а если TIME и DATE отсутствуют,
крайний срок устанавливается в 2038/01/19 00:00:00. Персональный
крайний срок имеет приоритет над крайним сроком для всех
пользователей, устанавливаемым с помощью конфигурационной
переменной `deadline' секции описания задачи.

serve,master,judge,team
-----------------------
В выпадающем меню выбора задачи при сдаче решения помимо
крайнего срока сдачи указывается календарный штраф, который
будет наложен на посылку.

master
------
При установке запланированного времени начала турнира возможно
как задание времени начала в краткой форме в формате HH:MM, так
и задание времени начала в полной форме в формате
"YYYY/MM/DD hh:mm:ss". Таким образом можно задавать время начала
турнира не в текущих сутках.

serve
-----
Добавлена опция командной строки `-f'. Если опция указана, перед
созданием управляющего сокета старый файл сокета удаляется.
Данная опция полезна при перезапуске системы после аварийного
завершения работы программы или операционной системы.

Добавлена опция командной строки `-i'. Если опция указана,
производятся все действия по инициализации турнира (создание
необходимых каталогов и файлов), а затем программа завершает
работу.

Исправлена ошибка, из-за которой программа `serve' могла
"подвисать" для всех пользователей, так как была заблокирована
из-за ожидания завершения передачи данных по медленному каналу.

При выполнении привилегированных команд не требуется указание
корректного идентификатора пользователя в структуре пакета
команды. Идентификатор пользователя берётся из структуры,
описывающей соединение, по которому пришёл управляющий пакет.

userlist-server
---------------
Добавлена опция командной строки `-f'. Если опция указана, перед
созданием управляющего сокета старый файл сокета удаляется.
Данная опция полезна при перезапуске системы после аварийного
завершения работы программы или операционной системы.

Исправлена ошибка, из-за которой программа `userlist-server'
могла "подвисать" для всех пользователей, так как была
заблокирована из-за ожидания завершения передачи данных по
медленному каналу.

Один и тот же cookie может использоваться для привилегированного
входа в различные турниры, если у пользователя достаточно на это
полномочий. В предыдущей версии ejudge каждый привилегированный
cookie жёстко привязывался к одному турниру.

Если запрашиваемый уровень привилегий при привилегированном
входе в турнир выше, чем максимально допустимый (т. е.,
например, запрашивается уровень привилегий ADMIN, хотя данный
пользователь имеет только уровень привилегий JUDGE), уровень
привилегий понижается. В предыдущей версии в этом случае
выдавалась ошибка "Permission denied".

При привилегированном входе идентификатор турнира может быть
равен 0, в этом случае предполагается, что пользователь входит в
программу serve-control. Тогда проверяемые полномочия
пользователя берутся из глобального конфигурационного файла
ejudge.xml.

При генерации случайных паролей пароли не генерируются для
невидимых, заблокированных, дисквалифицированных и
привилегированных пользователей.

run
---
Исправлена критическая ошибка, связанная с тем, что проверяющей
программе на вход передавался путь к файлу исходных данных теста
в текущем каталоге, то есть в рабочем каталоге тестируемой
программы. При некоторых условиях тестируемая программа могла
модифицировать свой входной файл. В текущей версии в качестве
пути к входному файлу теста передаётся путь к входному файлу в
архивном каталоге.

Версия 2.1.33 (20041029)
========================
Реализована поддержка языка Java компилятора и среды выполнения
JDK (тестировалось с Sun JDK 1.4.2 и Sun JDK 1.5.0, должно
работать с другими совместимыми реализациями JDK). Утилита
конфигурирования configure поддерживает новую опцию --with-javac
с помощью которой можно указать путь к компилятору javac в
составе JDK. Обратите внимание, что это должен быть полный путь
к программе, например, /usr/local/java/bin/javac. Если
--with-javac не указана, производится поиск по каталогам в
переменной окружения PATH.

Для компиляции Java-программ используется скрипт javac, а для
запуска - скрипт runjava, то есть требуется указание параметра
start_cmd = "runjava"
в секции описания тестера для Java-программ. Скрипт runjava
требует для своей работы установленной переменной
EJUDGE_PREFIX_DIR, если только не будет указан полный путь к
файлу политики безопасности. Таким образом, набор необходимых
конфигурационных параметров для тестировщика Java-программ
следующий:
kill_signal = TERM
arch = java
start_env = "EJUDGE_PREFIX_DIR"
start_cmd = runjava

Кроме этого в переменной окружения EJUDGE_JAVA_FLAGS могут
передаваться дополнительные параметры для java-машины, например,
устанавливающие максимальный размер кучи и стека:
start_env = "EJUDGE_JAVA_FLAGS=-Xmx64M -Xss8M"

По умолчанию Java-программы запускаются с установленной жесткой
политикой безопасности, которая позволяет только чтение со
стандартного потока ввода и вывод на стандартный поток вывода.
Поддерживается политика безопасности, при которой работающей
программе разрешено чтение и запись файлов в текущем каталоге.
Такая политика безопасности включается с помощью установки
перемнной окружения EJUDGE_JAVA_POLICY следующим образом.
start_env = "EJUDGE_JAVA_POLICY=fileio.policy"
В переменной окружения EJUDGE_JAVA_POLICY возможно задание
произвольной политики безопастности. Может быть указан либо
полный путь, либо имя файла политики. В последнем случае файл
политики должен находиться в каталоге
${EJUDGE_PREFIX_DIR}/share/ejudge.

Возможно полное отключение политики безопасности. Для этого
переменная окружения EJUDGE_JAVA_POLICY должна быть установлена
в значение none следующим образом:
start_env = "EJUDGE_JAVA_POLICY=none"

Программы на Java должны удовлетворять следующим условиям:
  1) они должны содержать единственный класс с именем Main;
  2) допускаются вложенные в Main классы;
  3) класс Main должен содержать метод main.

Исправлены ошибки работы с каледарным временем, когда из-за
неправильно инициализированной переменной (точнее, поля флага
летнего времени) время могло отличаться на 1 час от
астрономического времени.

В базу данных пользователей добавлено новое поле languages,
предназначенное для указания сред программирования, в которых
работает участник (команда). Поле languages может быть сделано
обязательным или необязательным для заполнения при регистрации
на турнире с помощью элемента
<field="languages" mandatory="yes">
или
<field="languages" mandatory="no">
файла конфигурации турнира contest.xml.

configure
---------
Добавлена опция командной строк --with-javac (см. выше).

edit-userlist
-------------
Поддерживается редактирование поля languages (см. выше).

ejudge-setup
------------
Поддерживаются компилятор языка Java и среда выполнения JDK
(см. выше).

serve
-----
В таблице текущего положения участников (как в режиме ACM, так и
в режиме KIROV/OLYMPIAD) внизу таблицы печатается статистика по
сдачам каждой задачи. Для каждой задачи указывается общее число
посылок по этой задаче, число успешных посылок и процент
успешных посылок.

Добавлена глобальная конфигурационная переменная
stand_show_ok_time файла serve.cfg и конфигурационная переменная
задачи stand_hide_time. Обе переменных действуют только в режиме
турнира KIROV. Если глобальная переменная stand_show_ok_time
установлена в ненулевое значение, в таблице текущих результатов
печатается время успешной сдачи задания (оно может быть как
относительным от начала турнира, так и астрономическим в
зависимости от значения глобальной конфигурационной переменной
show_astr_time). Переменная stand_hide_time отменяет печать
времени успешной сдачи для отдельной задачи.

В таблице текущих результатов корректно вычисляется календарный
штраф по задаче.

Добавлена конфигурационная переменная start_date секции описания
задачи файла serve.cfg. В этой переменной указывается
астрономическое время, начиная с которого данная задача
становится доступной для сдачи.

Спецификация календарного штрафа может иметь одну из следующих
форм:
DATE TIME PENALTY               напр.   2004/10/10 12:00 -10
или
DATE PENALTY                    напр.   2004/10/12 -20
или
PENALTY                         напр.   -30
в последнем случае дата предполагается достаточно большой
(2038/01/19 - то есть максимум, который позволяет точность типа
time_t).

Исправлена ошибка в работе с вариантными задачами.

Поддерживаются новые форматные преобразования. Форматные
преобразования, например, используются в глобальной
кофигурационной переменной stand_extra_format. Поддерживаются
следующие форматные преобразования:
%Mf       - короткое имя факультета участника
%MF       - короткое имя факультета участника на англ. языке
%Md       - полное имя факультета участника
%MD       - полное имя факультета участника на англ. языке
%Mp       - имя принтера, назначенного данному участнику

run
---
Добавлена специальная поддержка для спецификации переменной
окружения "EJUDGE_PREFIX_DIR", передаваемой в тестируемую
программу. В этом случае в переменные окружения добавляется
переменная EJUDGE_PREFIX_DIR со значением, равным префиксу
инсталляции системы ejudge (то есть значению опции --prefix
программы configure). Пример использования:
[tester]
start_env = "EJUDGE_PREFIX_DIR"

Расширенный генератор звуков (то есть по умолчанию генератор
речи festival) поддерживается и в режиме турнира KIROV. Для
включения генератора речи необходимо при конфигурировании
системы корректно указать путь к корню инсталляции системы
festival и задать следующие глобальные переменные:
sound_player = "${script_dir}/festival"
extended_sound

Исправлена ошибка при разборе файлов дополнительной информации о
тестах (.inf), связанная с неправильной обработкой символов
кавычек внутри строк.

master
------
Исправлена ошибка в обработке команды "Rejudge displayed". Эта
ошибка приводила к аварийному завершению программы master.

userlist-server,master
----------------------
При генерации случайных паролей в таблице новых паролей
печатается размещение команды (то есть значение поля location).

register
--------
Поддерживается поле `languages' (см. выше).

collect-emails
--------------
Новая утилита, которая извлекает из базы пользователей адреса
email всех пользователей, зарегистрированных на некоторое
множество турниров.

Версия 2.1.32 (20041001)
========================
Добавлена поддержка библиотеки reuse версии 4. Система ejudge
может быть скомпилирована как с библиотекой reuse версии 3,
так и с библиотекой reuse версии 4. Новая версия reuse
использует стандартные инструменты autoconf/automake/libtool.
Кроме того, в ней исправлены некоторые ошибки в модуле
интерфейса запуска процессов, которые приводили к необнаружению
ошибки типа "Time-limit exceeded" в некоторых случаях.

Реализован интерфейс к программам-генераторам речи. В качестве
генератора речи автоматически поддерживается программа
festival. В базу данных пользователей для каждого пользователя
добавлено поле `spelling', которое может быть изменено только
привилегированным пользователем (не самим пользователем).
Значение этого поля может отражать нюансы произношения имени
пользователя генератором речи.

Добавлена возможность направлять запрос на печать, посланный
пользователем, на поименованный принтер. Для этого в базу
данных пользователей для каждого пользователя добавлено поле
`printer_name', которое может быть изменено только
привилегированным пользователем. Данное поле указывает имя
очереди принтера и будет передано в качестве аргумента
опции `-P' команды `lpr'.

configure
---------
Поддерживается reuse-4. Если скрипт `reuse-config' находится в
каталоге, указанном в переменной PATH, все необходимые опции
компилятора для использования reuse будут определены
автоматически, и указание опции `--with-reuse' не обязательно.

Добавлена опция `--with-festival=FEST_PATH', с помощью которой
можно указать каталог, в котором проинсталлирован генератор речи
festival. FEST_PATH должен быть указан таким образом, чтобы
программа festival находилась в каталоге ${FEST_PATH}/bin.
В настоящий момент правильность указания FEST_PATH не
контролируется.

serve, compile, run
-------------------
В конфигурационном файле турнира serve.cfg допускаются директивы
условной компиляции, аналогичные директивам препроцессора Си.
Эти директивы позволяют включать или выключать фрагменты
конфигурационного файла в зависимости от окружения системы. В
данной версии поддержка условной компиляции реализована в
ограниченном объёме. В дальнейшем планируется реализовать полную
поддержку выражений.

Пока поддерживаются операции сравнения ==, !=, >=, <=, >, < для
строк и чисел, а также логические связки && и ||. В выражениях
могут участвовать целые числа, записываемые в только в
десятичном виде, строки, записываемые как в Си, и
предопределённые переменные. Для хранения целых чисел
используется 64-битный тип long long. Поддерживаются следующие
предопределённые переменные:

name    | type      | desc
host    | string    | Имя комьютера, на котором запущена данная
        |           | программа.
mode    | long long | Код стартующей программы: 0 - `serve',
        |           | 1 - `compile', 2 - `run'.
major   | long long | Старший номер версии системы.
minor   | long long | Средний номер версии системы.
patch   | long long | Младший номер версии системы.
build   | long long | Порядковый номер перекомпиляции.
managed | long long | 1, если программа запущена из-под
        |           | super-serve, и 0 в противном случае

Синтаксис директив условной компиляции аналогичен синтаксису
директив условной компиляции препроцессора языка Си. Директива
условной компиляции должна начинатся с символа `@' --- первого
непробельного символа в строке. Поддерживаются директивы `@if,'
`@elif', `@else', `@endif'.  Синтаксис каждой директивы приведён
ниже.
@if expression
@elif expression
@else
@endif

В конфигурационном файле турнира serve.cfg поддерживаются
суффиксы `M', `K' для числовых параметров. Суффикс `K' означает
умножение на 1024, а `M' --- на 1024*1024. Например,
max_vm_size = 8M

serve, compile
--------------
Незначительно изменён формат управляющего пакета запроса на
компиляцию. В конце пакета (после всех переменных окружения)
теперь должно стоять число 0.

serve, run
----------
Изменён формат управляющего пакета запроса на тестирование. В
новом формате корректно реализована поддержка строк, содержащих
произвольные символы, и неограниченной длины. Кроме этого,
программа `serve' передаёт программе `run' идентификатор
пользователя, имя пользователя (первое из установленных полей
`spelling', `name', `login'), имя задачи (первое из
установленных полей `spelling', `short_name' описания задачи),
которые могут быть затем переданы программе-генератору речи.

В раздел описания задачи файла serve.cfg добавлено поле
`spelling', которое позволяет задать особенности произношения
имени задачи генератором речи.

edit-userlist
-------------
Поддерживается редактирование нового поля `spelling' информации
пользователя.

Поддерживается редактирование нового поля `printer_name' информации
пользователя.

master
------
Улучшена диагностика, выдаваемая, когда пользователь с
административными привилегиями пытается войти в турнир, на
который он не зарегистрирован.

Улучшена диагностика, выдаваемая, когда пользователь пытается
войти в турнир, сервер которого не работает.

run
---
Реализован интерфейс с генератором речи. Если новая глобальная
конфигурационная переменная `extended_sound' файла serve.cfg
установлена, программе-генератору звука, указываемому в
глобальной конфигурационной переменной serve.cfg, передаются
дополнительные параметры: статус завершения, номер теста, имя
пользователя, имя задачи. Эта программа-генератор звука может
использовать эти данные для генерации соответствующего
сообщения. В этом случае глобальные конфигурационные переменные
accept_sound и т. д. не используются.

Для глобальной конфигурационной переменной `sound_player' при
инициализации выполняется подстановка переменных. Таким образом,
можно устанавливать значение этой переменной, например,
следующим образом:
sound_player = "${script_dir}/festival"

run
---
Убрано неявное ограничение на 254 теста для одной задачи. В
предыдущей версии это ограничение не проверялось, что приводило
к краху программы, если какая-либо из задач содержала большее
количество тестов. Теперь количество тестов не ограничено,
память под хранение информации о тестах автоматически
расширяется.

run
---
Ослаблены требования к именованию файлов тестов, правильных
ответов и т. д. В конфигурационном файле описания турнира
serve.cfg в глобальной секции или в секции описания задачи могут
использоваться переменные `test_pat', `corr_pat', `info_pat',
`tgz_pat'. Значение этой переменной должно представлять собой
форматную строку оператора printf, которая используется при
генерации имени файла теста. Дополнительно в функцию printf
будет передаваться целое число - номер теста. Если используется
переменная X_pat, то соответствующая переменная X_sfx не
используется.

Например, имена тестов по умолчанию при значении переменной
test_sfx=".dat" моделируются с помощью переменной test_pat
следующим образом:
test_pat = "%03d.dat"

serve
-----
В режиме турнира ACM поддерживаются три режима округления
времени, прошедшего от начала турнира, до минут при подсчёте
штрафа за сданную задачу. Режим выбирается установкой глобальной
конфигурационной переменной `rounding_mode' файла конфигурации
турнира serve.cfg. Конфигурационная переменная может принимать
следующие значения:
  o ceil (по умолчанию) - берётся минимальное целое количество
    минут, не меньшее времени от начала турнира до момента сдачи
    задания.
  o floor - берётся максимальное целое количество минут, не
    превосходящее время от начала турнира до момента сдачи
    задания. 
  o round - количество минут получается округлением секунд до
    минут (то есть если прошло >= 30 секунд, берётся число минут
    на 1 большее).

team
----
Улучшена диагностика, выдаваемая, когда пользователь пытается
войти в турнир, сервер которого не работает.

userlist-server
---------------
Реализован режим демона. Режим демона включается указанием в
командной строке ключа -D. В режиме демона программа переходит в
фоновый режим и отключает вывод на стандартный поток вывода,
направляя диагностический вывод в файл журнала. Путь к файлу
журнала задаётся с помощью нового элемента <userlist_log>
конфигурационного файла ejudge.xml. Если данный элемент в
конфигурационном файле не установлен, userlist-server в режиме
демона запускаться отказывается. В режиме демона вывод в файл
журнала не содержит некоторых справочных сообщений, доступных в
основном режиме работы программы.

Формат выдачи сообщений в файл журнала достаточно сильно изменён,
чтобы сделать его более кратким и более рациональным, а также
упростить разбор журнала программами-анализаторами журналов.

master,serve
------------
Привилегированный пользователь может сразу добавлять в базу
посылок посылку с нужными параметрами, а не выполнять сначала
команду submit_run, а затем edit_run. Для этого у пользователя в
контесте должны быть установлены полномочия SUBMIT_RUN и
EDIT_RUN. Форма заполнения информации о новой посылке доступна
по ссылке "Add new run", расположенной под диалогом об отправке
решения на проверку на главной странице программы master.

Новые записи, добавленные таким образом в базу посылок, не
отправляются автоматически на тестирование.

serve
-----
Скрытые посылки (hidden runs) могут редактироваться и пересуживаться
до начала турнира.

users,register,master,judge,team
--------------------------------
Реализована поддержка IPv6 адреса ::1 (localhost). Он трансформируется
в адрес 127.0.0.1.

run
---
Исправлена ошибка, заключавшаяся в ненаследовании имени стандартной
проверяющей программы (standard_checker) из описания задачи в
описание тестера для задачи.

edit-userlist
-------------
Устранена утечка памяти при просмотре списка всех пользователей,
внесённых в базу.

Устранена утечка при разборе XML-файлов. Утечка памяти происходила
при разборе любого XML-файла, что затрагивало все программы системы
ejudge.

serve
-----
Добавлена возможность запуска произвольной программы в момент начала
турнира. Эта программа, например, может изменять права доступа
к условиям задач на web-сервере. Для этого в конфигурационном файле
serve.cfg поддерживается новая конфигурационная переменная
contest_start_cmd, которая может быть установлена в имя программы.
Если указывается полный путь к программе (то есть строка, начинающаяся
с '/'), то программа будет запущена из этого пути. Если указывается
относительный путь, полный путь вычисляется относительно глобальной
конфигурационной переменной conf_dir.

Если в глобальных конфигурационных переменных stand_header_file,
stand_footer_file, stand2_header_file, stand2_footer_file,
plog_header_file, plog_footer_file указан относительный путь,
полный путь вычисляется относительно глобальной конфигурационной
переменной conf_dir.

contest.xml
-----------
Если элемент <root_dir> установлен, он должен быть абсолютным
путём к каталогу.

В конфигурационный файл турнира contest.xml добавлен новый элемент
<conf_dir>. Этот элемент содержит путь к каталогу конфигурационных
файлов турнира. Если элемент <root_dir> установлен, то значение
по умолчанию элемента <conf_dir> установливается в <root_dir>/conf.

Если в элементах <register_header_file>, <register_footer_file>,
<users_header_file>, <users_footer_file>, <team_header_file>,
<team_footer_file> указаны относительные пути, полный путь
вычисляется относительно значения элемента <conf_dir>

ejudge.xml
----------
Добавлен новый элемент <var_dir>. В этом элементе хранится путь
к каталогу файлов журналов программ userlist-server, super-serve,
compile. Он используется как путь, относительно которого
вычисляется полный путь, если значения элементов <userlist_log>,
<super_serve_log> и <compile_log> не являются абсолютными путями.

Добавлены новые элементы <super_serve_log>, <compile_log> для
задания пути к файлам журналов утилит super-serve и compile.
Однако, режим демона в этих утилитах пока не реализован.

ejudge-setup
------------
Поддерживается настройка элемента <var_dir> конфигурационного
файла ejudge.xml.

Версия 2.1.31 (20040620)
========================
Существенно улучшена работа с кодировками символов. Из исходного
кода убраны все явные упоминания о кодировке "KOI8-R" и заменены
на кодировку, заданную пользователем в опции --enable-charset
скрипта configure. Если данная опция не была указана,
используется кодировка "UTF-8".

Теперь при разборе XML-файлов выполняется преобразование из
кодировки, указанной в заголовке XML-файла, во внутреннюю
кодировку, задаваемую конфигурационной опцией --enable-charset.
Для этого используется функция `iconv' стандартной библиотеки,
поэтому поддерживаюся почти все существующие кодировки.
Внутренняя кодировка должна быть совместима со строковыми
функциями стандартной библиотеки языка Си, т. е. не должна в
середине строк содержать нулевой байт. Например, UTF-16 не
является такой кодировкой, а UTF-8 --- является.

При генерации HTML-файлов в их заголовок проставляется
кодировка, указанная в конфигурационных файлах (по умолчанию ---
это внутренняя кодировка), однако перекодирование строк из
внутренней кодировки в кодировку HTML-файлов пока не
поддерживается, поэтому в текущей версии системы кодировка
генерируемых HTML-файлов и внутренняя кодировка должны
совпадать. Следовательно, явное задание кодировки генерируемых
HTML-файлов в конфигурационных файлах не рекомендуется.

serve
-----
Удалена конфигурационная переменная `standings_charset'.
Реализация её поддержки в предыдущих версиях была некорректной и
небезопасной. Возможно, когда будет реализована поддержка
перекодировки строк из внутренней кодировки в кодировку HTML
документов данная конфигурационная переменная будет
восстановлена.

ejudge-setup
------------
Исправлено несколько ошибок в функции генерации настроечного
скрипта.

Версия 2.1.30 (20040619)
========================
Полностью переработана процедура компиляции и инсталляции
системы в сторону большего соответствия стандартам GNU. Процесс
инсталляции системы и настройки тестового турнира подробно
описан в файле INSTALL.RUS. Для настройки под текущую систему
теперь используется скрипт configure, генерируемый с помощью
утилиты autoconf. Утилита configure принимает большое количество
опций, которые подробно описаны в файле INSTALL.RUS.

configure
---------
При конфигурировании системы с помощью configure можно указать
значения по умолчанию для важнейших конфигурационных параметров
системы ejudge, например, для пути к каталогу файлов
конфигурации турниров или для пути к сокету связи с сервером
базы пользователей и т. д. Теперь если соответствующая
переменная в конфигурационном файле не установлена, программы
системы ejudge будут использовать "встроенное" (т. е. указанное
при конфигурировании системы) значение. В случае CGI-программ
`master', `judge', `team', `register', `users' это позволяет
вообще обходиться без конфигурационных файлов, если значения
всех переменных заданы при конфигурировании системы. Если
используется путь к конфигурационному файлу, заданный при
конфигурировании системы, можно не указывать его как параметр
запуска программ edit-userlist, userlist-server и т. д.
Таким образом, процесс конфигурирования системы ejudge перенесён
отчасти и на процесс компиляции системы из исходников.

Использование скрипта configure позволяет автоматически
адаптироваться к некоторым вариантам системы Linux. Так, если в
системе не установлен патч на ядро для понижения привилегий
процессов, не будут компилироваться соответствующие утилиты.
Если не установлены утилиты локализации, локализация будет
отключена. Для более подробного описания см. INSTALL.RUS.
По прежнему поддерживается только Linux, попыток переноса
системы на другие платформы пока не принималось.

Скрипт configure определяет присутствие в системе некоторых
систем программирования на языках C, C++, Java, Pascal и др. В
случае их обнаружения автоматически настраиваются скрипты
компиляции. Если системы программирования располагаются не в
стандартных каталогах, их местоположение можно указать явно с
помощью ключей configure.

ejudge-setup
------------
Появилась новая утилита ejudge-setup, предназначенная для
начальной настройки системы ejudge после её компиляции. Утилита
предоставляет интерфейс меню и работает в консольном режиме. С
помощью неё можно уточнить настройки системы ejudge. Задача этой
утилиты --- сгенерировать настроечный скрипт, который, будучи
выполненым, создаст все необходимые каталоги и скопирует в них
необходимые файлы. Утилита начальной настройки может запускаться
из-под обычного непривилегированного пользователя, в то время
как для выполнения настроечного скрипта необходимы, как правило,
привилегии суперпользователя root.

Сгенерированная утилита начальной настройки создаёт все
необходимые конфигурационные файлы, создаёт базу пользователя с
единственным пользователем (параметры которого определяются с
помощью ejudge-setup), обладающим всеми полномочиями системы
ejudge, создаёт конфигурационные файлы для сервера компиляции с
поддержкой всех обнаруженных при конфигурировании системы систем
программирования, создаёт конфигурационные файлы для тестового
турнира и копирует тесты в каталог тестового турнира. Кроме
этого автоматически создаётся рабочий диск для тестирования
программ, а также в каталог CGI-программ веб-сервера
устанавливаются символические ссылки на CGI-программы системы
ejudge.

Скомпилированные программы и файлы, необходимые для их работы,
по команде `make install' инсталлируются в каталог, указанный с
помощью опции --prefix=PREFIX скрипта configure. Если эта опция
не указана, используется путь по умолчанию, равный
HOME/inst-ejudge, где HOME --- домашний каталог пользователя,
запустившего configure. В каталоге PREFIX при инсталляции
создаются следующие каталоги:
        bin/            исполняемые файлы
        cgi-bin/        исполняемые файлы CGI программ
        include/        заголовочные файлы библиотеки libchecker
        lib/            объектные модули библиотеки libchecker
        libexec/ejudge  различные вспомогательные скрипты и программы
        share/ejudge    исходный код библиотеки testlib (pascal)
        share/locale    каталог сообщений
То есть, за исключением каталога cgi-bin структура каталогов
соответствует стандартам GNU.

ejudge-config
-------------
Данный скрипт предназначается для получения информации о
параметрах системы ejudge (точнее, библиотеки libchecker),
необходимой для компиляции проверяющих программ. Скрипт
поддерживает следующие опции:
        --cflags
                возвращает флаги, необходимые для компилятора
                языка Си (например, путь к каталогам
                заголовочных файлов)
        --ldflags
                возвращает флаги, необходимые для компоновщика
        --libs
                возвращает необходимые библиотеки

Таким образом, для компиляции проверяющей программы можно
использовать следующую командную строку:
gcc `ejudge-config --clags --ldflags` prog.c -o prog `ejudge-config --libs`
Здесь предполагается, что скрипт ejudge-config находится в
каталоге, указанном в переменной PATH.

ejudge.xml
----------
Для хранения новых конфигурационных переменных расширен набор
тегов в файле ejudge.xml. Поддерживаются следующие новые теги:
charset, config_dir, contests_home_dir, full_cgi_data_dir,
compile_home_dir, testing_work_dir, script_dir,
serialization_key. Предполагается, что в дальнейшем эти элементы
будут использоваться в утилите редактирования конфигурационных
настроек системы. Кроме того, введён новый атрибут ejudge_user,
являющийся синонимом атрибута local_user. Новое имя атрибута
лучше отражает его семантику.

run
---
Система ejudge теперь поддерживает набор "стандартных
проверяющих программ". К стандартным проверяющим программам, в
частности, относятся программа, сравнивающая два файла
текстуально, или программа, сравнивающая два целых числа в
файлах. Набор стандартных проверяющих программ компилируется
вместе с компиляцией всей системы и инсталлируется в каталог
скриптов (PREFIX/libexec/ejudge). Чтобы использовать стандартную
проверяющую программу нужно в секции описания задачи установить
конфигурационную переменную `standard_checker' в имя стандартной
проверяющей программы. Например,
standard_checker = cmp_int
Набор стандартных проверяющих программ позволяет во многих
случаях избежать написания новых проверяющих программ для
задач. Для полного описания стандартных проверяющих программ
обратитесь к документации.

Местоположение стандартных проверяющих программ можно задать
явно с помощью глобальной конфигурационной переменной
`ejudge_checkers_dir'. По умолчанию её значение равно
PREFIX/libexec/ejudge. Изменить значение по умолчанию можно либо
при конфигурировании системы с помощью configure, либо при
последующей начальной настройке с помощью ejudge-setup.

libchecker
----------
Существенно доработана библиотека для написания проверяющих
программ libchecker. Добавлены новые функции
normalize_spaces_in_file, read_corr_unsigned_int,
read_corr_unsigned_long_long, read_in_long_long, read_int,
read_in_unsigned_int, read_in_unsigned_long_long,
read_team_unsigned_int, read_team_unsigned_long_long,
read_unsigned_int, read_unsigned_long_long. Заголовочные файлы
библиотеки могут использоваться из программы на C++.

serve, compile
--------------
Поддерживается возможность передачи серверу компиляции compile
произвольного количества переменных окружения в запросе на
компиляцию. Переданные переменные окружения будут затем переданы
далее в запускаемый скрипт компиляции. Чтобы установить
переменные окружения, необходимо в конфигурационном файле
турнира serve.cfg в секции описания языка программирования
использовать конфигурационную переменную `compiler_env'. Каждое
использование этой переменной устанавливает одну переменную
окружения, но конфигурационная переменная `compiler_env' может
повторяться в секции описания языка программирования несколько
раз.

run
---
Поддерживается возможность передачи произвольных переменных
окружения в проверяющую программу. Для задания переменных
окружения используется конфигурационная переменная
`checker_env', которая может появляться как в секции описания
задачи, так и в секции описания тестировщика. Поддерживается
наследоваение значений этой переменной от абстрактной задачи или
абстрактного тестировщика. Переменные окружения, полученные из
всех источников (секция описания задачи, секция описания
тестировщика и т. д.) объединяются и передаются проверяющей
программе. Каждое использование конфигурационной переменной
`checker_env' позволяет установить одну переменную окружения, но
конфигурационная переменная `checker_env' может быть
использована несколько раз.

serve, compile, run
-------------------
Поддерживаются подстановки значений одних конфигурационных
переменных в значения других конфигурационных переменных. Такие
подстановки похожи на подстановки значений переменных в
программах на языке shell и тому подобных. Например, чтобы в
определении конфигурационной переменной `start_env' использовать
глобальную конфигурационную переменную `script_dir', определение
конфигурационной переменной `start_env' может выглядеть
следующим образом:
start_env = "LD_PRELOAD=${script_dir}/libdropcaps.so"

Подстановки такого рода пока обрабатываются только для
переменных `compiler_env', `checker_env' и `start_env'. Кроме
того, в подстановках пока можно использовать только глобальные
конфигурационные переменные. Механизм подстановок в чём-то
дублирует механизм форматных преобразований, и, возможно, в
следующих версиях появится некоторый объединённый механизм
подстановок и форматных преобразований.

serve
-----
При старте сервер турнира может создать в каталогах
html-документов веб-сервера символические ссылки на html файлы с
таблицами текущего положения участников. В предыдущих версиях
символические ссылки необходимо было создавать вручную.

Чтобы автоматическое создание символических ссылок работало,
необходимо, чтобы в файле конфигурации турнира serve.cfg была
установлена глобальная конфигурационная переменная
`htdocs_dir'. В ней должен быть указан путь к корневому каталогу
html-документов веб-сервера (на многих Linux-системах это
/home/httpd/html). Если переменная `htdocs_dir' не определена,
используется значение по умолчанию, которое можно установить при
конфигурировании системы с помощью configure. Все пути к
символическим ссылкам указываются относительно этой
конфигурационной переменной.

Для указания пути, по которому должны быть созданы символические
ссылки, используются глобальные конфигурационные переменные
`stand_symlink_dir', `stand2_symlink_dir', `plog_symlink_dir'
для основного файла таблицы результатов, дополнительного файла
таблицы результатов и файла журнала посылкок. Все пути
указываются относительно корневого каталога html документов,
задаваемого в конфигурационной переменной `htdocs_dir'. Имена
файлов в этих каталогах будут совпадать с именами файлов,
задаваемыми в конфигурационных переменных `standings_file_name',
`stand2_file_name', `plog_file_name'. Например, если переменная
`standings_file_name' установлена в значение "standings.shtml",
переменная `htdocs_dir' --- в значение /home/httpd/html, а
переменная `stand_symlink_dir' --- в значение /contests/1, то
при старте программы `serve' в каталоге
/home/httpd/html/contests/1 будет создана символическая ссылка
на файл с таблицей текущих результатов, которая будет иметь имя
standings.shtml. Если в настройках веб-сервера нет особенностей
(типа виртуальных хостов), то таблица результатов будет доступна
по URL http://HOST/contests/1/standings.shtml. Естественно,
чтобы `serve' мог создать символическую ссылку, необходимо,
чтобы у пользователя, под которым работает `serve' было
достаточно полномочий для записи в соответствующий каталог.

Версия 2.1.29 (20040420)
========================
Все параметры периода компиляции, которые не могут быть изменены
с помощью конфигурационных файлов, вынесены в отдельный
заголовочный файл settings.h. Файл содержит определения
следующих констант:
MAX_CGI_VALUE_LEN
  Максимальный размер данных, принимаемый в одной
  CGI-переменной CGI-программами от браузеров клиентов. Таким
  образом, эта константа определяет   максимальный размер файла,
  который может быть принят CGI-программами. В особенности это
  затрагивает:
    o максимальный размер посылки пользователя или
      привилегированного пользователя;
    o максимальный размер сообщения;
    o максимальный размер загружаемого на сервер протокола
      тестирования;
    o максимальный размер сливаемых журналов посылок.
  Обратите внимание, что некоторые глобальные конфигурационные
  переменные, например, max_run_size, накладывают дополнительные
  ограничения на размер принимаемых данных.
  Размер этой константы по умолчанию - 1 мегабайт.
MAX_SERVE_PACKET_LEN
  Максимальный размер пакета данных, принимаемого программой
  `serve' от CGI-программ. Если пакет данных превышает
  максимальный размер, диагностируется ошибка протокола. Эта
  константа накладывает ограничения на все данные, пересылаемые
  от CGI-программ `master', `judge', `team'. Затрагиваемые
  аспекты перечислены выше. 
  Обратите внимание, что некоторые глобальные конфигурационные
  переменные, например, max_run_size, накладывают дополнительные
  ограничения на размер принимаемых данных.
  Размер этой константы по умолчанию - 1 мегабайт.
MAX_USERLIST_PACKET_LEN
  Максимальный размер пакета данных, принимаемого программой
  `userlist-serve' от своих клиентов. Данная константа имеет
  меньшее значение, чем две предыдущих, так как клиенты
  программы `userlist-serve' никогда не пересылают ей
  значительных объёмов данных.
SERVE_PACKET_NAME_SIZE
  Размер буфера, необходимого для хранения имени файла,
  содержащего команду, передаваемую от программы `serve'
  программам `compile' и `run'. Текущее значение этой константы
  равно 13. Таким образом, длина имени файла пакета равно 12, из
  которых первый символ отводится под приоритет пакета, а
  оставшиеся 11 задают уникальное имя пакета, формируемое из
  текущего времени, идентификатора процесса команды `serve',
  номера посылки и т. д.
MAX_LANGUAGE
  Максимальное количество одновременно поддерживаемых в одном
  турнире языков программирования. Каждому языку
  программирования соответствует его идентификатор в диапазоне
  от 1 до MAX_LANGUAGE. Если в конфигурационном файле описания
  турнира `serve.cfg' задано более чем MAX_LANGUAGE описаний
  языков программирования (т. е. секций [language]), сервер
  турнира не может быть запущен.
  Текущее значение этой константы - 31.
MAX_PROBLEM
  Максимальное количество поддерживаемых в одном турнире
  неабстрактных задач. Каждая неабстрактная задача получает свой
  уникальный идентификатор задачи в диапазоне от 1 до
  MAX_PROBLEM. Абстрактные задачи не имеют идентификатора,
  поэтому данное ограничение на них не распространяется. Если в
  конфигурационном файле описания турнира `serve.cfg' задано
  более чем MAX_PROBLEM описаний неабстрактных задач, сервер
  турнира не может быть запущен.
  Текущее значение этой константы - 100.
MAX_TESTER
  Максимальное количество поддерживаемых в одном турнире
  неабстрактных тестировщиков. Каждый неабстрактный тестировщик
  получает свой уникальный идентификатор в диапазоне от 1 до
  MAX_TESTER. Абстрактные тестировщики не имеют идентификатора.
  Тестировщик по умолчанию (т. е. для которого конфигурационная
  переменная any установлена в true) получает единственный
  идентификатор тестировщика вне зависимости от того, ко скольки
  задачам он применяется. Если в конфигурационном файле описания
  турнира `serve.cfg' задано более чем MAX_TESTER описаний
  неабстрактных тестировщиков, сервер турнира не может быть
  запущен.
  Текущее значение этой константы - 100.

В конфигурационный файл описания турнира contest.xml добавлен
новый атрибут closed элемента <contest>. Атрибут может принимать
значения "yes" и "no". Его значение по умолчанию - "no". Если
этот атрибут равен "yes", данный турнир считается "закрытым"
(оконченным), то есть регистрация на него с помощью
CGI-программы `register' невозможна, и запуск CGI-программы
`team' для данного турнира также невозможен (будет выведено
сообщение о том, что данный турнир закрыт). Данный атрибут
турнира может устанавливаться, когда желательно предотвратить
случайные бессмысленные попытки регистрации на турнир и участия
в нём.

В конфигурационный файл описания турнира serve.cfg добавлены
конфигурационные переменные `priority_adjustment',
`user_priority_adjustment' для установки приоритета проверки
решений. Приоритет проверки решений изменяется от -16 (самый
высокий приоритет) до 15 (самый низкий приоритет) и может
устанавливаться глобально для турнира, в зависимости от
участника турнира, в зависимости от языка программирования,
задачи или тестировщика. Приоритет по умолчанию - 0,
конфигурационные переменные описывают изменение приоритета,
например, priority_adjustment равный -2 в секции описания задачи
указывает, что проверка решений по данной задаче получает -2 к
текущему значению приоритета. Полное значение приоритета
получается сложением глобального приоритета, приоритета задачи,
приоритета языка программирования и приоритета тестировщика.

Программа `run' выбирает запросы на тестирование из каталога
запросов в зависимости от приоритета запроса. Более приоритетный
запрос обрабатывается первым. Если во время тестирования
некоторой посылки поступает более приоритетная посылка,
тестирование текущей посылки доводится до конца. Обратите
внимание, что приоритет тестирования не имеет отношения к
приоритету процесса (т. н. nice), с которым работает программа
тестирования.

В конфигурационный файл serve.cfg добавлена конфигурационная
переменная `disable_language' секции описания задачи. Данная
конфигурационная переменная позволяет указать языки
программирования, которые не могут использоваться для посылок по
данной задаче. Каждый раз указывается только одно короткое имя
языка программирования, но переменная `disable_language' может
быть использована несколько раз в описании одной задачи.
Например,
disable_language = "gcc"
disable_language = "g++"
Запрещает для некоторой задачи использование языков с коротким
именем gcc и g++.

register
--------
Поддерживается атрибут closed файла описания турнира
contest.xml. Если атрибут установлен, данный турнир не
отображается в списке турниров, на которые возможна регистрация,
либо для такого турнира не отображается ссылка на страницу сдачи
решений.

serve
-----
Параметры настройки фильтра посылок привилегированных программ
`master' и `judge' теперь сохраняются не только для данного
пользователя, но для пользователя и идентификатора сессии. Таким
образом для каждого окна браузера, в котором отображаются
страницы программ `master' или `judge' установки фильтра посылок
отслеживаются независимо, даже если все они работают под одним
идентификатором пользователя.

serve,run
---------
Поддерживается система приоритетов тестирования, описанная выше.

team
----
Не поддерживаются конфигурационные переменные `max_run_size' и
`max_clar_size'. Проверка соответствующих ограничений полностью
переложена на сервер турнира `serve', где она уже была
реализована.

Поддерживается атрибут closed файла конфигурации турнира
contest.xml. Если атрибут установлен в "yes", сразу же после
запуска программы генерируется страница с сообщением о том, что
турнир закрыт.

userlist-server
---------------
Поддерживается атрибут closed файла конфигурации турнира
contest.xml.

master,serve
------------
Добавлена возможность перетестирования всех посылок, которые
удовлетворяют текущему выражению фильтра. Для этого нужно нажать
на кнопку "Rejudge displayed runs". После нажатия на кнопку
будет отображена страница подтверждения операции, на которой
будут перечислены все пересуживаемые посылки.

serve
-----
Поддерживается конфигурационная переменная `disable_language'
секции описания задачи.

Версия 2.1.28 (20040402)
========================
Добавлена новая глобальная конфигурационная переменная
`enable_report_upload'. Добавлена новая конфигурационная
переменная описания задачи `date_penalty'.

clean-users
-----------
Добавлена поддержка автоматического удаления неактивных
регистрационных имён из базы пользователей. Регистрационное имя
считается неактивным, если под данным регистрационным именем не
была сделана ни одна попытка сдачи задач и не был задан ни один
вопрос. Регистрационное имя никогда не считается неактивным,
если оно привилегированное (т. е. указано в элементе <cap>
конфигурационного файла ejudge.xml), или если для него
установлен флаг never_clean.

Для активации режима удаления записей из базы пользователей
необходимо в командной строке программы clean-users указать
опцию -r. При обнаружении неактивного регистрационного имени на
стандартный поток вывода будет напечатан запрос о подтверждении
операции удаления, на который нужно ответить либо 'y', либо
'n'. Если дополнительно к опции -r указана опция -f, запрос о
подтверждении не выводится, и все неактивные регистрационные
имена удаляются автоматически.

serve,master,judge
------------------
Привилегированные пользователи могут просматривать как судейский
протокол тестирования, так и протокол тестирования,
предназначенный для участников. На странице просмотра исходного
текста посылки и протокола тестирования добавлена ссылка
"View team report", при нажатии на которую отображается
пользовательский протокол тестирования. Естественно, что для
того, чтобы пользовательский протокол тестирования генерировался
и отображался глобальная конфигурационная переменная
`team_enable_rep_view' должна быть установлена в true. Чтобы
пользователь мог просматривать протокол тестирования, для него в
соответствующем турнире должен быть установлен бит полномочий
VIEW_REPORT.

serve,master,judge
------------------
Привилегированный пользователь может загружать на сервер протокол
тестирования (как пользовательский, так и судейский). После
этого новый загруженный протокол тестирования будет отображаться
по команде "View report". Чтобы пользователь мог загрузить
протокол тестирования на сервер, глобальная конфигурационная
переменная `enable_report_upload' должна быть установлена в
true, а для пользователя в соответствующем турнире должен быть
установлен бит полномочий EDIT_RUN. Если в турнире включена
поддержка протоколов тестирования участников
(`team_enable_rep_view') при загрузке протокола на сервер можно
выбрать, заместит ли загружаемый протокол протокол участника,
судьи или сразу оба.

serve
-----
Добавлена возможность назначения штрафа за задачу в зависимости
от времени сдачи задачи. Например, если попытка по задаче
послана до 5 апреля 2004 г., она не получает штрафных очков,
если она послана 5-11 апреля, она получает одно штрафное очко, а
если 12 апреля и позднее - 2 штрафных очка. Для этого
используется конфигурационная переменная `date_penalty' секции
определения задачи. Чтобы реализовать указанную выше политику
штрафования, секция описания задачи должна содержать следующий
фрагмент:
date_penalty = "2004/04/05 0"
date_penalty = "2004/04/12 -1"
date_penalty = "2005/01/01 -2"
Каждое определение переменной `date_penalty' в рамках одной
секции описания задачи добавляет новую спецификацию штрафования
к уже существующим. Значение переменной `date_penalty' не
наследуется от абстрактных задач. Спецификации `date_penalty'
одной задачи не зависят от `date_penalty' других задач.
Спецификации упорядочены и проверяются в порядке их задания в
конфигурационном файле. Каждая спецификация штрафа имеет вид
DATE ADD-VALUE
где DATE - календарная дата, задаваемая в стандартном для ejudge
формате YYYY/MM/DD [hh[:mm[:ss]]], ADD-VALUE - значение,
прибавляемое к количеству баллов, полученному в результате
тестирования. Получившееся значение не может быть меньше 0 (в
этом случае оно устанавливается в 0) и больше максимального
значения баллов за данную задачу (в этом случае оно
устанавливается в максимальное количество баллов). Штрафование в
зависимости от времени работает только в режиме турнира KIROV.

userlist-server
---------------
Поддерживаются произвольные идентификаторы пользователя и группы
(в том числе отрицательные).

Версия 2.1.27 (20040327)
========================
Добавлены несколько новых возможностей администраторского
режима (приостановка/возобновление печати, загрузка исходного
текста посылки в бинарном виде, сравнение посылок). Добавлена
поддержка бинарных файлов. Добавлено отображение времени
последней успешной сдачи в таблицу текущего положения участников
турнира. Добавлены несколько новых конфигурационных переменных.

Изменён формат XML-представления журнала посылок. В элемент
<run> добавлен атрибут nsec, который содержит наносекундную
составляющую времени посылки. Как следствие, атрибут time теперь
содержит время в секундах вместо времени в миллисекундах, как
в предыдущей версии.

master,judge,team,register,users
--------------------------------
Максимальный размер данных, которые принимаются от веб-клиента
увеличен до 1 МБайта.

master,judge,team,serve
-----------------------
При отправке решений на проверку допускаются бинарные файлы, то
есть файлы, содержащие нулевой байт. Такие файлы без изменений
передаются на сервер.

Если для языка программирования, выбранного для данной посылки,
установлена в true конфигурационная переменная `binary',
поступивший файл будет записан в архив без изменений (т. е. со
всеми нулевыми байтами). В противном случае файл будет обрезан
по первому нулевому байту и будет диагностирована ошибка посылки
решения. По умолчанию установлен режим текстовых посылок.

master,judge,team,serve
-----------------------
Обновлён формат файла состояния сервера турнира. Его размер
установлен равным 128 байт, при этом в настоящее время 77 байт
не используются. Это позволит безболезненно добавлять новые поля
состояния сервера, аналогично тому, как добавлялись поля в базу
посылок. Новая версия формата файла состояния получила номер 2 и
новое значение магической константы в заголовке. Для обратной
совместимости утилиты master,judge,team поддерживают чтение
файла состояния сервера версии 1.

master,serve
------------
Администратор турнира может приостановить обслуживание запросов
на печать. Для этого он должен иметь установленным бит
полномочий CONTROL_CONTEST. Для приостановки печати используется
кнопка ``Suspend printing'', появляющаяся на главной странице
интерфейса администратора, если в данном турнире печать
разрешена. Снова разрешить печать посылок можно с помощью
кнопки ``Resume printing'', появляющейся вместо предыдущей
кнопки в режиме приостановки печати. В режиме приостановки
печати участники турнира не смогут послать запрос на печать,
однако привилегированные пользователи могут печатать как
обычно.

serve
-----
При запуске сервер считывает своё предыдущее состояние,
восстанавливая таким образом значения флагов приостановки
обслуживания клиентов, приостановки проверки решений,
окончательной проверки решения (для турнира по системе
OLYMPIADS) и приостановки печати решений.

serve
-----
В базу посылок добавлена наносекундная составляющая времени
посылки. Теперь все посылки, принятые одним сервером, будут
иметь уникальное время приёма. Это позволяет наконец решить
проблему упорядочивания нескольких посылок, пришедших в одну
секунду. Стабильность слияния посылок от нескольких серверов
распределённого турнира требует, чтобы при одинаковом времени
приёма посылки были как-то упорядочены по вторичному критерию,
но любой вторичный критерий может привести к необходимости
переупорядочивать посылки во время работы сервера турнира.
Переупорядочивание посылок, которые были отправлены на
компиляцию или проверку приведёт либо к потере результатов, либо
к подмене результатов. Решением этой проблемы является
требование уникальности времени приёма для всех посылок,
обрабатываемых одним сервером, что достигается добавлением
наносекундной компоненты. С большой вероятностью каждая посылка
будет иметь уникальное время получения даже и в распределённом
турнире, но полагаться на это нельзя.

Формат базы посылок новой версии совместим снизу вверх с
форматом базы посылок предыдущей версии (значение наносекундной
составляющей времени полагается равным нулю).

userlist-server
---------------
В базу пользователей добавлено поле `location', которое
предназначено для использования администратором очного турнира
для указания местоположения команды в классе. Значение этого
поля выводится на заглавную страницу распечатки листинга
программы.

edit-userlist
-------------
Поддерживается редактирование поля `location'.

serve
-----
В таблице текущего положения команд печатается информация о
последней успешной сдаче (Last success).

serve,master,judge
------------------
Из страницы просмотра исходного текста посылки возможна загрузка
исходного текста. Для этого необходимо нажать на ссылку
"Download run". Страница просмотра исходного текста уже содержит
сам исходный текст, но возможность загрузки исходного текста
необходима по следующим причинам:
  1. Исходный текст можно сразу сохранить в файл, а не
     копировать его через буфер обмена, избегая таким образом
     искажения данных, возможных при копировании через буфер
     обмена.
  2. Для посылок, в секции описания которых установлен флаг
     `binary', исходный текст посылки не отображается, так как
     может содержать непечатные символы, и во многих случаях
     (например, в случае посылки архива исходных текстов) его
     отображение вообще бессмысленно.

serve,master,judge
------------------
Из страницы просмотра исходного текста возможно сравнение
исходного текста данной посылки с исходным текстом другой
посылки. Для этого нужно ввести номер посылки и нажать на кнопку
"Compare". Сравнение ведётся с помощью программы diff командой
"diff -u". Путь к команде diff можно задать с помощью глобальной
конфигурационной переменной `diff_path'. При отображении
страницы просмотра исходного текста в поле ввода номера
сравниваемой посылки записывается номер ближайшей (в сторону
уменьшения) посылки, для которой значения идентификатора
команды, идентификатора языка программирования и идентификатора
задачи совпадают со значениями соответствующих полей текущей
посылки. 

userlist-server
---------------
В базу пользователей добавлено новое поле `never_clean'. Если
для некоторого пользователя это поле установлено в значение
`true', утилита clean-users, которая просматривает все базы
посылок и отмечает команды, не задавшие ни одного вопроса и не
пославшие ни одну посылку, как кандидаты на удаление, никогда не
будет отмечать таких пользователей как кандидатов на удаление.

edit-userlist
-------------
Поддерживается редактирование нового поля `never_clean'.

clean-users
-----------
Корректно обрабатываются турниры с пустым журналом посылок.
Поддерживается флаг `never_clean' участника.
Для каждого пользователя собирается информация о турнирах, в
которых этот пользователь запускал команду VIRTUAL_START или
VIRTUAL_STOP. Если некоторый пользователь не послал ни одной
программы и не задал ни одного вопроса, но имеет события
VIRTUAL_START или VIRTUAL_STOP, зарегистрированные за ним, все
номера виртуальных турниров, в которых есть такие события,
печатаются в разделе "Virtual contests for start/stop only
users".

serve
-----
Исправлены некоторые ошибки в процедуре слияния журналов
посылки. Данная возможность должна теперь работать нормально
во всех ситуациях.

Версия 2.1.26 (20040219)
========================
Добавлено сохранение некоторых параметров состояния клиента
участника турнира. Добавлена новая конфигурационная переменная
для указания каталога сохранения состояния.

Добавлена поддержка печати на принтер.

Исправлено большое количество ошибок, проявляющихся в режиме турнира
`OLYMPIADS'.

В формат конфигурационного файла `contest.xml' внесено изменение,
которое делают его несовместимым с форматом файла предыдущих версий.
Система ejudge при чтении конфигурационных файлов старых версий будет
выдавать ошибку. Чтобы исправить конфигурационный файл сделайте в нем
замену названия бита полномочий SUBMIT_RUNS на SUBMIT_RUN.

serve
-----
В базу посылок добавлено поле `pages' для сохранения количества
напечатанных страниц для данной посылки. Это поле
устанавливается, когда посылка печатается самим участником с
помощью CGI-программы team. Поле используется, чтобы не печатать
несколько раз одну и ту же посылку, и для подсчёта общего
количества напечатанных страниц для проверки квоты страниц.

serve,master
------------
Добавлена поддержка редактирования значения поля `pages'.

serve,master,judge,team
-----------------------
Добавлена поддержка печати листинга программы на принтер. Для
привилегированных пользователей печать доступна всегда из
диалога просмотра информации о посылке. Для печати
привилегированный пользователь должен иметь полномочие
`PRINT_RUN'. Привилегированный пользователь может напечатать
несколько раз одну и ту же посылку, для него не ограничивается
количество напечатанных страниц. Обычному участнику турнира
печать доступна, если установлена глобальная конфигурационная
переменная `enable_printing'. Максимальное количество страниц
для одного пользователя устанавливается с помощью глобальной
конфигурационной переменной `team_page_quota' (по умолчанию
значение равно 50). Квота учитывает заглавную страницу,
содержащую информацию о посылке.

Для печати используется программа `a2ps'. Путь к данной
программе задаётся с помощью глобальной конфигурационной
переменной `a2ps_path'. Дополнительные аргументы программы
`a2ps' задаются с помощью глобальной конфигурационной переменной
`a2ps_args'. Путь к программе постановки в очередь печати `lpr'
задаётся с помощью глобальной конфигурационной переменной
`lpr_path'. Дополнительные аргументы для программы `lpr'
задаются с помощью глобальной конфигурационной переменной
`lpr_args'.

contest.xml
-----------
Добавлен новый бит полномочий `PRINT_RUN'. Бит полномочий
`SUBMIT_RUNS' переименован в `SUBMIT_RUN', поэтому новая версия
системы будет выдавать ошибку при чтении конфигурационных файлов
предыдущих версий.

userlist-server
---------------
При генерации случайных паролей в паролях не используются
символы, которые легко спутать друг с другом: 'l', 'I', '1',
'O', '0'.

serve,run
---------
Добавлена новая конфигурационная переменная описания задачи
`accept_partial'. Переменная действует только в режиме турнира
OLYMPIAD. Если эта переменная установлена в true, то решения
участников принимаются на проверку даже в случае, когда они не
прошли всех тестов из условия. Соответствующим образом обновлён
протокол взаимодействия программ `serve' и `run'.

serve
-----
В действительности сделано, чтобы привилегированный пользователь
мог делать посылки до начала и после окончания турнира. Эта
возможность заявлялась, но была отключена.

serve
-----
Поскольку добавление очередной посылки может добавлять её не в
конец базы посылок, после добавления посылки может потребоваться
переименование архивных файлов. Ранее добавление посылки не в
конец приводило к потере посылки.

serve
-----
В режиме турнира OLYMPIAD переключиться в режим проверки можно и
до конца турнира.

serve,master
------------
Добавлена поддержка команды `Set accepting mode', которая
переключает турнир из режима проверки в режим приёма посылок.
Команда действует только в режиме турнира OLYMPIAD.

run
---
Существенно улучшена поддержка режима турнира `OLYMPIAD'. Этот
режим почти всегда обрабатывается так же, как `KIROV'. Улучшены
возможности по прерыванию работы программы по Ctrl-C. Во всех
случаях поддерживаются тесты с нулевой суммой баллов.

serve
-----
При перезаписи архивного файла (например, протокола
тестирования) предварительно удаляются предыдущая запись с
данным номером. Это исправляет ошибку, когда, например,
предыдущая запись не была сжата (не имела суффикс .gz), а новая
запись - сжата (имеет суффикс .gz в имени файла). Таким образом
оказывается, что архив протоколов содержит два протокола для
некоторой посылки. Эти два протокола в некоторых ситуациях
конфликтуют друг с другом.

serve
-----
Добавлена поддержка сохранения параметров состояния клиента
участника турнира. Синтаксис файла состояния основан на XML. В
настоящее время сохраняется пока статус просмотра сообщений, то
есть для каждого сообщения, адресованного участнику турнира
сохраняется, просматривал ли участник это сообщение. Файлы
состояния участника подгружаются по требованию и создаются при
необходимости. Если сохраняемое состояние участника изменилось,
оно сохраняется в момент завершения работы программы serve.

Добавлена новая глобальная конфигурационная переменная
`team_extra_dir'. Она содержит каталог, в котором размещаются
файлы сохраняемого состояния участников. По умолчанию эта
переменная равна ${var_dir}/team_extra, где ${var_dir} -
значение глобальной конфигурационной переменной `var_dir'.
Файлы сохраняемого состояния хранятся в подкаталогах этого
каталога, организованные в дерево каталогов. В каждом каталоге
находится не более 32 подкаталогов или непосредственно файлов,
аналогично тому, как организован архив посылок.

serve,team
----------
Если у участника турнира есть непросмотренные сообщения, в
разделе состояния турнира выводится сообщение "You have X unread
message(s)" (или "Непросмотренных сообщений: X"). У участника
турнира сообщения, направленные участником судьям имеют статус
"U", если эти сообщения не просмотрены судьями (у судей эти же
сообщения имеют статус "N"). Сообщения от судей всем участникам
или от судей конкретному участнику имеют статус "N", если
сообщения не были ни разу просмотрены этим участником.
Просмотренные сообщения не имеют специального статуса.

serve
-----
Добавлена новая конфигурационная переменная описания задачи
`hidden'. Если эта переменная установлена в true, такая задача
не показывается в таблице текущих результатов турнира, но
остаётся доступной для сдачи участниками.

master,judge
------------
Если в URL не задан идентификатор турнира contest_id, и имя
CGI-программы имеет вид master или judge, то выводится
приглашение ко вводу регистрационного имени, пароля и
идентификатора турнира.

userlist-server
---------------
Резервные копии базы данных пользователей, которые сохраняются
один раз в 24 часа, теперь записываются в сжатом формате GZIP.

Если сохранение текущего состояния базы пользователей
завершилось из-за ошибки, временный файл, создаваемый в процессе
записи, удаляется.

compile
-------
Улучшена обработка ошибочных ситуаций. Программа compile теперь
не завершит свою работу в случае, если исчерпано дисковое
пространство. Вместо этого она будет пытаться выполнить запись с
интервалом 5 сек.

compile,run
-----------
Если программа переходит в состояние ожидания сериализационного
семафора (см. описание глобальной конфигурационной переменной
`cr_serialization_key'), на стандартный поток ошибок печатается
диагностическое сообщение "waiting for lock".

Версия 2.1.25 (20031229)
========================
Добавлены новые возможности редактирования базы посылок. Формат
конфигурационных файлов не изменился.

serve,master
------------
На странице просмотра исходного кода текущей посылки
администратор турнира может редактировать количество тестов, на
которых прошла данная посылка, а также количество очков за эту
посылку. Последнее доступно только в режиме турнира KIROV или
OLYMPIAD.

serve,master
------------
Со страницы просмотра исходного кода текущей посылки
привилегированный пользователь может быстро перейти к просмотру
протокола тестирования и наоборот.

userlist-server,register
------------------------
При добавлении новых членов команды сервер базы пользователей
строже проверяет ограничения на максимальное количество членов
команды. 

serve
-----
В базу данных посылок добавлено поле `is_readonly', которое
может принимать булевское значение. Если это поле установлено в
true, всякое изменение полей данной посылки, за исключением
самого поля `is_readonly' запрещено. Посылка с установленным
флагом `is_readonly' никогда не пересуживается.

serve,master
------------
Добавлена поддержка редактирования нового поля `is_readonly'.

serve,run
---------
Добавлена новая конфигурационная переменная `disable_testing',
которая доступна как на глобальном уровне, так и на уровне
описания задачи. Если эта конфигурационная переменная для
некоторой задачи установлена в true, никакого тестирования
посылок по этой задаче не ведётся. При поступлении они получают
статус "Accepted for testing", который может быть изменён
вручную. Программа run для задач с установленным флагом
`disable_testing' не проверяет наличия тестов и проверяющей
программы. Все запросы на тестирование данной задачи
игнорируются.

serve,master,judge
------------------
В язык фильтра посылок добавлены новые выражения для новых полей
базы данных посылок: imported[(run_id)], curimported,
hidden[(run_id)], curhidden, readonly[(run_id)], curreadonly,
varant[(run_id)], curvariant, rawvariant[(run_id)],
currawvariant. Отличие конструкции rawvariant от variant в том,
что rawvariant всегда берёт значение номера варианта из базы
посылок. variant, если значение в базе посылок установлено в 0
(то есть используется вариант из таблицы вариантов), возвращает
номер варианта из таблицы вариантов.

serve,master,judge
------------------
При просмотре подробной информации о посылке ("View source")
некоторые поля помечаются как гиперссылки. При нажатии на них
автоматически конструируется выражение для фильтра посылок,
отбирающее только посылки, у которых значение соответствующего
поля совпадает со значением поля у текущей посылки. Например,
если проследовать по гиперссылке в поле "IP-address", выражение
фильтра будет равно "ip == ip(run_id)", где вместо run_id будет
подставлен номер текущей посылки. Таким образом фильтруются
только записи в базе, соответствующие посылкам с того же самого
IP-адреса. Предыдущее выражение фильтра будет очищено.

serve
-----
Добавлена конфигурационная переменная описания задачи
`variable_full_score'. Если эта переменная установлена в true,
изменяется правило вычисления баллов за полностью решённую
задачу в режимах турнира OLYMPIAD или KIROV. В обычном режиме за
полностью решённую задачу (то есть за посылку, которая имеет
статус OK) даётся количество баллов, определённое в переменной
`full_score' описания задачи (далее из этого числа вычитаются
штрафные баллы и т. д.). В режиме, включаемом конфигурационной
переменной `variable_full_score' за удачную посылку (то есть
посылку, имеющую статус OK) даётся столько баллов, сколько
указано в поле score этой посылки. Данная конфигурационная
переменная удобна в случаях, если статус OK выставляется вручную
(например, по результатам ручного тестирования), и необходимо
ранжировать принятые решения по баллам.

serve,master,judge
------------------
В список участников турнира, генерируемый по ссылке "View teams"
из главного экрана, добавлена возможность быстрого включения
фильтра посылок для некоторого участника. Для этого нужно
кликнуть на гиперссылке идентификатора участника (первое поле).
Просмотр вернётся в главный экран и будет включён фильтр на
идентификатор пользователя.

После редактирования поля в режиме просмотра исходного текста
посылки ("View source" из главного экрана) текущий экран не
переключается на главный, а остаётся в режиме просмотра
исходного текста этой посылки.

master,judge
------------
Из формы входа в программу убран выбор возможного варианта
поддержки сессии. Программы master и judge поддерживают три
варианта: 1) передавать всегда login/password в скрытых
переменных формы, 2) генерировать идентификатор сессии и
передавать его в скрытых переменных формы, 3) генерировать
идентификатор сессии и передавать его в URL, 4) генерировать
идентификатор сессии и сохранять его в cookie. По умолчанию
предлагался выбор третьего варианта. Теперь меню выбора удалено,
и всегда выбирается третий вариант. В дальнейшем планируется
удалить из программ master, judge, team обработку остальных
вариантов поддержки сессии.

Версия 2.1.24 (20031208)
========================
В данной версии добавлены новые возможности, и незначительно
изменились некоторые директивы конфигурационных
файлов. Изменился формат файла состояния сервера, который
генерируется программой serve и используется CGI-программами
master, judge и team. Новые версии этих программ выдадут ошибку
чтения файла состояния и немедленно завершатся при попытке их
запустить в каталоге турнира старой версии. Чтобы устранить эту
неприятность, один раз запустите serve на этом турнире. Как
только файл состояния будет перегенерирован, serve можно
остановить.

Из архива исходных текстов системы удалены все неиспользуемые
исходные тексты и устаревшие дополнительные материалы. В
результате архив значительно сократился в размере.

Конфигурационный файл contest.xml
---------------------------------
Удалена поддержка элемента <observer_access>. Этот элемент был
введён для CGI-программы `observer', которая не была
реализована. Удалена поддержка бита полномочий OBSERVER_LOGIN.

Добавлен новый бит полномочий SUBMIT_RUNS. Если этот бит для
некоторого пользователя установлен, этот пользователь позволяет
отправлять решения на проверку из-под CGI-программ master или
judge. Естественно, этот пользователь должен иметь полномочия
запускать соответствующую программу.

serve
-----
Оптимизирована структура архивов посылок и протоколов
тестирования. Вместо размещения всех файлов архива в одном
каталоге (например, все протоколы тестирования размещались в
каталоге var/archive/reports каталога турнира), файлы архива
структурируются в дерево таким образом, чтобы каталог на каждом
уровне содержал не более 32 записей. Максимальное количество
файлов в архиве ограничено примерно 1 миллионом, поэтому для
размещения всех файлов достаточно 3 уровней подкаталогов.
Например, протокол тестирования для посылки с номером 1905 будет
размещён в файле var/archive/reports/0/1/R/001905.
Данная оптимизация позволяет существенно увеличить скорость
открытия файлов для файловых систем, в которых записи в каталоге
хранятся в неупорядоченном виде (например, ext2/ext3).
Чтобы отменить такую форму хранения архивных файлов, необходимо
установить глобальную конфигурационную переменную
use_dir_hierarchy в 0 следующим образом:
use_dir_hierarchy = 0
По умолчанию поддержка иерархической структуры архивных каталогов
включена.

Старый и новый форматы хранения архивных файлов совместимы снизу
вверх, то есть новая версия системы ejudge будет корректно
открывать архивы, созданные в системах предыдущих версий. Однако
если поддержка иерархической структуры включена, то все
последующие посылки уже будут сохраняться в иерархической
системе каталогов и таким образом станут недоступными для
системы ejudge предыдущих версий.

Все архивные файлы, размер которых больше некоторого значения
(по умолчанию - 4096 байт) сжимаются алгоритмом gzip и
сохраняются в файле с суффиксом .gz. Настроить минимальный
размер сжимаемого файла можно с помощью глобальной
конфигурационной переменной `min_gzip_size' файла конфигурации
турнира serve.cfg. Размер по умолчанию в 4 килобайта выбран, так
как 4 Кб - размер минимальной единицы выделения дискового
пространства в современных версиях ext2/ext3 на архитектуре ia32
(этот размер совпадает с размером страницы виртуальной памяти).
Сжимать файлы меньшего размера бессмысленно, так как размер
занимаемой дисковой памяти от этого не уменьшится. Чтобы
полностью отменить сжатие архивных файлов необходимо установить
в 0 конфигурационную переменную use_gzip:
use_gzip = 0

В базе данных посылок добавлено поле для сохранения варианта
задачи. По умолчанию вариант задачи равен 0, то есть берётся
вариант задачи согласно файлу отображения вариантов
(varant_map_file). Но из-под программ judge и serve можно
послать решения, выбирая вариант явно. Кроме того, администратор
может принудительно изменить вариант задачи.

В базе данных посылок добавлен флаг "скрытой" посылки. Такие
посылки тестируются, но никак не влияют на таблицу текущих
результатов, не отображаются в публичном журнале посылок и не
могут быть проэкспортированы в XML.

serve,master,judge
------------------
Привилегированный пользователь может отправлять решения на
проверку, если у него установлен бит полномочий SUBMIT_RUNS. В
генерируемую программами master и judge html-страницу добавлена
форма посылки решения. Решение, посылаемое из программ master и
judge добавляется в базу посылок с флагом "невидимое" (hidden),
то есть оно тестируется, но никак не влияет на таблицу текущих
результатов, не отображается в публичном журнале посылок и не
может быть проэкспортировано в XML. Привилегированный
пользователь может посылать решения любой задачи (даже той,
deadline по которой уже истёк), любого варианта задачи на выбор
(если задача вариантная) с использованием любого языка
программирования (даже такого, для которого установлен флаг
disabled). Для таких посылок не проверяется время посылки, то
есть они могут быть сделаны до момента начала или после момента
окончания турнира. Для таких посылок не проверяются квоты
суммарного размера посланных файлов, количества посылок и т. д.

serve,master
------------
Добавлена возможность редактирования новых полей базы данных
посылок: variant, is_hidden. Установка номера варианта в 0
означает, что для нахождения номера варианта будет
использоваться файл отображения вариантов. 

judge
-----
Исправлена ошибка неправильного форматирования таблицы посылок
участников для событий VIRTUAL START, VIRTUAL STOP и пустой
записи EMPTY.

run
---
Допускается указание цены одного теста равной 0 баллов. Ранее
установка цены теста в 0 баллов была эквивалентна установке цены
теста в значение по умолчанию (1 балл). Тесты ценой 0 баллов
корректно обрабатываются. Тесты ценой 0 баллов полезны для того,
чтобы оценивать задачу по системе "принято"/"непринято", но при
этом предоставлять участникам детализированную информацию о
результатах работы их программы.

serve,master
------------
Изменить продолжительность турнира можно и после его окончания
(как окончания из-за команды администратора "Stop contest", так и
из-за истечения времени). Для этого должна быть установлена
конфигурационная переменная `enable_continue' файла конфигурации
турнира `serve.cfg', например
enable_continue

Администратор турнира может уменьшить заявленную продолжительность
турнира с помощью команды "Change duration" (в предыдущих версиях
продолжительность турнира могла только увеличиваться). Однако в случае,
если турнир уже идёт, уменьшение его длительности не может приводить
к тому, что текущий момент времени окажется позднее момента окончания
турнира из-за исчерпания времени турнира. Попытка такого изменения
продолжительности блокируется.

Запрещено уменьшение длительности неограниченного по времени турнира,
а также увеличение длительности ограниченного по времени турнира
до неограниченного по времени турнира.

Расширены возможности продолжения остановленного турнира.
Можно продолжить турнир конечной длительности, если его
установленная длительность такова, что текущий момент времени не
находится после окончания турнира из-за истечения времени
турнира. Турнир, уже закончившийся из-за истечения времени,
можно продлить, сначала увеличив его длительность с помощью
команды "Change duration", а затем продолжив турнир с помощью
команды "Continue". Обратите внимание, что возможность
продолжения турнира доступна, только если в конфигурационном
файле турнира установлена глобальная конфигурационная переменная
enable_continue.

serve
-----
Значение конфигурационной переменной board_fog_time, равное 0
означает, что таблица результатов вообще не "замораживается".
В предыдущих версиях отключить заморозку было невозможно (можно
было включить заморозку за 1 минуту до конца турнира).

Введены новые глобальные конфигурационные переменные турнира
`stand_freeze_time' и `stand_melt_time', которые являются
синонимами для `board_fog_time' и `board_unfog_time'
соответственно. Новые имена более соответствуют своему
назначению. Поддержка старых имён сохранена. 

serve,master,judge,team
-----------------------
Если для турнира установлен режим заморозки результатов, время
заморозки отображается клиентам в разделе состояния сервера.

team
----
Из раздела состояния сервера убрана строка "Время клиента:", так
как её название не соответствует её назначению. Время клиента
всегда означало момент календарного времени, в который на
сервере работает CGI-программа обслуживания клиентов team,
master или judge.

serve,team
----------
В конфигурационном файле турнира поддерживается новая глобальная
конфигурационная переменная `team_enable_ce_view'. Если эта
переменная установлена в ненулевое значение, в случае, если
участник на некоторой посылке получает ошибку компиляции, ему
становится доступным файл диагностики компилятора, даже если
показ протокола тестирования для участников (глобальная
конфигурационная переменная `team_enable_rep_view') отключён.

В конфигурационном файле турнира поддерживается новая глобальная
переменная и переменная описания задачи
`team_show_judge_report'. Если эта конфигурационная переменная
установлена в ненулевое значение, и включён режим показа
протокола тестирования участникам (глобальная конфигурационная
переменная `team_enable_rep_view'), участникам становится
доступным судейский протокол тестирования. Судейский протокол
тестирования содержит входные данные (тесты), результат работы
программы, вывод программы на стандартный поток ошибок, вывод
проверяющей программы и т. д. По умолчанию участники могут
видеть только сокращённый протокол, содержащий лишь результаты
проверки программы на тестах, но не сами тесты и результат
работы программы на них. Режим показа полного протокола
тестирования может включаться и выключаться для каждой задачи
индивидуально с помощью явного указания значения
конфигурационной переменной `team_show_judge_report' в описании
задачи. 

serve
-----
Исправлена ошибка, когда serve завершается аварийно (по assert),
если на турнир не был зарегистрирован ни один пользователь.

serve,master
------------
Администратор турнира может приостановить проверку поступающих
решений с помощью команды "Suspend testing". В режиме
приостановленного тестирования все решения принимаются от
участников как обычно, но не отправляются на тестирование, а
заносятся в базу посылок со статусом "Accepted for testing"
("Принято на проверку"). Решения будут оставаться в этом статусе
до тех пор, пока администратор не отправит их на проверку явно
или с помощью команды "Judge suspended runs". Назначение этой
команды --- снизить нагрузку на сервер турнира, если он
одновременно является компьютером, на котором идёт компиляция
и/или запуск решений, в конце турнира, когда поток посылок,
обычно, очень интенсивный. В режиме приостановки проверки вместо
команды "Suspend testing" становится доступна команда
"Resume testing", снова включающая режим немедленной проверки
решений.

Администратор турнира может направить на проверку все решения,
полученные в период приостановки тестирования, с помощью команды
"Judge suspended runs".

serve,master,judge
------------------
В выражении для фильтра посылок можно использовать конструкции
`status' и `curstatus', которые являются синонимами для `result'
и `curresult'.

Версия 2.1.23 (20031121)
========================
В данной версии исправлены замеченные ошибки предыдущей версии.
Новых возможностей не добавлено. Формат конфигурационных файлов
не изменился.

В архив исходных текстов добавлен неофициальный русский перевод
Стандартной общественной лицензии GNU (автор перевода - Елена
Тяпкина). Система ejudge распространяется на условиях данной
лицензии. Перевод находится в файле COPYING.RUS.

serve, compile, run
-------------------

В конфигурационных файлах поддерживаются два вида кавычек:
одинарные и двойные, а также символ \ для экранирования
следующего за ним символа. Правила использования этих
специальных символов такие же, как в файле дополнительной
информации о тестах test.inf. Например:
table_head_style = 'h2 style="common"'

serve/master
------------

При экспорте журнала посылок в формате XML корректно
обрабатываются специальные символы (", &) - они заменяются на
соответствующие HTML/XML последовательности (&quot; &amp;).

team
----

В случае ошибки регистрации пользователя выдаётся сообщение об
ошибке, в котором более точно указывается причина ошибки:
пользователь не зарегистрирован на турнир, пользователь
заблокирован администратором или неверный
логин/пароль/идентификатор турнира.

run
---

Символы `#' внутри последовательностей символов в кавычках " и
', а также после \ обрабатываются корректно. Таким образом можно
использовать символ `#' в аргументах командной строки,
передаваемых тестируемой программе.

userlist-server
---------------

При записи базы пользователей в формате XML специальных
XML-cимволы (", &, <, >) обрабатываются корректно, то есть
заменяются на соответствующие последовательности (&quot; и т. д.).

Для поиска логина пользователя или его cookie реализован
просмотр хэш-таблиц вместо последовательного просмотра
списков. Это позволило ускорить поиск в 100 раз.

register
--------

Исправлено обрезание полей ввода по символу "Номер". Этот символ
теперь корректно заменяется на свой Unicode-код &#XXXX;.

libchecker.a
------------

Если в проверяющей программе установлен флаг NEED_TGZ,
библиотека libchecker.a сохраняет в глобальных переменных
`dir_in_path' и `dir_out_path'. В переменной `dir_in_path'
находится путь к каталогу, в котором находится содержимое
рабочего каталога, создаваемого перед запуском тестируемой
программы (dir_in_path). В переменной `dir_out_path' находится
путь к каталогу в рабочем каталоге тестирования. Таким образом,
чтобы открыть входной каталог тестируемой программы можно
использовать вызов функции opendir(dir_in_path), а чтобы открыть
выходной каталог тестируемой программы - opendir(dir_out_path).

В библиотеку добавлены новые функции:
  checker_read_corr_double,
  checker_read_corr_long_long,
  checker_read_int,
  checker_read_in_long_double,
  checker_read_long_double,
  checker_read_long_long.

