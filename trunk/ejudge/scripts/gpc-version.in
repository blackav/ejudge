#!/bin/sh
# $Id$
# Copyright (c) 2005-2008 Alexander Chernov <cher@ejudge.ru>

LANG_CONFIG_DIR="@ac_cv_lang_config_dir_expanded@"

function failure()
{
  rm -f conftest*
  echo 'version_gpc='
  echo 'arg_gpc="'"${arg_gpc}"'"'
  echo 'GPCRUN=false'
  echo 'GPCDIR='
  [ "${verbose}" = 1 ] && echo "no" >&2
  exit 1
}

if [ x"$1" = x-v ]
then
  verbose=1
  shift
fi

# recheck the language
if [ x"$1" = x-r ]
then
  arg_gpc="$2"
  [ x"$2" != x ] && GPCRUN="$2"
  [ "${GPCRUN}" = "" ] && GPCRUN="gpc"

  [ "${verbose}" = 1 ] && echo -n "checking whether GNU Pascal is available..." >&2
  "${GPCRUN}" -v >/dev/null 2>/dev/null || failure
  version_gpc=`"${GPCRUN}" --version | gawk '{ print $1; exit 0; }'` || failure
  [ "${version_gpc}" != "" ] || failure
  cat > conftest.pas <<EOF
begin
  writeln('ok');
end.
EOF
  "${GPCRUN}" -static conftest.pas -o conftest 2>/dev/null >/dev/null || failure
  [ -x conftest ] || failure
  ./conftest 2>/dev/null >/dev/null || failure

  rm -f ./conftest*
  GPCDIR=`dirname "${GPCRUN}"`
  [ "${GPCDIR}" = . ] && GPCDIR=""
  echo 'version_gpc="'"${version_gpc}"'"'
  echo 'arg_gpc="'"${arg_gpc}"'"'
  echo 'GPCRUN="'"${GPCRUN}"'"'
  echo 'GPCDIR="'"${GPCDIR}"'"'
  [ "${verbose}" = 1 ] && echo "yes, ${GPCRUN}, ${version_gpc}" >&2
  exit 0
fi

if [ x"$1" = x-l ]
then
  echo "GNU Pascal compiler (obsolete)"
  exit 0
fi

if [ x"$1" = x-b ]
then
  echo "GNU Pascal"
  exit 0
fi

if [ x"$1" = x-c ]
then
  cat <<EOF
src_sfx = ".pas"
EOF
  exit 0
fi

[ "${EJUDGE_LANG_CONFIG}" = "" ] && EJUDGE_LANG_CONFIG="${LANG_CONFIG_DIR}/gpc.cfg"

if [ -f "${EJUDGE_LANG_CONFIG}" ]
then
  . "${EJUDGE_LANG_CONFIG}"
else
  GPCRUN="gpc"
  GPCDIR=
fi

if [ x"${GPCRUN}" = x -o x"${GPCRUN}" = xfalse ]
then
  echo "This language is not supported." >&2
  exit 1
fi

if [ x"${GPCDIR}" != x ]
then
    PATH="${GPCDIR}:${PATH}"
fi

if [ x"$1" = x-p ]
then
    echo "${GPCRUN}"
    exit 0
fi
    
"${GPCRUN}" --version 2>/dev/null >/dev/null || exit 1

[ x"$1" = x-f ] && echo -n "GNU Pascal "

"${GPCRUN}" --version | gawk '{ print $1; }'
[ $? != 0 -a $? != 1 ] && exit 1
exit 0
